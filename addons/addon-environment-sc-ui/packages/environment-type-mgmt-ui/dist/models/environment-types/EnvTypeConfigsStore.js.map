{"version":3,"sources":["../../../src/models/environment-types/EnvTypeConfigsStore.js"],"names":["EnvTypeConfigsStore","BaseStore","named","props","id","types","identifier","envTypeConfigs","optional","map","EnvTypeConfig","envTypeConfigVars","EnvTypeConfigVar","tickPeriod","actions","self","superCleanup","cleanup","doLoad","Promise","all","runInAction","exiting","newItem","setEnvTypeConfig","setEnvTypeConfigVar","envTypes","clear","createEnvTypeConfig","envTypeConfig","createdEnvTypeConfig","createdEnvTypeConfigModel","create","set","updateEnvTypeConfig","updatedEnvTypeConfig","previous","get","deleteEnvTypeConfig","envTypeConfigId","views","list","arr","_","filter","c","allowedToUse","orderBy","listAll","empty","isEmpty","getEnvTypeConfig"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\n\nimport { consolidateToMap, mapToArray } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport {\n  createEnvTypeConfig,\n  deleteEnvTypeConfig,\n  getAllEnvTypeConfigs,\n  getEnvTypeConfigVars,\n  updateEnvTypeConfig,\n} from '../../helpers/api';\nimport { EnvTypeConfig } from './EnvTypeConfig';\nimport { EnvTypeConfigVar } from './EnvTypeConfigVar';\n\n// ==================================================================\n// EnvTypeConfigsStore\n// ==================================================================\nconst EnvTypeConfigsStore = BaseStore.named('EnvTypeConfigsStore')\n  .props({\n    // Id of the EnvType\n    id: types.identifier,\n\n    // map of EnvTypeConfig with key = EnvTypeConfig.id, value = EnvTypeConfig MST model instance\n    envTypeConfigs: types.optional(types.map(EnvTypeConfig), {}),\n\n    // map of EnvTypeConfigVar with key = EnvTypeConfigVar.name, value = EnvTypeConfigVar MST model instance\n    envTypeConfigVars: types.optional(types.map(EnvTypeConfigVar), {}),\n\n    tickPeriod: 60 * 1000, // 1 minute\n  })\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const [envTypeConfigs, envTypeConfigVars] = await Promise.all([\n          getAllEnvTypeConfigs(self.id),\n          getEnvTypeConfigVars(self.id),\n        ]);\n\n        self.runInAction(() => {\n          consolidateToMap(self.envTypeConfigs, envTypeConfigs || [], (exiting, newItem) => {\n            exiting.setEnvTypeConfig(newItem);\n          });\n          consolidateToMap(\n            self.envTypeConfigVars,\n            envTypeConfigVars || [],\n            (exiting, newItem) => {\n              exiting.setEnvTypeConfigVar(newItem);\n            },\n            'name',\n          );\n        });\n      },\n\n      cleanup: () => {\n        self.envTypes.clear();\n        superCleanup();\n      },\n\n      async createEnvTypeConfig(envTypeConfig) {\n        const createdEnvTypeConfig = await createEnvTypeConfig(self.id, envTypeConfig);\n        self.runInAction(() => {\n          // Add newly created env type to env types map\n          const createdEnvTypeConfigModel = EnvTypeConfig.create(createdEnvTypeConfig);\n          self.envTypeConfigs.set(createdEnvTypeConfigModel.id, createdEnvTypeConfigModel);\n        });\n      },\n\n      async updateEnvTypeConfig(envTypeConfig) {\n        const updatedEnvTypeConfig = await updateEnvTypeConfig(self.id, envTypeConfig);\n        self.runInAction(() => {\n          const previous = self.envTypeConfigs.get(updatedEnvTypeConfig.id);\n          previous.setEnvTypeConfig(updatedEnvTypeConfig);\n        });\n      },\n\n      async deleteEnvTypeConfig(envTypeConfigId) {\n        await deleteEnvTypeConfig(self.id, envTypeConfigId);\n        self.runInAction(() => {\n          self.envTypeConfigs.delete(envTypeConfigId);\n        });\n      },\n    };\n  })\n  .views(self => ({\n    get list() {\n      const arr = _.filter(mapToArray(self.envTypeConfigs), c => c.allowedToUse);\n      return _.orderBy(arr, ['createdAt', 'name'], ['asc', 'asc']);\n    },\n    get listAll() {\n      const arr = mapToArray(self.envTypeConfigs);\n      return _.orderBy(arr, ['createdAt', 'name'], ['asc', 'asc']);\n    },\n    get empty() {\n      return _.isEmpty(self.listAll);\n    },\n    getEnvTypeConfig(id) {\n      return self.envTypeConfigs.get(id);\n    },\n  }));\n\n// Note: Do NOT register this in the appContext, if you want to gain access to an instance\n//       use EnvTypesStore.getEnvTypeConfigsStore()\nexport default EnvTypeConfigsStore;\nexport { EnvTypeConfigsStore };\n"],"file":"EnvTypeConfigsStore.js"}