{"version":3,"sources":["../../../src/models/environment-types/EnvTypeCandidate.js"],"names":["Product","types","model","productId","name","ProvisioningArtifact","id","maybeNull","optional","string","description","type","createdTime","active","guidance","ParamConstraint","AllowedValues","array","CfnParam","ParameterKey","ParameterType","IsNoEcho","Description","ParameterConstraints","EnvTypeCandidate","identifier","desc","isLatest","product","provisioningArtifact","params","actions","self","setEnvTypeCandidate","envTypeCandidate","views","descHtml","showdown","convert"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { types, getEnv, applySnapshot } from 'mobx-state-tree';\n\n// ====================================================================================================================================\n// Product -- Maps to AWS Service Catalog Product (only id and name)\n// ====================================================================================================================================\nconst Product = types.model('Product', {\n  productId: '',\n  name: '',\n});\n\n// ====================================================================================================================================\n// ProvisioningArtifact -- Maps to AWS Service Catalog Provisioning Artifact (a.k.a., Version)\n// ====================================================================================================================================\nconst ProvisioningArtifact = types.model('ProvisioningArtifact', {\n  id: '',\n  name: types.maybeNull(types.optional(types.string, '')),\n  description: types.maybeNull(types.optional(types.string, '')),\n  type: '',\n  createdTime: '',\n  active: false,\n  guidance: '',\n});\n\n// ====================================================================================================================================\n// ParamConstraint -- Maps to AWS Service Catalog Provisioning Artifact Parameter Constraints\n// ====================================================================================================================================\nconst ParamConstraint = types.model('ParamConstraint', {\n  AllowedValues: types.optional(types.array(types.optional(types.string, '')), []),\n});\n\n// ====================================================================================================================================\n// CfnParam -- Maps to AWS Service Catalog Provisioning Artifact Parameters - in turn maps to AWS CloudFormation Stack Input Parameters\n// ====================================================================================================================================\nconst CfnParam = types.model('CfnParam', {\n  ParameterKey: '',\n  ParameterType: '',\n  IsNoEcho: false,\n  Description: types.maybeNull(types.optional(types.string, '')),\n  ParameterConstraints: types.optional(ParamConstraint, {}),\n});\n\n// ====================================================================================================================================\n// EnvTypeCandidate\n// ====================================================================================================================================\nconst EnvTypeCandidate = types\n  .model('EnvTypeCandidate', {\n    id: types.identifier,\n    name: '',\n    desc: types.maybeNull(types.optional(types.string, '')),\n    isLatest: false,\n    product: types.optional(Product, {}),\n    provisioningArtifact: types.optional(ProvisioningArtifact, {}),\n    params: types.optional(types.array(CfnParam), []),\n  })\n  .actions(self => ({\n    setEnvTypeCandidate(envTypeCandidate) {\n      applySnapshot(self, envTypeCandidate);\n    },\n  }))\n  .views(self => ({\n    get descHtml() {\n      const showdown = getEnv(self).showdown;\n      return showdown.convert(self.desc);\n    },\n  }));\nexport default EnvTypeCandidate;\nexport { EnvTypeCandidate };\n"],"file":"EnvTypeCandidate.js"}