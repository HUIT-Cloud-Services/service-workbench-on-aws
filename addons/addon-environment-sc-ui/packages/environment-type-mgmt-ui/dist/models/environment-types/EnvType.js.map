{"version":3,"sources":["../../../src/models/environment-types/EnvType.js"],"names":["EnvType","EnvTypeCandidate","named","props","rev","status","types","enumeration","createdAt","createdBy","updatedAt","updatedBy","actions","self","setEnvType","envType","views","isApproved","isNotApproved"],"mappings":";;;;;;;AAeA;;AAEA;;AACA;;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA,IAAMA,OAAO,GAAGC,mCAAiBC,KAAjB,CAAuB,SAAvB,EACbC,KADa,CACP;AACLC,EAAAA,GAAG,EAAE,CADA;AAELC,EAAAA,MAAM,EAAEC,qBAAMC,WAAN,CAAkB,eAAlB,EAAmC,0CAAnC,CAFH;AAGLC,EAAAA,SAAS,EAAE,EAHN;AAILC,EAAAA,SAAS,EAAE,EAJN;AAKLC,EAAAA,SAAS,EAAE,EALN;AAMLC,EAAAA,SAAS,EAAE;AANN,CADO,EASbC,OATa,CASL,UAAAC,IAAI;AAAA,SAAK;AAChBC,IAAAA,UADgB,sBACLC,OADK,EACI;AAClB,wCAAcF,IAAd,EAAoBE,OAApB;AACD;AAHe,GAAL;AAAA,CATC,EAcbC,KAda,CAcP,UAAAH,IAAI;AAAA,SAAK;AACd,QAAII,UAAJ,GAAiB;AACf,aAAO,mCAAWJ,IAAI,CAACR,MAAhB,CAAP;AACD,KAHa;;AAId,QAAIa,aAAJ,GAAoB;AAClB,aAAO,sCAAcL,IAAI,CAACR,MAAnB,CAAP;AACD;;AANa,GAAL;AAAA,CAdG,CAAhB;;;eAuBeL,O","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { types, applySnapshot } from 'mobx-state-tree';\n\nimport { EnvTypeCandidate } from './EnvTypeCandidate';\nimport { getValidStatuses, isApproved, isNotApproved } from './EnvTypeStatusEnum';\n\n// ====================================================================================================================================\n// EnvType -- (is an EnvTypeCandidate that's already imported)\n// ====================================================================================================================================\nconst EnvType = EnvTypeCandidate.named('EnvType')\n  .props({\n    rev: 0,\n    status: types.enumeration('EnvTypeStatus', getValidStatuses()),\n    createdAt: '',\n    createdBy: '',\n    updatedAt: '',\n    updatedBy: '',\n  })\n  .actions(self => ({\n    setEnvType(envType) {\n      applySnapshot(self, envType);\n    },\n  }))\n  .views(self => ({\n    get isApproved() {\n      return isApproved(self.status);\n    },\n    get isNotApproved() {\n      return isNotApproved(self.status);\n    },\n  }));\n\nexport default EnvType;\nexport { EnvType };\n"],"file":"EnvType.js"}