{"version":3,"sources":["../../../src/models/environment-types/EnvTypeStore.js"],"names":["EnvTypeStore","BaseStore","named","props","envTypeId","actions","self","superCleanup","cleanup","doLoad","parent","rawEnv","addEnvType","views","envType","getEnvType"],"mappings":";;;;;;;AAeA;;AACA;;AAEA;;;;;;AAEA;AACA;AACA;AACA,IAAMA,YAAY,GAAGC,qBAAUC,KAAV,CAAgB,cAAhB,EAClBC,KADkB,CACZ;AACLC,EAAAA,SAAS,EAAE;AADN,CADY,EAKlBC,OALkB,CAKV,UAAAC,IAAI,EAAI;AACf;AACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAA1B;AAEA,SAAO;AACCC,IAAAA,MADD,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,gBAAAA,MADO,GACE,8BAAUJ,IAAV,EAAgB,CAAhB,CADF;AAAA;AAAA,uBAEQ,qBAAWA,IAAI,CAACF,SAAhB,CAFR;;AAAA;AAEPO,gBAAAA,MAFO;AAGbD,gBAAAA,MAAM,CAACE,UAAP,CAAkBD,MAAlB;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAId,KALI;AAOLH,IAAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,YAAY;AACb;AATI,GAAP;AAWD,CApBkB,EAsBlBM,KAtBkB,CAsBZ,UAAAP,IAAI;AAAA,SAAK;AACd,QAAIQ,OAAJ,GAAc;AACZ,UAAMJ,MAAM,GAAG,8BAAUJ,IAAV,EAAgB,CAAhB,CAAf;AACA,UAAMQ,OAAO,GAAGJ,MAAM,CAACK,UAAP,CAAkBT,IAAI,CAACF,SAAvB,CAAhB;AACA,aAAOU,OAAP;AACD;;AALa,GAAL;AAAA,CAtBQ,CAArB,C,CA8BA;AACA;AACA","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { getParent } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\n\nimport { getEnvType } from '../../helpers/api';\n\n// ==================================================================\n// EnvTypeStore\n// ==================================================================\nconst EnvTypeStore = BaseStore.named('EnvTypeStore')\n  .props({\n    envTypeId: '',\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const parent = getParent(self, 2);\n        const rawEnv = await getEnvType(self.envTypeId);\n        parent.addEnvType(rawEnv);\n      },\n\n      cleanup: () => {\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get envType() {\n      const parent = getParent(self, 2);\n      const envType = parent.getEnvType(self.envTypeId);\n      return envType;\n    },\n  }));\n\n// Note: Do NOT register this in the global context, if you want to gain access to an instance\n//       use envTypesStore.getEnvTypeStore()\n// eslint-disable-next-line import/prefer-default-export\nexport { EnvTypeStore };\n"],"file":"EnvTypeStore.js"}