{"version":3,"sources":["../../../src/models/forms/EnvTypeConfigForm.js"],"names":["getEnvTypeConfigForm","envTypeConfig","fields","id","label","placeholder","extra","explain","value","_","get","rules","name","desc","estimatedCostInfo","allowRoleIds","denyRoleIds","params","JSON","stringify","tags"],"mappings":";;;;;;;AAeA;;AACA;;;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,SAASA,oBAAT,CAA8BC,aAA9B,EAA6C;AAC3C,MAAMC,MAAM,GAAG;AACbC,IAAAA,EAAE,EAAE;AACFC,MAAAA,KAAK,EAAE,IADL;AAEFC,MAAAA,WAAW,EAAE,0CAFX;AAGFC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EACL,+CACA;AAHG,OAHL;AAQFC,MAAAA,KAAK,EAAEC,mBAAEC,GAAF,CAAMT,aAAN,EAAqB,IAArB,EAA2B,EAA3B,CARL;AASFU,MAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,OAAb,EAAsB,SAAtB,EAAiC,0BAAjC;AATL,KADS;AAYbC,IAAAA,IAAI,EAAE;AACJR,MAAAA,KAAK,EAAE,MADH;AAEJC,MAAAA,WAAW,EAAE,6BAFT;AAGJC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EACL,sDACA;AAHG,OAHH;AAQJC,MAAAA,KAAK,EAAEC,mBAAEC,GAAF,CAAMT,aAAN,EAAqB,MAArB,EAA6B,EAA7B,CARH;AASJU,MAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,OAAb,EAAsB,SAAtB,EAAiC,2BAAjC;AATH,KAZO;AAuBbE,IAAAA,IAAI,EAAE;AACJT,MAAAA,KAAK,EAAE,aADH;AAEJC,MAAAA,WAAW,EAAE,oCAFT;AAGJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAHH;AAIJC,MAAAA,KAAK,EAAEC,mBAAEC,GAAF,CAAMT,aAAN,EAAqB,MAArB,EAA6B,EAA7B,CAJH;AAKJU,MAAAA,KAAK,EAAE;AALH,KAvBO;AA8BbG,IAAAA,iBAAiB,EAAE;AACjBV,MAAAA,KAAK,EAAE,gBADU;AAEjBC,MAAAA,WAAW,EAAE,iEAFI;AAGjBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE;AADJ,OAHU;AAMjBC,MAAAA,KAAK,EAAEC,mBAAEC,GAAF,CAAMT,aAAN,EAAqB,mBAArB,EAA0C,EAA1C,CANU;AAOjBU,MAAAA,KAAK,EAAE;AAPU,KA9BN;AAuCbI,IAAAA,YAAY,EAAE;AACZX,MAAAA,KAAK,EAAE,eADK;AAEZE,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE;AADJ,OAFK;AAKZC,MAAAA,KAAK,EAAEC,mBAAEC,GAAF,CAAMT,aAAN,EAAqB,cAArB,EAAqC,EAArC;AALK,KAvCD;AA8Cbe,IAAAA,WAAW,EAAE;AACXZ,MAAAA,KAAK,EAAE,mBADI;AAEXE,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE;AADJ,OAFI;AAKXC,MAAAA,KAAK,EAAEC,mBAAEC,GAAF,CAAMT,aAAN,EAAqB,aAArB,EAAoC,EAApC;AALI,KA9CA;AAsDb;AACA;AACA;AACAgB,IAAAA,MAAM,EAAE;AACNb,MAAAA,KAAK,EAAE,iCADD;AAENI,MAAAA,KAAK,EAAEU,IAAI,CAACC,SAAL,CAAeV,mBAAEC,GAAF,CAAMT,aAAN,EAAqB,QAArB,EAA+B,EAA/B,CAAf;AAFD,KAzDK;AA8Db;AACA;AACA;AACAmB,IAAAA,IAAI,EAAE;AACJhB,MAAAA,KAAK,EAAE,eADH;AAEJI,MAAAA,KAAK,EAAEU,IAAI,CAACC,SAAL,CAAeV,mBAAEC,GAAF,CAAMT,aAAN,EAAqB,MAArB,EAA6B,EAA7B,CAAf;AAFH;AAjEO,GAAf;AAuEA,SAAO,sBAAWC,MAAX,CAAP;AACD,C,CAED","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { createForm } from '@aws-ee/base-ui/dist/helpers/form';\n\nfunction getEnvTypeConfigForm(envTypeConfig) {\n  const fields = {\n    id: {\n      label: 'Id',\n      placeholder: 'Unique identifier for this Configuration',\n      extra: {\n        explain:\n          'Unique identifier for this Configuration. ' +\n          'It must be an alpha numeric string between 2 and 128 characters long may contain underscore (_) and/or dash (-).',\n      },\n      value: _.get(envTypeConfig, 'id', ''),\n      rules: ['required', 'min:2', 'max:128', 'regex:/^[A-Za-z0-9-_]+$/'],\n    },\n    name: {\n      label: 'Name',\n      placeholder: 'Name for this Configuration',\n      extra: {\n        explain:\n          'Easily identifiable name for this Configuration. ' +\n          'It must be an alpha numeric string between 2 and 128 characters long may contain space, underscore (_) and/or dash (-).',\n      },\n      value: _.get(envTypeConfig, 'name', ''),\n      rules: ['required', 'min:2', 'max:128', 'regex:/^[A-Za-z0-9-_ ]+$/'],\n    },\n    desc: {\n      label: 'Description',\n      placeholder: 'Description for this Configuration',\n      extra: { explain: 'Description for this Configuration. Markdown syntax is supported' },\n      value: _.get(envTypeConfig, 'desc', ''),\n      rules: 'max:8191|string',\n    },\n    estimatedCostInfo: {\n      label: 'Estimate Costs',\n      placeholder: 'Information about estimated costs when using this Configuration',\n      extra: {\n        explain: 'Provide information about estimated cost. Markdown syntax is supported',\n      },\n      value: _.get(envTypeConfig, 'estimatedCostInfo', ''),\n      rules: 'max:1024|string',\n    },\n    allowRoleIds: {\n      label: 'Roles Allowed',\n      extra: {\n        explain: 'User roles allowed to launch workspaces with this Configuration',\n      },\n      value: _.get(envTypeConfig, 'allowRoleIds', []),\n    },\n    denyRoleIds: {\n      label: 'Roles Not Allowed',\n      extra: {\n        explain: 'User roles not allowed to launch workspaces with this Configuration',\n      },\n      value: _.get(envTypeConfig, 'denyRoleIds', []),\n    },\n\n    // The params field is not rendered directly, the InputParamsStep renders other form specifically for CFN\n    // input params and dynamically sets this field value on submit of that form\n    // This field is not used directly for display\n    params: {\n      label: 'AWS CloudFormation Input Params',\n      value: JSON.stringify(_.get(envTypeConfig, 'params', [])),\n    },\n\n    // The tags field is not rendered directly, the TagsStep renders other form specifically for tags and dynamically\n    // sets this field value on submit of that form\n    // This field is not used directly for display\n    tags: {\n      label: 'Resource Tags',\n      value: JSON.stringify(_.get(envTypeConfig, 'tags', [])),\n    },\n  };\n\n  return createForm(fields);\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport { getEnvTypeConfigForm };\n"],"file":"EnvTypeConfigForm.js"}