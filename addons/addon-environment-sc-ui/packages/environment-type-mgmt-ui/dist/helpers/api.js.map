{"version":3,"sources":["../../src/helpers/api.js"],"names":["getAllEnvTypeCandidatesNotImported","removeNulls","params","status","version","getLatestEnvTypeCandidatesNotImported","getEnvType","envTypeId","getAllEnvTypes","getApprovedEnvTypes","getNotApprovedEnvTypes","createEnvType","envType","data","id","name","desc","product","productId","provisioningArtifact","updateEnvType","rev","encodeURIComponent","deleteEnvType","approveEnvType","revokeEnvType","getEnvTypeConfigs","getAllEnvTypeConfigs","createEnvTypeConfig","envTypeConfig","_","omit","updateEnvTypeConfig","decodeURIComponent","deleteEnvTypeConfig","envTypeConfigId","getEnvTypeConfigVars"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { httpApiGet, httpApiPost, httpApiPut, httpApiDelete } from '@aws-ee/base-ui/dist/helpers/api';\nimport { removeNulls } from '@aws-ee/base-ui/dist/helpers/utils';\n\nasync function getAllEnvTypeCandidatesNotImported() {\n  return removeNulls(\n    await httpApiGet('api/workspace-type-candidates', { params: { status: 'not-imported', version: '*' } }),\n  );\n}\n\nasync function getLatestEnvTypeCandidatesNotImported() {\n  return removeNulls(await httpApiGet('api/workspace-type-candidates', { params: { status: 'not-imported' } }));\n}\n\nasync function getEnvType(envTypeId) {\n  return removeNulls(await httpApiGet(`api/workspace-types/${envTypeId}`));\n}\n\nasync function getAllEnvTypes() {\n  return removeNulls(await httpApiGet('api/workspace-types', { params: { status: '*' } }));\n}\n\nasync function getApprovedEnvTypes() {\n  return removeNulls(await httpApiGet('api/workspace-types', { params: { status: 'approved' } }));\n}\n\nasync function getNotApprovedEnvTypes() {\n  return removeNulls(await httpApiGet('api/workspace-types', { params: { status: 'not-approved' } }));\n}\n\nasync function createEnvType(envType) {\n  // Create request body for the given envType that needs to be created\n  const data = {\n    id: envType.id,\n    name: envType.name,\n    desc: envType.desc,\n    status: envType.status,\n    product: {\n      productId: envType.product.productId,\n    },\n    provisioningArtifact: {\n      id: envType.provisioningArtifact.id,\n    },\n  };\n  return removeNulls(await httpApiPost(`api/workspace-types`, { data }));\n}\n\nasync function updateEnvType(envType) {\n  // Create request body for the given envType that needs to be updated\n  const data = {\n    rev: envType.rev,\n    name: envType.name,\n    desc: envType.desc,\n    status: envType.status,\n  };\n  return removeNulls(await httpApiPut(`api/workspace-types/${encodeURIComponent(envType.id)}`, { data }));\n}\n\nasync function deleteEnvType(id) {\n  return removeNulls(await httpApiDelete(`api/workspace-types/${encodeURIComponent(id)}`));\n}\n\nasync function approveEnvType(id, rev) {\n  return removeNulls(await httpApiPut(`api/workspace-types/${encodeURIComponent(id)}/approve`, { data: { rev } }));\n}\n\nasync function revokeEnvType(id, rev) {\n  return removeNulls(await httpApiPut(`api/workspace-types/${encodeURIComponent(id)}/revoke`, { data: { rev } }));\n}\n\nasync function getEnvTypeConfigs(envTypeId) {\n  // return env type configurations that the caller is allowed to use\n  return removeNulls(await httpApiGet(`api/workspace-types/${encodeURIComponent(envTypeId)}/configurations`));\n}\nasync function getAllEnvTypeConfigs(envTypeId) {\n  // return all env type configurations (applicable only for admins) irrespective of what's specified in allow/deny\n  // user roles. For non-admins this is same as \"getEnvTypeConfigs\" i.e., the extra include=all does not do anything\n  // for regular (non-admin) users\n  return removeNulls(\n    await httpApiGet(`api/workspace-types/${encodeURIComponent(envTypeId)}/configurations?include=all`),\n  );\n}\n\nasync function createEnvTypeConfig(envTypeId, envTypeConfig) {\n  return removeNulls(\n    await httpApiPost(`api/workspace-types/${encodeURIComponent(envTypeId)}/configurations`, {\n      data: _.omit(envTypeConfig, ['createdAt', 'createdBy', 'updatedAt', 'updatedBy', 'allowedToUse']),\n    }),\n  );\n}\n\nasync function updateEnvTypeConfig(envTypeId, envTypeConfig) {\n  return removeNulls(\n    await httpApiPut(\n      `api/workspace-types/${encodeURIComponent(envTypeId)}/configurations/${decodeURIComponent(envTypeConfig.id)}`,\n      { data: _.omit(envTypeConfig, ['createdAt', 'createdBy', 'updatedAt', 'updatedBy', 'allowedToUse']) },\n    ),\n  );\n}\n\nasync function deleteEnvTypeConfig(envTypeId, envTypeConfigId) {\n  return removeNulls(\n    await httpApiDelete(\n      `api/workspace-types/${encodeURIComponent(envTypeId)}/configurations/${encodeURIComponent(envTypeConfigId)}`,\n    ),\n  );\n}\n\nasync function getEnvTypeConfigVars(envTypeId) {\n  return removeNulls(await httpApiGet(`api/workspace-types/${encodeURIComponent(envTypeId)}/config-vars`));\n}\n\nexport {\n  // Env type candidates\n  getAllEnvTypeCandidatesNotImported,\n  getLatestEnvTypeCandidatesNotImported,\n  // Env types\n  getAllEnvTypes,\n  getApprovedEnvTypes,\n  getNotApprovedEnvTypes,\n  getEnvType,\n  createEnvType,\n  updateEnvType,\n  deleteEnvType,\n  approveEnvType,\n  revokeEnvType,\n  // Env type configs\n  getEnvTypeConfigs,\n  getAllEnvTypeConfigs,\n  createEnvTypeConfig,\n  updateEnvTypeConfig,\n  deleteEnvTypeConfig,\n  // Env type config variables\n  getEnvTypeConfigVars,\n};\n"],"file":"api.js"}