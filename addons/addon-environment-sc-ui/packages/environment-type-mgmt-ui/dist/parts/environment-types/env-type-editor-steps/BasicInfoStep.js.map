{"version":3,"sources":["../../../../src/parts/environment-types/env-type-editor-steps/BasicInfoStep.js"],"names":["BasicInfoStep","props","handleFormSubmission","form","envType","envTypesStore","name","$","value","desc","isImportAction","createEnvType","id","status","EnvTypeStatusEnum","notApproved","product","provisioningArtifact","params","savedEnvType","wizardModel","hasNext","next","onEnvTypeSaveComplete","updateEnvType","onCancel","processing","renderFormFields","renderActionButtons","isEditing","isEditAction","workspaceTypeAction","nameField","descField","React","Component"],"mappings":";;;;;;;;;AAeA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UA8DnBC,oBA9DmB;AAAA,yEA8DI,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,gBAAAA,OADe,GACL,MAAKH,KAAL,CAAWG,OADN;AAEfC,gBAAAA,aAFe,GAEC,MAAKJ,KAAL,CAAWI,aAFZ;AAIfC,gBAAAA,IAJe,GAIRH,IAAI,CAACI,CAAL,CAAO,MAAP,EAAeC,KAJP;AAKfC,gBAAAA,IALe,GAKRN,IAAI,CAACI,CAAL,CAAO,MAAP,EAAeC,KALP;AAAA;;AAAA,qBASf,MAAKE,cAAL,EATe;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAWIL,aAAa,CAACM,aAAd,CAA4B;AAC/CC,kBAAAA,EAAE,EAAER,OAAO,CAACQ,EADmC;AAE/CN,kBAAAA,IAAI,EAAJA,IAF+C;AAG/CG,kBAAAA,IAAI,EAAJA,IAH+C;AAI/CI,kBAAAA,MAAM,EAAEC,8BAAkBC,WAJqB;AAK/CC,kBAAAA,OAAO,EAAEZ,OAAO,CAACY,OAL8B;AAM/CC,kBAAAA,oBAAoB,EAAEb,OAAO,CAACa,oBANiB;AAO/CC,kBAAAA,MAAM,EAAEd,OAAO,CAACc;AAP+B,iBAA5B,CAXJ;;AAAA;AAWjBC,gBAAAA,YAXiB;AAoBjB,oFAA0Cf,OAAO,CAACE,IAAlD,oBApBiB,CAsBjB;AACA;;AACMc,gBAAAA,WAxBW,GAwBG,MAAKnB,KAAL,CAAWmB,WAxBd;;AAAA,qBAyBbA,WAAW,CAACC,OAzBC;AAAA;AAAA;AAAA;;AA0BfD,gBAAAA,WAAW,CAACE,IAAZ;AA1Be;AAAA;;AAAA;AAAA;AAAA,uBA4BT,MAAKrB,KAAL,CAAWsB,qBAAX,CAAiCJ,YAAjC,CA5BS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAiCId,aAAa,CAACmB,aAAd,mBAChBpB,OADgB;AAEnBE,kBAAAA,IAAI,EAAJA,IAFmB;AAGnBG,kBAAAA,IAAI,EAAJA;AAHmB,mBAjCJ;;AAAA;AAiCjBU,gBAAAA,YAjCiB;AAsCjB,mFAAyCf,OAAO,CAACE,IAAjD;AAtCiB;AAAA,uBAwCX,MAAKL,KAAL,CAAWsB,qBAAX,CAAiCJ,YAAjC,CAxCW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2CnB;;AA3CmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA9DJ;;AAAA;AAAA;AAAA;AAAA;;AAEjB,2BAAY,YAAM;AAChB,YAAKhB,IAAL,GAAY,sDAA2BF,KAAK,CAACG,OAAjC,CAAZ;AACD,KAFD;AAFiB;AAKlB;;;;6BAEQ;AAAA;;AACP,UAAMD,IAAI,GAAG,KAAKA,IAAlB;AACA,0BACE,gCAAC,wBAAD;AAAS,QAAA,QAAQ,MAAjB;AAAkB,QAAA,SAAS,EAAC;AAA5B,sBACE,gCAAC,gBAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWwB,QAAvC;AAAiD,QAAA,SAAS,EAAE,KAAKvB;AAAjE,SACG;AAAA,YAAGwB,UAAH,SAAGA,UAAH;AAAA,YAAeD,QAAf,SAAeA,QAAf;AAAA,4BACC,kEACG,MAAI,CAACE,gBAAL,CAAsB;AAAExB,UAAAA,IAAI,EAAJA,IAAF;AAAQuB,UAAAA,UAAU,EAAVA,UAAR;AAAoBD,UAAAA,QAAQ,EAARA;AAApB,SAAtB,CADH,EAEG,MAAI,CAACG,mBAAL,CAAyB;AAAEF,UAAAA,UAAU,EAAVA,UAAF;AAAcD,UAAAA,QAAQ,EAARA;AAAd,SAAzB,CAFH,CADD;AAAA,OADH,CADF,CADF;AAYD;;;+CAE6C;AAAA,UAAxBC,UAAwB,SAAxBA,UAAwB;AAAA,UAAZD,QAAY,SAAZA,QAAY;AAC5C,UAAMI,SAAS,GAAG,KAAKC,YAAL,EAAlB;AACA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,gCAAC,uBAAD;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,KAAK,EAAC,MAApB;AAA2B,QAAA,QAAQ,EAAEJ,UAArC;AAAiD,QAAA,OAAO,EAAED;AAA1D,kBADF,eAIE,gCAAC,uBAAD;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,OAAO,MAFT;AAGE,QAAA,OAAO,EAAEI,SAAS,GAAG,qBAAH,GAA2B,uBAH/C;AAIE,QAAA,QAAQ,EAAEH,UAJZ,CAKE;AACA;AANF;AAOE,QAAA,IAAI,EAAC;AAPP,QAJF,CADF;AAgBD;;;mCAEc;AACb,aAAO,KAAKzB,KAAL,CAAW8B,mBAAX,KAAmC,MAA1C;AACD;;;qCAEgB;AACf,aAAO,KAAK9B,KAAL,CAAW8B,mBAAX,KAAmC,QAA1C;AACD;;;4CAEsC;AAAA,UAApB5B,IAAoB,SAApBA,IAAoB;AAAA,UAAduB,UAAc,SAAdA,UAAc;AACrC,UAAMM,SAAS,GAAG7B,IAAI,CAACI,CAAL,CAAO,MAAP,CAAlB;AACA,UAAM0B,SAAS,GAAG9B,IAAI,CAACI,CAAL,CAAO,MAAP,CAAlB;AACA,0BACE,+EACE,gCAAC,iBAAD;AAAO,QAAA,KAAK,EAAEyB,SAAd;AAAyB,QAAA,QAAQ,EAAEN;AAAnC,QADF,eAEE,gCAAC,oBAAD;AAAU,QAAA,KAAK,EAAEO,SAAjB;AAA4B,QAAA,QAAQ,EAAEP;AAAtC,QAFF,CADF;AAMD;;;;EA7DyBQ,kBAAMC,S;;eA8GnB,yBAASnC,aAAT,C","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { Button, Segment } from 'semantic-ui-react';\n\nimport Input from '@aws-ee/base-ui/dist/parts/helpers/fields/Input';\nimport TextArea from '@aws-ee/base-ui/dist/parts/helpers/fields/TextArea';\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\n\nimport { displayError, displaySuccess } from '@aws-ee/base-ui/dist/helpers/notification';\nimport { getAddEnvTypeBasicInfoForm } from '../../../models/forms/EnvTypeBasicInfoForm';\nimport EnvTypeStatusEnum from '../../../models/environment-types/EnvTypeStatusEnum';\n\nclass BasicInfoStep extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.form = getAddEnvTypeBasicInfoForm(props.envType);\n    });\n  }\n\n  render() {\n    const form = this.form;\n    return (\n      <Segment clearing className=\"mt3 p3\">\n        <Form form={form} onCancel={this.props.onCancel} onSuccess={this.handleFormSubmission}>\n          {({ processing, onCancel }) => (\n            <>\n              {this.renderFormFields({ form, processing, onCancel })}\n              {this.renderActionButtons({ processing, onCancel })}\n            </>\n          )}\n        </Form>\n      </Segment>\n    );\n  }\n\n  renderActionButtons({ processing, onCancel }) {\n    const isEditing = this.isEditAction();\n    return (\n      <div className=\"right-align\">\n        <Button basic color=\"grey\" disabled={processing} onClick={onCancel}>\n          Cancel\n        </Button>\n        <Button\n          className=\"ml2\"\n          primary\n          content={isEditing ? 'Save Workspace Type' : 'Import Workspace Type'}\n          disabled={processing}\n          // Every wizard step page has has it's own form\n          // The submit handler is responsible for saving the information and/or navigating to the next step (if there is next step)\n          type=\"submit\"\n        />\n      </div>\n    );\n  }\n\n  isEditAction() {\n    return this.props.workspaceTypeAction === 'edit';\n  }\n\n  isImportAction() {\n    return this.props.workspaceTypeAction === 'import';\n  }\n\n  renderFormFields({ form, processing }) {\n    const nameField = form.$('name');\n    const descField = form.$('desc');\n    return (\n      <>\n        <Input field={nameField} disabled={processing} />\n        <TextArea field={descField} disabled={processing} />\n      </>\n    );\n  }\n\n  handleFormSubmission = async form => {\n    const envType = this.props.envType;\n    const envTypesStore = this.props.envTypesStore;\n\n    const name = form.$('name').value;\n    const desc = form.$('desc').value;\n\n    let savedEnvType;\n    try {\n      if (this.isImportAction()) {\n        // if importing new env type then call \"create\"\n        savedEnvType = await envTypesStore.createEnvType({\n          id: envType.id,\n          name,\n          desc,\n          status: EnvTypeStatusEnum.notApproved,\n          product: envType.product,\n          provisioningArtifact: envType.provisioningArtifact,\n          params: envType.params,\n        });\n        displaySuccess(`Imported Workspace Type ${envType.name} successfully`);\n\n        // Navigate to next step (if there is) or call onEnvTypeSaveComplete to notify\n        // that this was last step and we are done creating env type\n        const wizardModel = this.props.wizardModel;\n        if (wizardModel.hasNext) {\n          wizardModel.next();\n        } else {\n          await this.props.onEnvTypeSaveComplete(savedEnvType);\n        }\n      } else {\n        // if updating existing env type then call \"update\" and call onEnvTypeSaveComplete to notify that we are done\n        // saving env type\n        savedEnvType = await envTypesStore.updateEnvType({\n          ...envType,\n          name,\n          desc,\n        });\n        displaySuccess(`Updated Workspace Type ${envType.name} successfully`);\n\n        await this.props.onEnvTypeSaveComplete(savedEnvType);\n      }\n    } catch (error) {\n      displayError(error);\n    }\n  };\n}\nexport default observer(BasicInfoStep);\n"],"file":"BasicInfoStep.js"}