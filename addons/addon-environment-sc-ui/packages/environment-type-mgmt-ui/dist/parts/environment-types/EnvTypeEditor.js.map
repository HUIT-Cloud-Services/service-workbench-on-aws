{"version":3,"sources":["../../../src/parts/environment-types/EnvTypeEditor.js"],"names":["TabPaneWrapper","props","children","EnvTypeEditor","renderTitle","isEditAction","_","get","envType","renderContent","isImportAction","renderStepProgress","renderCurrentStep","renderStepTabs","map","wizardModel","steps","step","stepAttribs","key","completed","isComplete","active","isStepActive","title","desc","stepPanes","menuItem","render","renderEnvTypeStep","secondary","pointing","currentStep","handleCancel","goto","handleDone","stores","Stores","envTypeCandidatesStore","envTypesStore","load","content","hasError","error","stepKey","getAction","getEnvTypeConfigsStore","undefined","getEnvTypeId","decodeURIComponent","match","params","id","action","getEnvType","envTypeCandidate","getEnvTypeCandidate","React","Component","computed","observable","currentStepNo"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { inject, observer, Observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { computed, decorate, observable, runInAction } from 'mobx';\nimport { Container, Header, Icon, Step, Tab } from 'semantic-ui-react';\n\nimport Stores from '@aws-ee/base-ui/dist/models/Stores';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport BasicProgressPlaceholder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\nimport { isStoreLoading, isStoreReady } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport { createWizard } from '@aws-ee/base-ui/dist/models/Wizard';\nimport BasicInfoStep from './env-type-editor-steps/BasicInfoStep';\nimport ConfigStep from './env-type-editor-steps/ConfigStep';\n\n// This component is used with the TabPane to replace the default Segment wrapper since\n// we don't want to display the border.\nfunction TabPaneWrapper(props) {\n  return <>{props.children}</>;\n}\n\nclass EnvTypeEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.stores = new Stores([this.envTypeCandidatesStore, this.envTypesStore]);\n      this.wizardModel = createWizard([\n        {\n          key: 'basic_information',\n          title: 'Basic Information',\n          desc: 'Enter basic information about the Environment Type',\n          isComplete: false,\n        },\n        {\n          key: 'configurations',\n          title: 'Configurations',\n          desc: 'Define configurations with predefined set of AWS CloudFormation Input Parameter values',\n          isComplete: false,\n        },\n      ]);\n    });\n  }\n\n  componentDidMount() {\n    swallowError(this.stores.load());\n  }\n\n  render() {\n    const stores = this.stores;\n    let content = null;\n    if (stores.hasError) {\n      content = <ErrorBox error={stores.error} className=\"p0 mb3\" />;\n    } else if (isStoreLoading(stores)) {\n      content = <BasicProgressPlaceholder />;\n    } else if (isStoreReady(stores)) {\n      content = this.renderContent();\n    } else {\n      content = null;\n    }\n\n    return <Container className=\"mt3 mb4\">{content}</Container>;\n  }\n\n  renderTitle = () => {\n    return (\n      <div className=\"mb3 flex\">\n        <Header as=\"h3\" className=\"color-grey mt1 mb0 flex-auto\">\n          <Icon name=\"computer\" className=\"align-top\" />\n          <Header.Content className=\"left-align\">\n            {this.isEditAction() ? 'Edit' : 'Import'} Workspace Type\n          </Header.Content>\n          <Header.Subheader className=\"mt2\">{_.get(this.envType, 'name')}</Header.Subheader>\n        </Header>\n      </div>\n    );\n  };\n\n  renderContent = () => {\n    return (\n      <>\n        {this.renderTitle()}\n        {// When importing new env type, render the wizard as steps with linear flow\n        // When updating existing env type, render the wizard steps as tabs to allow random access\n        this.isImportAction() ? (\n          <>\n            {this.renderStepProgress()}\n            {this.renderCurrentStep()}\n          </>\n        ) : (\n          this.renderStepTabs()\n        )}\n      </>\n    );\n  };\n\n  renderStepProgress = () => {\n    return (\n      <Step.Group ordered className=\"container\">\n        {_.map(this.wizardModel.steps, step => {\n          const stepAttribs = {\n            key: step.key,\n            completed: step.isComplete,\n            active: this.wizardModel.isStepActive(step.key),\n          };\n          return (\n            <Step {...stepAttribs}>\n              <Step.Content>\n                <Step.Title>{step.title}</Step.Title>\n                <Step.Description>{step.desc}</Step.Description>\n              </Step.Content>\n            </Step>\n          );\n        })}\n      </Step.Group>\n    );\n  };\n\n  renderStepTabs = () => {\n    const stepPanes = _.map(this.wizardModel.steps, step => ({\n      menuItem: step.title,\n      render: () => (\n        <Tab.Pane attached={false} key={step.key} as={TabPaneWrapper}>\n          <Observer>{() => this.renderEnvTypeStep(step.key)}</Observer>\n        </Tab.Pane>\n        // <Observer>{() => this.renderEnvTypeStep(step.key)}</Observer>\n      ),\n    }));\n    return <Tab className=\"mt3\" menu={{ secondary: true, pointing: true }} renderActiveOnly panes={stepPanes} />;\n  };\n\n  renderCurrentStep = () => {\n    return this.renderEnvTypeStep(this.wizardModel.currentStep.key);\n  };\n\n  renderEnvTypeStep(stepKey) {\n    switch (stepKey) {\n      case 'basic_information':\n        return (\n          <BasicInfoStep\n            envTypesStore={this.envTypesStore}\n            envType={this.envType}\n            wizardModel={this.wizardModel}\n            workspaceTypeAction={this.getAction()}\n            onCancel={this.handleCancel}\n            onEnvTypeSaveComplete={this.handleDone}\n          />\n        );\n      case 'configurations':\n        return (\n          <ConfigStep\n            envType={this.envType}\n            envTypeConfigsStore={this.getEnvTypeConfigsStore()}\n            wizardModel={this.wizardModel}\n            workspaceTypeAction={this.getAction()}\n            onCancel={this.handleCancel}\n            onEnvTypeSaveComplete={this.handleDone}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  handleCancel = () => {\n    const goto = gotoFn(this);\n    goto(`/workspace-types-management`);\n  };\n\n  handleDone = () => {\n    this.handleCancel();\n  };\n\n  isEditAction() {\n    return this.getAction() === 'edit';\n  }\n\n  isImportAction() {\n    return this.getAction() === 'import';\n  }\n\n  getEnvTypeConfigsStore() {\n    return this.envTypesStore.getEnvTypeConfigsStore(this.getEnvTypeId());\n  }\n\n  getEnvTypeId() {\n    return decodeURIComponent((this.props.match.params || {}).id);\n  }\n\n  getAction() {\n    return decodeURIComponent((this.props.match.params || {}).action);\n  }\n\n  get envType() {\n    const id = this.getEnvTypeId();\n    // env type\n    const envType = this.envTypesStore.getEnvType(id);\n    if (!envType && this.isImportAction()) {\n      // Importing env type candidate as new env type, the envType may not exist yet in that case (if this is the first step in the wizard)\n      // Returning env type candidate in that case containing subset of env type information\n      const envTypeCandidate = this.envTypeCandidatesStore.getEnvTypeCandidate(id);\n      return envTypeCandidate;\n    }\n    return envType;\n  }\n\n  get envTypeCandidatesStore() {\n    return this.props.envTypeCandidatesStore;\n  }\n\n  get envTypesStore() {\n    return this.props.envTypesStore;\n  }\n}\n\ndecorate(EnvTypeEditor, {\n  envTypesStore: computed,\n  envType: computed,\n  envTypeCandidatesStore: computed,\n  stores: observable,\n\n  steps: observable,\n  currentStepNo: observable,\n});\n\nexport default inject('envTypesStore', 'envTypeCandidatesStore')(withRouter(observer(EnvTypeEditor)));\n"],"file":"EnvTypeEditor.js"}