{"version":3,"sources":["../../../../../src/parts/environment-types/env-type-config/env-type-config-steps/TagsStep.js"],"names":["TagsStep","props","disableActionButtons","shouldEnableActionButtons","enableActionButtons","processing","form","renderFormFields","onCancel","onSubmit","renderActionButtons","tagsField","$","isUpdating","isEditAction","submitButtonTitle","wizardModel","hasNext","hasPrevious","onPrevious","BaseEnvTypeConfigStep","action","observable"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { action, decorate, observable, runInAction } from 'mobx';\nimport { Button, Dimmer, Header, Icon, Segment, Table } from 'semantic-ui-react';\n\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\nimport NameValuesEditor from '@aws-ee/base-ui/dist/parts/helpers/fields/NameValuesEditor';\nimport BaseEnvTypeConfigStep from './BaseEnvTypeConfigStep';\n\nclass TagsStep extends BaseEnvTypeConfigStep {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.processing = false;\n      this.shouldEnableActionButtons = true;\n    });\n  }\n\n  render() {\n    const form = this.form;\n    return (\n      <Segment clearing className=\"mt3\">\n        <Dimmer active={this.processing} inverted />\n        {this.renderFormFields({ form })}\n        <Form form={form} onCancel={this.props.onCancel} onSuccess={this.props.onSubmit}>\n          {({ processing, onCancel }) => <>{this.renderActionButtons({ processing, onCancel })}</>}\n        </Form>\n      </Segment>\n    );\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  renderFormFields({ form }) {\n    const tagsField = form.$('tags');\n    return (\n      <div className=\"mb3\">\n        <div className=\"ml1 mb2\">\n          Click plus (+) button below to add resource tags. These tags will be applied to the environment resources that\n          are launched using this configuration. Additionally, some standard tags for cost allocation will be\n          automatically applied even if you do not configure any other resource tags here.\n        </div>\n        <NameValuesEditor\n          field={tagsField}\n          onEnterEditMode={this.disableActionButtons}\n          onExitEditMode={this.enableActionButtons}\n          emptyRenderer={() => (\n            <Table.Row key=\"empty-row\" textAlign=\"center\">\n              <Table.Cell colSpan={3}>\n                <Header icon className=\"color-grey\">\n                  <Icon name=\"tags\" />\n                  No resource tags are added yet\n                </Header>\n              </Table.Cell>\n            </Table.Row>\n          )}\n        />\n      </div>\n    );\n  }\n\n  renderActionButtons({ processing, onCancel }) {\n    const isUpdating = this.isEditAction();\n    const submitButtonTitle = isUpdating ? 'Save' : this.props.wizardModel.hasNext ? 'Next' : 'Add';\n    return (\n      <div className=\"clearfix\">\n        <Button\n          onClick={action(() => {\n            this.processing = true;\n          })}\n          className=\"ml2 mb3\"\n          primary\n          content={submitButtonTitle}\n          disabled={processing || !this.shouldEnableActionButtons}\n          type=\"submit\"\n          floated=\"right\"\n        />\n        {!isUpdating && this.props.wizardModel.hasPrevious && (\n          <Button\n            className=\"ml2 mb3\"\n            primary\n            content=\"Previous\"\n            disabled={processing || !this.shouldEnableActionButtons}\n            floated=\"right\"\n            onClick={this.props.onPrevious}\n          />\n        )}\n        <Button\n          basic\n          color=\"grey\"\n          disabled={processing || !this.shouldEnableActionButtons}\n          onClick={onCancel}\n          floated=\"left\"\n        >\n          Cancel\n        </Button>\n      </div>\n    );\n  }\n\n  disableActionButtons = () => {\n    this.shouldEnableActionButtons = false;\n  };\n\n  enableActionButtons = () => {\n    this.shouldEnableActionButtons = true;\n  };\n}\n\ndecorate(TagsStep, {\n  disableActionButtons: action,\n  enableActionButtons: action,\n\n  processing: observable,\n  shouldEnableActionButtons: observable,\n});\nexport default observer(TagsStep);\n"],"file":"TagsStep.js"}