{"version":3,"sources":["../../../../../src/parts/environment-types/env-type-config/__tests__/EnvTypeConfigEditor.test.js"],"names":["jest","mock","displayErrorMock","require","envTypeConfigsStore","ready","updateEnvTypeConfig","fn","userRolesStore","envTypeConfig","id","name","onEnvTypeConfigSaveComplete","describe","wrapper","component","beforeEach","instance","isEditAction","displayError","x","displaySuccess","it","ret","form","values","handleFormSubmission","expect","toHaveBeenCalledWith","objectContaining","toHaveBeenCalled","error","message","mockImplementationOnce"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport EnvTypeConfigEditor from '../EnvTypeConfigEditor';\n\njest.mock('@aws-ee/base-ui/dist/helpers/notification');\nconst displayErrorMock = require('@aws-ee/base-ui/dist/helpers/notification');\n\nconst envTypeConfigsStore = {\n  ready: true,\n  updateEnvTypeConfig: jest.fn(),\n};\n\nconst userRolesStore = {\n  ready: true,\n};\n\nconst envTypeConfig = {\n  id: 'example_id',\n  name: 'exampleName',\n};\n\nconst onEnvTypeConfigSaveComplete = jest.fn();\n\ndescribe('EnvTypeConfigEditor', () => {\n  let wrapper = null;\n  let component = null;\n\n  beforeEach(() => {\n    // render component\n    wrapper = shallow(\n      <EnvTypeConfigEditor.wrappedComponent\n        envTypeConfigsStore={envTypeConfigsStore}\n        userRolesStore={userRolesStore}\n        envTypeConfig={envTypeConfig}\n        onEnvTypeConfigSaveComplete={onEnvTypeConfigSaveComplete}\n      />,\n    );\n\n    // Get instance of the component\n    component = wrapper.instance();\n    component.isEditAction = jest.fn(() => true);\n\n    // Mock display functions because they don't function correctly in enzyme\n    displayErrorMock.displayError = jest.fn(x => x);\n    displayErrorMock.displaySuccess = jest.fn(x => x);\n  });\n\n  it('should update the environment config', async () => {\n    // BUILD\n    const ret = { name: 'some_new_name' };\n    const form = {\n      values: jest.fn(() => {\n        return ret;\n      }),\n    };\n\n    // OPERATE\n    await component.handleFormSubmission(form);\n    // CHECK\n    expect(envTypeConfigsStore.updateEnvTypeConfig).toHaveBeenCalledWith(expect.objectContaining(ret));\n    expect(onEnvTypeConfigSaveComplete).toHaveBeenCalled();\n    expect(displayErrorMock.displaySuccess).toHaveBeenCalledWith(`Successfully updated ${ret.name} configuration`);\n  });\n\n  it('should catch the error successfully', async () => {\n    // BUILD\n    const ret = { name: 'a_weird_name' };\n    const form = {\n      values: jest.fn(() => {\n        return ret;\n      }),\n    };\n    const error = { message: 'oh no! An error!' };\n    envTypeConfigsStore.updateEnvTypeConfig.mockImplementationOnce(() => {\n      throw error;\n    });\n\n    // OPERATE\n    await component.handleFormSubmission(form);\n\n    // CHECK\n    expect(displayErrorMock.displayError).toHaveBeenCalledWith(error);\n  });\n});\n"],"file":"EnvTypeConfigEditor.test.js"}