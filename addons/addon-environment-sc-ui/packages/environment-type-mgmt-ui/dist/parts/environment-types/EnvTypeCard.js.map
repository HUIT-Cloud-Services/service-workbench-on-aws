{"version":3,"sources":["../../../src/parts/environment-types/EnvTypeCard.js"],"names":["EnvTypeCard","props","showDeleteDialog","shouldShowDeleteDialog","processing","hideDeleteDialog","handleApproveRevokeClick","id","revoking","store","envTypesStore","revokeEnvType","approveEnvType","handleDeleteClick","deleteEnvType","handleEditClick","goto","encodeURIComponent","envType","isApproved","EnvTypeStatusEnum","status","pluginRegistry","defaultMetaActions","metaActions","visitPlugins","payload","defaultMgmtActions","renderDeleteConfirmation","mgmtActions","name","_","map","c","__html","descHtml","Component","observable","computed","action"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Card, Divider, Header, Icon, Label, Modal } from 'semantic-ui-react';\nimport { action, computed, decorate, observable, runInAction } from 'mobx';\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\n\nimport * as EnvTypeStatusEnum from '../../models/environment-types/EnvTypeStatusEnum';\n\nclass EnvTypeCard extends Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.processing = false;\n      this.shouldShowDeleteDialog = false;\n    });\n  }\n\n  render() {\n    const envType = this.props.envType;\n    const isApproved = EnvTypeStatusEnum.isApproved(envType.status);\n\n    const pluginRegistry = this.props.pluginRegistry;\n    const defaultMetaActions = [];\n    const metaActions = pluginRegistry.visitPlugins(\n      'env-type-management',\n      'getEnvTypeCardMetaActions',\n      {\n        payload: defaultMetaActions,\n      },\n      envType,\n    );\n\n    const defaultMgmtActions = [\n      <Button\n        key=\"env-type-mgmt-action-edit\"\n        basic\n        color=\"blue\"\n        onClick={() => this.handleEditClick(envType.id)}\n        floated=\"right\"\n        size=\"mini\"\n        disabled={this.processing}\n      >\n        Edit\n      </Button>,\n      <Button\n        key=\"env-type-mgmt-action-delete\"\n        basic\n        color=\"red\"\n        onClick={() => this.showDeleteDialog()}\n        floated=\"right\"\n        size=\"mini\"\n        disabled={this.processing}\n      >\n        Delete\n      </Button>,\n      this.renderDeleteConfirmation(envType),\n      <Button\n        key=\"env-type-mgmt-action-revoke-or-approve\"\n        basic\n        color={isApproved ? 'red' : 'blue'}\n        onClick={() => this.handleApproveRevokeClick(envType.id, isApproved)}\n        floated=\"right\"\n        size=\"mini\"\n        disabled={this.processing}\n      >\n        {isApproved ? 'Revoke' : 'Approve'}\n      </Button>,\n    ];\n    const mgmtActions = pluginRegistry.visitPlugins(\n      'env-type-management',\n      'getEnvTypeCardMgmtActions',\n      {\n        payload: defaultMgmtActions,\n      },\n      envType,\n    );\n\n    return (\n      <Card key={`et-${envType.id}`} raised className=\"mb3\">\n        <Card.Content>\n          <Header as=\"h4\">{envType.name}</Header>\n          <Card.Meta className=\"flex\">\n            <span className=\"fs-8 color-grey mr2\">{envType.id}</span>\n            <Label className=\"ml1\" size=\"mini\" color={isApproved ? 'green' : 'red'}>\n              {isApproved ? 'Approved' : 'Not Approved'}\n            </Label>\n          </Card.Meta>\n          {_.map(metaActions, c => c)}\n          <Divider />\n          <Card.Description>\n            <div className=\"mb3 pr1 pl1 pb1\">\n              {/* Yes, we are doing dangerouslySetInnerHTML, the content was already sanitized by showdownjs */}\n              {/* eslint-disable-next-line react/no-danger */}\n              <div dangerouslySetInnerHTML={{ __html: envType.descHtml }} />\n            </div>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>{_.map(mgmtActions, c => c)}</Card.Content>\n      </Card>\n    );\n  }\n\n  renderDeleteConfirmation(envType) {\n    const shouldShowDeleteDialog = this.shouldShowDeleteDialog;\n    const processing = this.processing;\n    return (\n      <Modal\n        key=\"env-type-mgmt-action-delete-confirmation\"\n        open={shouldShowDeleteDialog}\n        onClose={this.hideDeleteDialog}\n        closeOnDimmerClick={!processing}\n      >\n        <Modal.Header>Delete {envType.name}</Modal.Header>\n        <Modal.Content>\n          <p>Are you sure you want to delete {envType.name}?</p>\n          <p>\n            Once you delete environment type, users will not be able launch them. You will need to re-import it from the\n            AWS Service Catalog Product.\n          </p>\n          <p>Is it okay to delete?</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            basic\n            icon\n            color=\"grey\"\n            labelPosition=\"right\"\n            size=\"mini\"\n            disabled={this.processing}\n            onClick={this.hideDeleteDialog}\n          >\n            <Icon name=\"close\" />\n            Cancel\n          </Button>\n          <Button\n            basic\n            icon\n            color=\"red\"\n            labelPosition=\"right\"\n            size=\"mini\"\n            disabled={this.processing}\n            onClick={() => this.handleDeleteClick(envType.id)}\n          >\n            <Icon name=\"trash\" /> Delete\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  showDeleteDialog = () => {\n    this.shouldShowDeleteDialog = true;\n    this.processing = false;\n  };\n\n  hideDeleteDialog = () => {\n    if (this.processing) return;\n    this.shouldShowDeleteDialog = false;\n  };\n\n  handleApproveRevokeClick = async (id, revoking = false) => {\n    this.processing = true;\n    const store = this.envTypesStore;\n    try {\n      if (revoking) {\n        await store.revokeEnvType(id);\n      } else {\n        await store.approveEnvType(id);\n      }\n    } catch (error) {\n      displayError(error);\n    }\n    runInAction(() => {\n      this.processing = false;\n    });\n  };\n\n  handleDeleteClick = async id => {\n    this.processing = true;\n    const store = this.envTypesStore;\n    try {\n      await store.deleteEnvType(id);\n    } catch (error) {\n      displayError(error);\n    }\n    runInAction(() => {\n      this.processing = false;\n      this.hideDeleteDialog();\n    });\n  };\n\n  handleEditClick = async id => {\n    const goto = gotoFn(this);\n    goto(`/workspace-types-management/edit/${encodeURIComponent(id)}`);\n  };\n\n  get envTypesStore() {\n    return this.props.envTypesStore;\n  }\n}\n\ndecorate(EnvTypeCard, {\n  processing: observable,\n  envTypesStore: computed,\n  shouldShowDeleteDialog: observable,\n\n  handleEditClick: action,\n  handleDeleteClick: action,\n  handleApproveRevokeClick: action,\n  showDeleteDialog: action,\n  hideDeleteDialog: action,\n});\nexport default inject('pluginRegistry')(withRouter(observer(EnvTypeCard)));\n"],"file":"EnvTypeCard.js"}