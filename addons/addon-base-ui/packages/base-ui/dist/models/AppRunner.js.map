{"version":3,"sources":["../../src/models/AppRunner.js"],"names":["AppRunner","appContext","registry","pluginRegistry","initPlugins","getPluginsWithMethod","payload","plugin","init","externalRedirectUrl","window","location","postInitPlugins","postInit","app","registerContextItems","appRunner"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;IACMA,S;AACJ,qBAAYC,UAAZ,EAAwB;AAAA;;AACtB,SAAKA,UAAL,GAAkBA,UAAlB;AACD;;;;;;;;;;;;AAGOA,gBAAAA,U,GAAa,KAAKA,U;AAClBC,gBAAAA,Q,GAAWD,UAAU,CAACE,c;AACtBC,gBAAAA,W,GAAcF,QAAQ,CAACG,oBAAT,CAA8B,gBAA9B,EAAgD,MAAhD,C;AACdC,gBAAAA,O,GAAU,E,EAEhB;AACA;;uDACqBF,W;;;;;;;;;;;AAAVG,gBAAAA,M;;uBACHA,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBL,UAArB,C;;;;;;;;;;;;;;;;;;;;;;;;qBAIJK,OAAO,CAACG,mB;;;;;AACVC,gBAAAA,MAAM,CAACC,QAAP,GAAkBL,OAAO,CAACG,mBAA1B;;;;AAIIG,gBAAAA,e,GAAkBV,QAAQ,CAACG,oBAAT,CAA8B,gBAA9B,EAAgD,UAAhD,C,EACxB;AACA;;wDACqBO,e;;;;;;;;;;;AAAVL,gBAAAA,O;;uBACHA,OAAM,CAACM,QAAP,CAAgBP,OAAhB,EAAyBL,UAAzB,C;;;;;;;;;;;;;;;;;;;;;;;;qBAIJK,OAAO,CAACG,mB;;;;;AACVC,gBAAAA,MAAM,CAACC,QAAP,GAAkBL,OAAO,CAACG,mBAA1B;;;;AAIIK,gBAAAA,G,GAAMb,UAAU,CAACa,G;;uBACjBA,GAAG,CAACN,IAAJ,CAASF,OAAT,C;;;;;;;;;;;;;;;;;;;;;;;AAIV,SAASS,oBAAT,CAA8Bd,UAA9B,EAA0C;AACxCA,EAAAA,UAAU,CAACe,SAAX,GAAuB,IAAIhB,SAAJ,CAAcC,UAAd,CAAvB;AACD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\n/* eslint-disable no-await-in-loop */\nclass AppRunner {\n  constructor(appContext) {\n    this.appContext = appContext;\n  }\n\n  async run() {\n    const appContext = this.appContext;\n    const registry = appContext.pluginRegistry;\n    const initPlugins = registry.getPluginsWithMethod('initialization', 'init');\n    const payload = {};\n\n    // Ask each plugin to run init()\n    // eslint-disable-next-line no-restricted-syntax\n    for (const plugin of initPlugins) {\n      await plugin.init(payload, appContext);\n    }\n\n    // Did any plugin want to do an external redirect?\n    if (payload.externalRedirectUrl) {\n      window.location = payload.externalRedirectUrl;\n      return;\n    }\n\n    const postInitPlugins = registry.getPluginsWithMethod('initialization', 'postInit');\n    // Ask each plugin to run postInit()\n    // eslint-disable-next-line no-restricted-syntax\n    for (const plugin of postInitPlugins) {\n      await plugin.postInit(payload, appContext);\n    }\n\n    // Did any plugin want to do an external redirect?\n    if (payload.externalRedirectUrl) {\n      window.location = payload.externalRedirectUrl;\n      return;\n    }\n\n    const app = appContext.app;\n    await app.init(payload);\n  }\n}\n\nfunction registerContextItems(appContext) {\n  appContext.appRunner = new AppRunner(appContext);\n}\n\nexport { AppRunner, registerContextItems };\n"],"file":"AppRunner.js"}