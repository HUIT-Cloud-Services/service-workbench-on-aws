{"version":3,"sources":["../../src/models/App.js"],"names":["App","types","model","userAuthenticated","actions","runInAction","fn","self","init","payload","tokenNotExpired","_","get","setUserAuthenticated","flag","cleanup","registerContextItems","appContext","app","create"],"mappings":";;;;;;;;AAeA;;AACA;;;;;;;;AAEA,IAAMA,GAAG,GAAGC,qBACTC,KADS,CACH,SADG,EACQ;AAChBC,EAAAA,iBAAiB,EAAE;AADH,CADR,EAITC,OAJS,CAID;AAAA,SAAO;AACd;AACA;AACAC,IAAAA,WAHc,uBAGFC,EAHE,EAGE;AACd,aAAOA,EAAE,EAAT;AACD;AALa,GAAP;AAAA,CAJC,EAWTF,OAXS,CAWD,UAAAG,IAAI;AAAA,SAAK;AAChBC,IAAAA,IAAI;AAAA,0EAAE,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,gBAAAA,eADF,GACoBC,mBAAEC,GAAF,CAAMH,OAAN,EAAe,kBAAf,MAAuC,YAD3D;;AAEJ,oBAAIC,eAAJ,EAAqB;AACnBH,kBAAAA,IAAI,CAACM,oBAAL,CAA0B,IAA1B;AACD;;AAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,OADY;AAQhBA,IAAAA,oBARgB,gCAQKC,IARL,EAQW;AACzBP,MAAAA,IAAI,CAACJ,iBAAL,GAAyBW,IAAzB;AACD,KAVe;AAYhB;AACAC,IAAAA,OAbgB,qBAaN;AACRR,MAAAA,IAAI,CAACM,oBAAL,CAA0B,KAA1B;AACD;AAfe,GAAL;AAAA,CAXH,CAAZ;;;;AA6BA,SAASG,oBAAT,CAA8BC,UAA9B,EAA0C;AACxCA,EAAAA,UAAU,CAACC,GAAX,GAAiBlB,GAAG,CAACmB,MAAJ,CAAW,EAAX,EAAeF,UAAf,CAAjB;AACD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\n\nconst App = types\n  .model('BaseApp', {\n    userAuthenticated: false,\n  })\n  .actions(() => ({\n    // I had issues using runInAction from mobx\n    // the issue is discussed here https://github.com/mobxjs/mobx-state-tree/issues/915\n    runInAction(fn) {\n      return fn();\n    },\n  }))\n  .actions(self => ({\n    init: async payload => {\n      const tokenNotExpired = _.get(payload, 'tokenInfo.status') === 'notExpired';\n      if (tokenNotExpired) {\n        self.setUserAuthenticated(true);\n      }\n    },\n\n    setUserAuthenticated(flag) {\n      self.userAuthenticated = flag;\n    },\n\n    // this method is called by the Cleaner\n    cleanup() {\n      self.setUserAuthenticated(false);\n    },\n  }));\n\nfunction registerContextItems(appContext) {\n  appContext.app = App.create({}, appContext);\n}\n\nexport { App, registerContextItems };\n"],"file":"App.js"}