{"version":3,"sources":["../../../src/models/forms/Validate.js"],"names":["fieldsToValidationRules","fieldsConfig","_","transform","rules","config","fieldName","validate","input","validationRules","validation","Validator"],"mappings":";;;;;;;AAeA;;AACA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,uBAAT,CAAiCC,YAAjC,EAA+C;AAC7C,SAAOC,mBAAEC,SAAF,CACLF,YADK,EAEL,UAACG,KAAD,EAAQC,MAAR,EAAgBC,SAAhB,EAA8B;AAC5B,QAAID,MAAM,CAACD,KAAX,EAAkB;AAChBA,MAAAA,KAAK,CAACE,SAAD,CAAL,GAAmBD,MAAM,CAACD,KAA1B;AACD;;AACD,WAAOA,KAAP;AACD,GAPI,EAQL,EARK,CAAP;AAUD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACeG,Q;;;;;sEAAf,iBAAwBC,KAAxB,EAA+BP,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQQ,YAAAA,eADR,GAC0BT,uBAAuB,CAACC,YAAD,CADjD;;AAGE,gBAAIQ,eAAJ,EAAqB;AACnBC,cAAAA,UAAU,GAAG,IAAIC,uBAAJ,CAAcH,KAAd,EAAqBC,eAArB,CAAb;AACD;;AALH,6CAMSC,UANT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;eASeH,Q","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport Validator from 'validatorjs';\n\n/**\n * Transforms fields object from\n {\n  fieldName1: {\n    rules: string,\n  },\n  fieldName2: {\n    rules: string,\n  },\n }\n\n to\n\n {\n  fieldName1: rulesString,\n  fieldName2: rulesString,\n }\n *\n */\nfunction fieldsToValidationRules(fieldsConfig) {\n  return _.transform(\n    fieldsConfig,\n    (rules, config, fieldName) => {\n      if (config.rules) {\n        rules[fieldName] = config.rules;\n      }\n      return rules;\n    },\n    {},\n  );\n}\n\n/**\n * Validates given input data using the form fields configuration\n *\n * @param input The object to validate\n * @param fieldsConfig The field configuration to use for validation. The config must be in the following format.\n {\n  fieldName1: {\n    rules: string,\n  },\n  fieldName2: {\n    rules: string,\n  },\n }\n * @returns {Promise<Validator>}\n */\nasync function validate(input, fieldsConfig) {\n  const validationRules = fieldsToValidationRules(fieldsConfig);\n  let validation;\n  if (validationRules) {\n    validation = new Validator(input, validationRules);\n  }\n  return validation;\n}\n\nexport default validate;\n"],"file":"Validate.js"}