{"version":3,"sources":["../../../src/models/users/UserStore.js"],"names":["UserStore","BaseStore","named","props","user","types","maybe","User","actions","self","superCleanup","cleanup","doLoad","runInAction","create","undefined","views","empty","_","isEmpty","registerContextItems","appContext","userStore"],"mappings":";;;;;;;;AAeA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,qBAAUC,KAAV,CAAgB,WAAhB,EACfC,KADe,CACT;AACLC,EAAAA,IAAI,EAAEC,qBAAMC,KAAN,CAAYC,UAAZ;AADD,CADS,EAIfC,OAJe,CAIP,UAAAC,IAAI,EAAI;AACf;AACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAA1B;AAEA,SAAO;AACCC,IAAAA,MADD,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACM,mBADN;;AAAA;AACPR,gBAAAA,IADO;AAEbK,gBAAAA,IAAI,CAACI,WAAL,CAAiB,YAAM;AACrBJ,kBAAAA,IAAI,CAACL,IAAL,GAAYG,WAAKO,MAAL,CAAYV,IAAZ,CAAZ;AACD,iBAFD;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKd,KANI;AAOLO,IAAAA,OAAO,EAAE,mBAAM;AACbF,MAAAA,IAAI,CAACL,IAAL,GAAYW,SAAZ;AACAL,MAAAA,YAAY;AACb;AAVI,GAAP;AAYD,CApBe,EAsBfM,KAtBe,CAsBT,UAAAP,IAAI;AAAA,SAAK;AACd,QAAIQ,KAAJ,GAAY;AACV,aAAOC,mBAAEC,OAAF,CAAUV,IAAI,CAACL,IAAf,CAAP;AACD;;AAHa,GAAL;AAAA,CAtBK,CAAlB;;;;AA4BA,SAASgB,oBAAT,CAA8BC,UAA9B,EAA0C;AACxCA,EAAAA,UAAU,CAACC,SAAX,GAAuBtB,SAAS,CAACc,MAAV,CAAiB,EAAjB,EAAqBO,UAArB,CAAvB;AACD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\n\nimport { getUser } from '../../helpers/api';\nimport { BaseStore } from '../BaseStore';\nimport { User } from './User';\n\nconst UserStore = BaseStore.named('UserStore')\n  .props({\n    user: types.maybe(User),\n  })\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const user = await getUser();\n        self.runInAction(() => {\n          self.user = User.create(user);\n        });\n      },\n      cleanup: () => {\n        self.user = undefined;\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get empty() {\n      return _.isEmpty(self.user);\n    },\n  }));\n\nfunction registerContextItems(appContext) {\n  appContext.userStore = UserStore.create({}, appContext);\n}\n\nexport { UserStore, registerContextItems };\n"],"file":"UserStore.js"}