{"version":3,"sources":["../../../src/models/users/UserIdentifier.js"],"names":["UserIdentifier","types","model","username","ns","views","self","isSame","id","identifierStr","identifier","JSON","stringify"],"mappings":";;;;;;;AAeA;;AAfA;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA,IAAMA,cAAc,GAAGC,qBACpBC,KADoB,CACd,gBADc,EACI;AACvBC,EAAAA,QAAQ,EAAE,EADa;AAEvBC,EAAAA,EAAE,EAAE;AAFmB,CADJ,EAKpBC,KALoB,CAKd,UAAAC,IAAI;AAAA,SAAK;AACdC,IAAAA,MADc,wBACW;AAAA,UAAhBJ,QAAgB,QAAhBA,QAAgB;AAAA,UAANC,EAAM,QAANA,EAAM;AACvB,aAAOE,IAAI,CAACH,QAAL,KAAkBA,QAAlB,IAA8BG,IAAI,CAACF,EAAL,KAAYA,EAAjD;AACD,KAHa;;AAId,QAAII,EAAJ,GAAS;AACP,aAAOF,IAAI,CAACG,aAAZ;AACD,KANa;;AAOd,QAAIC,UAAJ,GAAiB;AACf,aAAOJ,IAAP;AACD,KATa;;AAUd,QAAIG,aAAJ,GAAoB;AAClB,aAAOE,IAAI,CAACC,SAAL,CAAe,gCAAYN,IAAZ,CAAf,CAAP;AACD;;AAZa,GAAL;AAAA,CALU,CAAvB;;eAoBeN,c","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { getSnapshot, types } from 'mobx-state-tree';\n\n// A user may be authenticated by different authentication providers due to this there is a\n// chance of collision of usernames across different authentication/identity providers.\n// Due to this, each user is uniquely identified by not just the username but \"username\" plus \"ns\" (i.e., namespace).\n// The MST model below represents this user identifier containing username and the namespace.\nconst UserIdentifier = types\n  .model('UserIdentifier', {\n    username: '',\n    ns: '',\n  })\n  .views(self => ({\n    isSame({ username, ns }) {\n      return self.username === username && self.ns === ns;\n    },\n    get id() {\n      return self.identifierStr;\n    },\n    get identifier() {\n      return self;\n    },\n    get identifierStr() {\n      return JSON.stringify(getSnapshot(self));\n    },\n  }));\n\nexport default UserIdentifier;\n"],"file":"UserIdentifier.js"}