{"version":3,"sources":["../../../src/models/api-keys/ApiKey.js"],"names":["ApiKey","types","model","id","identifier","uid","updatedAt","status","createdAt","expiryTime","key","optional","string","views","self","effectiveStatus","_","now","isActive","isRevoked"],"mappings":";;;;;;;AAeA;;AACA;;;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,IAAMA,MAAM,GAAGC,qBACZC,KADY,CACN,QADM,EACI;AACfC,EAAAA,EAAE,EAAEF,qBAAMG,UADK;AAEfC,EAAAA,GAAG,EAAE,EAFU;AAGfC,EAAAA,SAAS,EAAE,EAHI;AAIfC,EAAAA,MAAM,EAAE,EAJO;AAKfC,EAAAA,SAAS,EAAE,EALI;AAMfC,EAAAA,UAAU,EAAE,CANG;AAOfC,EAAAA,GAAG,EAAET,qBAAMU,QAAN,CAAeV,qBAAMW,MAArB,EAA6B,EAA7B;AAPU,CADJ,EAUZC,KAVY,CAUN,UAAAC,IAAI;AAAA,SAAK;AACd,QAAIC,eAAJ,GAAsB;AACpB,UAAID,IAAI,CAACP,MAAL,KAAgB,QAApB,EAA8B;AAC5B;AACA,eAAOO,IAAI,CAACP,MAAZ;AACD,OAJmB,CAKpB;;;AACA,UAAIO,IAAI,CAACL,UAAL,GAAkB,CAAlB,IAAuBO,mBAAEC,GAAF,KAAUH,IAAI,CAACL,UAA1C,EAAsD;AACpD,eAAO,SAAP;AACD;;AACD,aAAOK,IAAI,CAACP,MAAZ;AACD,KAXa;;AAYd,QAAIW,QAAJ,GAAe;AACb,aAAOJ,IAAI,CAACC,eAAL,KAAyB,QAAhC;AACD,KAda;;AAed,QAAII,SAAJ,GAAgB;AACd,aAAOL,IAAI,CAACC,eAAL,KAAyB,SAAhC;AACD;;AAjBa,GAAL;AAAA,CAVE,CAAf;;eA8Bef,M","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { types } from 'mobx-state-tree';\nimport _ from 'lodash';\n\nconst ApiKey = types\n  .model('ApiKey', {\n    id: types.identifier,\n    uid: '',\n    updatedAt: '',\n    status: '',\n    createdAt: '',\n    expiryTime: 0,\n    key: types.optional(types.string, ''),\n  })\n  .views(self => ({\n    get effectiveStatus() {\n      if (self.status !== 'active') {\n        // if status it not active then the effective status is same as status (such as \"revoked\")\n        return self.status;\n      }\n      // if status is active then make sure it is not expired\n      if (self.expiryTime > 0 && _.now() > self.expiryTime) {\n        return 'expired';\n      }\n      return self.status;\n    },\n    get isActive() {\n      return self.effectiveStatus === 'active';\n    },\n    get isRevoked() {\n      return self.effectiveStatus === 'revoked';\n    },\n  }));\n\nexport default ApiKey;\n"],"file":"ApiKey.js"}