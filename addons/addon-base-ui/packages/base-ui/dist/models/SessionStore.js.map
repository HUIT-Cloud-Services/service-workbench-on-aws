{"version":3,"sources":["../../src/models/SessionStore.js"],"names":["EventBus","listenersMap","channel","id","listener","entries","push","event","keys","_","key","startsWith","entry","uiEventBus","SessionStore","map","Map","clear","prefix","get","value","set","sessionStore","registerContextItems","appContext"],"mappings":";;;;;;;;AAgBA;;;;;;;;;;;;;;;;;;;;IAEMA,Q;AACJ,sBAAc;AAAA;;AACZ,SAAKC,YAAL,GAAoB,EAApB;AACD;;;;6BAEQC,O,QAA2B;AAAA,UAAhBC,EAAgB,QAAhBA,EAAgB;AAAA,UAAZC,QAAY,QAAZA,QAAY;AAClC,UAAMC,OAAO,GAAG,KAAKJ,YAAL,CAAkBC,OAAlB,KAA8B,EAA9C;AACAG,MAAAA,OAAO,CAACC,IAAR,CAAa;AAAEH,QAAAA,EAAE,EAAFA,EAAF;AAAMC,QAAAA,QAAQ,EAARA;AAAN,OAAb;AAEA,WAAKH,YAAL,CAAkBC,OAAlB,IAA6BG,OAA7B;AACD;;;;gGAEeH,O,EAASK,K;;;;;;;AACjBC,gBAAAA,I,GAAOC,mBAAED,IAAF,CAAO,KAAKP,YAAZ,C;AAEb;;uDACkBO,I;;;;;;;;;;;AAAPE,gBAAAA,G;;qBACLD,mBAAEE,UAAF,CAAaD,GAAb,EAAkBR,OAAlB,C;;;;;AACIG,gBAAAA,O,GAAU,KAAKJ,YAAL,CAAkBS,GAAlB,C;wDACIL,O;;;;;;;;;;;AAATO,gBAAAA,K;;uBACHA,KAAK,CAACR,QAAN,CAAeG,KAAf,EAAsB;AAAEK,kBAAAA,KAAK,EAALA,KAAF;AAASV,kBAAAA,OAAO,EAAPA;AAAT,iBAAtB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKd;AACA;;;;;;;AAGF,IAAMW,UAAU,GAAG,IAAIb,QAAJ,EAAnB,C,CAEA;AACA;;;;IACMc,Y;AACJ,0BAAc;AAAA;;AACZ,SAAKC,GAAL,GAAW,IAAIC,GAAJ,EAAX;AACD;;;;8BAES;AACR,WAAKD,GAAL,CAASE,KAAT;AACD,K,CAED;;;;qCACiBC,M,EAAQ;AACvB;AACA;AACA,UAAMV,IAAI,GAAG,KAAKO,GAAL,CAASP,IAAT,EAAb;AACA;;AAJuB,kDAKLA,IALK;AAAA;;AAAA;AAKvB,+DAAwB;AAAA,cAAbE,GAAa;;AACtB,cAAID,mBAAEE,UAAF,CAAaD,GAAb,EAAkBQ,MAAlB,CAAJ,EAA+B;AAC7B,iBAAKH,GAAL,WAAgBL,GAAhB;AACD;AACF;AACD;;AAVuB;AAAA;AAAA;AAAA;AAAA;AAWxB;;;wBAEGA,G,EAAK;AACP,aAAO,KAAKK,GAAL,CAASI,GAAT,CAAaT,GAAb,CAAP;AACD;;;wBAEGA,G,EAAKU,K,EAAO;AACd,WAAKL,GAAL,CAASM,GAAT,CAAaX,GAAb,EAAkBU,KAAlB;AACD;;;;;;AAGH,IAAME,YAAY,GAAG,IAAIR,YAAJ,EAArB;;;AAEA,SAASS,oBAAT,CAA8BC,UAA9B,EAA0C;AACxCA,EAAAA,UAAU,CAACF,YAAX,GAA0BA,YAA1B;AACAE,EAAAA,UAAU,CAACX,UAAX,GAAwBA,UAAxB;AACD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\n/* eslint-disable max-classes-per-file */\nimport _ from 'lodash';\n\nclass EventBus {\n  constructor() {\n    this.listenersMap = {};\n  }\n\n  listenTo(channel, { id, listener }) {\n    const entries = this.listenersMap[channel] || [];\n    entries.push({ id, listener });\n\n    this.listenersMap[channel] = entries;\n  }\n\n  async fireEvent(channel, event) {\n    const keys = _.keys(this.listenersMap);\n\n    /* eslint-disable no-restricted-syntax, no-await-in-loop */\n    for (const key of keys) {\n      if (_.startsWith(key, channel)) {\n        const entries = this.listenersMap[key];\n        for (const entry of entries) {\n          await entry.listener(event, { entry, channel });\n        }\n      }\n    }\n  }\n  /* eslint-enable no-restricted-syntax, no-await-in-loop */\n  // TODO stopListening(id, channel) { }\n}\n\nconst uiEventBus = new EventBus();\n\n// A simple key/value store that only exists while the browser tab is open.\n// You can choose to store your component ui states in here when applicable.\nclass SessionStore {\n  constructor() {\n    this.map = new Map();\n  }\n\n  cleanup() {\n    this.map.clear();\n  }\n\n  // remove all keys that start with the prefix\n  removeStartsWith(prefix) {\n    // map api https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n    // for of https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of\n    const keys = this.map.keys();\n    /* eslint-disable no-restricted-syntax */\n    for (const key of keys) {\n      if (_.startsWith(key, prefix)) {\n        this.map.delete(key);\n      }\n    }\n    /* eslint-enable no-restricted-syntax */\n  }\n\n  get(key) {\n    return this.map.get(key);\n  }\n\n  set(key, value) {\n    this.map.set(key, value);\n  }\n}\n\nconst sessionStore = new SessionStore();\n\nfunction registerContextItems(appContext) {\n  appContext.sessionStore = sessionStore;\n  appContext.uiEventBus = uiEventBus;\n}\n\nexport { sessionStore, uiEventBus, registerContextItems };\n"],"file":"SessionStore.js"}