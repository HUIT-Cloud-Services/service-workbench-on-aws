{"version":3,"sources":["../../../../src/parts/users/__tests__/AddUser.test.js"],"names":["jest","mock","notifMock","require","userStore","usersStore","describe","component","wrapper","beforeEach","instance","fn","displayError","x","it","user","username","email","firstName","handleSubmit","errors","validationErrors","expect","Object","keys","length","toBe","password","toContain","lastName","error","message","badStore","addUser","getStore","toHaveBeenCalledWith","goodStore","not","toHaveBeenCalled"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport AddUser from '../AddUser';\n\njest.mock('../../../helpers/notification');\nconst notifMock = require('../../../helpers/notification');\n\nconst userStore = {};\nconst usersStore = {};\n\ndescribe('AddUser', () => {\n  let component = null;\n  let wrapper = null;\n  beforeEach(() => {\n    // Render component\n    wrapper = shallow(<AddUser.WrappedComponent userStore={userStore} usersStore={usersStore} />);\n\n    // Get instance of the component\n    component = wrapper.instance();\n\n    // mock functions\n    component.goto = jest.fn();\n    notifMock.displayError = jest.fn(x => x);\n  });\n\n  it('should fail because the user did not provide password or last name', async () => {\n    // BUILD\n    const user = {\n      username: 'dschrute',\n      email: 'dschrute@example.com',\n      firstName: 'Dwight',\n    };\n\n    component.user = user;\n    // OPERATE\n    await component.handleSubmit();\n\n    // CHECK\n    const errors = component.validationErrors.errors;\n    expect(Object.keys(errors).length).toBe(2);\n    expect(errors.password).toContain('The password field is required.');\n    expect(errors.lastName).toContain('The lastName field is required.');\n  });\n\n  it('should fail because the store threw an error', async () => {\n    // BUILD\n    const user = {\n      username: 'mscott',\n      email: 'mscott@example.com',\n      password: 'threat_level_midnight',\n      firstName: 'Michael',\n      lastName: 'Scarn',\n    };\n    const error = { message: 'cannot add user' };\n    const badStore = {\n      addUser: jest.fn(() => {\n        throw error;\n      }),\n    };\n    component.getStore = jest.fn(() => {\n      return badStore;\n    });\n\n    component.user = user;\n    // OPERATE\n    await component.handleSubmit();\n\n    // CHECK\n    expect(badStore.addUser).toHaveBeenCalledWith(user);\n    expect(notifMock.displayError).toHaveBeenCalledWith(error);\n  });\n\n  it('should add the user', async () => {\n    // BUILD\n    const user = {\n      username: 'jhalpert',\n      email: 'jhalpert@example.com',\n      password: 'jim&pam<3',\n      firstName: 'Jim',\n      lastName: 'Halpert',\n    };\n    const goodStore = {\n      addUser: jest.fn(),\n    };\n    component.getStore = jest.fn(() => {\n      return goodStore;\n    });\n\n    component.user = user;\n    // OPERATE\n    await component.handleSubmit();\n\n    // CHECK\n    expect(goodStore.addUser).toHaveBeenCalledWith(user);\n    expect(component.goto).toHaveBeenCalledWith('/users');\n    expect(notifMock.displayError).not.toHaveBeenCalled();\n  });\n});\n"],"file":"AddUser.test.js"}