{"version":3,"sources":["../../../src/parts/users/UsersList.js"],"names":["UsersList","props","handleEditorOn","user","event","preventDefault","stopPropagation","mapOfUsersBeingEdited","id","_","assign","clone","handleSave","formProcessing","getStore","updateUser","undefined","handleCancel","handleAddUser","handleAddAuthenticationProvider","usersStore","store","load","pathname","location","history","link","push","renderTotal","nonRootUsers","count","length","renderUsers","usersBeingEditedMap","pageSize","Math","min","showPagination","displayEditableInput","attributeName","row","original","userBeingEdited","handleChange","target","value","handleCheckboxChange","checked","handleRadioChange","booleanColumnValueFilter","trueString","falseString","filter","columnValueBoolean","columnValueStr","filterValue","toLowerCase","indexOf","String","processing","hasNonRootUsers","desc","columnValue","Header","accessor","Cell","filterMethod","isAdmin","minWidth","isActive","status","filterable","cell","content","error","hasNonRootAdmins","renderNoNonRootAdmins","renderMain","renderHeader","React","Component","observable"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { Button, Container, Header, Icon, Checkbox, Label, Dimmer, Loader, Segment, Radio } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { decorate, action, observable, runInAction } from 'mobx';\nimport { getSnapshot } from 'mobx-state-tree';\nimport { inject, observer } from 'mobx-react';\nimport ReactTable from 'react-table';\n\nimport { isStoreError, isStoreLoading, isStoreReady } from '../../models/BaseStore';\nimport ErrorBox from '../helpers/ErrorBox';\nimport { createLink } from '../../helpers/routing';\nimport { displayError } from '../../helpers/notification';\nimport BasicProgressPlaceholder from '../helpers/BasicProgressPlaceholder';\nimport { swallowError } from '../../helpers/utils';\n\nclass UsersList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    runInAction(() => {\n      // An object that keeps track of which user is being edited\n      // Each key in the object below has key as user's unique id (<ns>/<username>)\n      // and value as flag indicating whether to show the editor for the user\n      this.mapOfUsersBeingEdited = {};\n      this.formProcessing = false;\n    });\n  }\n\n  getStore() {\n    return this.props.usersStore;\n  }\n\n  componentDidMount() {\n    const store = this.getStore();\n    swallowError(store.load());\n  }\n\n  handleEditorOn = user =>\n    action(event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Get the underlying plain JavaScript object from the \"user\"\n      // MobX State Tree object using \"getSnapshot\" function\n      this.mapOfUsersBeingEdited[user.id] = _.assign({ id: user.id }, getSnapshot(user));\n      // The this.mapOfUsersBeingEdited is observable, to make sure the render is triggered update the this.mapOfUsersBeingEdited\n      // reference by reassigning a new reference to this.mapOfUsersBeingEdited\n      this.mapOfUsersBeingEdited = _.clone(this.mapOfUsersBeingEdited);\n    });\n\n  goto(pathname) {\n    const { location, history } = this.props;\n    const link = createLink({ location, pathname });\n    history.push(link);\n  }\n\n  renderNoNonRootAdmins() {\n    return (\n      <Segment placeholder>\n        <Header icon className=\"color-grey\">\n          <Icon name=\"users\" />\n          Brand new data lake\n          <Header.Subheader className=\"mt2\">\n            No admin users in the Data Lake. Please add users in the Data Lake or Configure Authentication Provider then\n            login as a regular non-root User.\n          </Header.Subheader>\n        </Header>\n        <Segment.Inline>\n          <Button color=\"blue\" onClick={this.handleAddUser}>\n            Add Users\n          </Button>\n          <Button color=\"teal\" onClick={this.handleAddAuthenticationProvider}>\n            Configure Auth Provider\n          </Button>\n        </Segment.Inline>\n      </Segment>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className=\"mb3 flex\">\n        <Header as=\"h3\" className=\"color-grey mt1 mb0 flex-auto\">\n          <Icon name=\"users\" className=\"align-top\" />\n          <Header.Content className=\"left-align\">\n            Users\n            {this.renderTotal()}\n          </Header.Content>\n        </Header>\n        <Button color=\"blue\" size=\"medium\" basic onClick={this.handleAddUser}>\n          Add User\n        </Button>\n      </div>\n    );\n  }\n\n  renderTotal() {\n    const store = this.getStore();\n    if (isStoreError(store) || isStoreLoading(store)) return null;\n    const nonRootUsers = store.nonRootUsers;\n    const count = nonRootUsers.length;\n\n    return <Label circular>{count}</Label>;\n  }\n\n  renderMain() {\n    return this.renderUsers();\n  }\n\n  renderUsers() {\n    // Read \"this.mapOfUsersBeingEdited\" in the \"render\" method here\n    // The usersBeingEditedMap is then used in the ReactTable\n    // If we directly use this.mapOfUsersBeingEdited in the ReactTable's cell method, MobX does not\n    // realize that it is being used in the outer component's \"render\" method's scope\n    // Due to this, MobX does not re-render the component when observable state changes.\n    // To make this work correctly, we need to access \"this.mapOfUsersBeingEdited\" out side of ReactTable once\n    const usersBeingEditedMap = this.mapOfUsersBeingEdited;\n\n    const store = this.getStore();\n    const nonRootUsers = store.nonRootUsers;\n    // const nonRootUsers = store.list;\n    const pageSize = Math.min(nonRootUsers.length, 50);\n    const showPagination = nonRootUsers.length > pageSize;\n\n    const displayEditableInput = attributeName => row => {\n      const user = row.original;\n      const userBeingEdited = usersBeingEditedMap[user.id];\n      const handleChange = action(event => {\n        event.preventDefault();\n        userBeingEdited[attributeName] = event.target.value;\n      });\n      return userBeingEdited ? (\n        <div className=\"ui focus input\">\n          <input type=\"text\" defaultValue={row.value} onChange={handleChange} />\n        </div>\n      ) : (\n        user[attributeName]\n      );\n    };\n\n    const handleCheckboxChange = (userBeingEdited, attributeName) =>\n      action((event, { checked }) => {\n        userBeingEdited[attributeName] = checked;\n        // update this.mapOfUsersBeingEdited reference to force re-render\n        this.mapOfUsersBeingEdited = _.clone(this.mapOfUsersBeingEdited);\n        event.stopPropagation();\n      });\n    const handleRadioChange = (userBeingEdited, attributeName) =>\n      action((event, { value }) => {\n        userBeingEdited[attributeName] = value;\n        // update this.mapOfUsersBeingEdited reference to force re-render\n        this.mapOfUsersBeingEdited = _.clone(this.mapOfUsersBeingEdited);\n        event.stopPropagation();\n      });\n\n    const booleanColumnValueFilter = (trueString = 'yes', falseString = 'no') => (filter, row) => {\n      const columnValueBoolean = row[filter.id];\n      const columnValueStr = columnValueBoolean ? trueString : falseString;\n      const filterValue = filter.value.toLowerCase();\n      // Allow filtering by typing \"yes/no\" or \"true/false\"\n      return (\n        columnValueStr.indexOf(filterValue) === 0 ||\n        String(columnValueBoolean)\n          .toLowerCase()\n          .indexOf(filterValue) === 0\n      );\n    };\n\n    const processing = this.formProcessing;\n\n    if (!store.hasNonRootUsers) {\n      return null;\n    }\n\n    return (\n      // TODO: add api token stats and active flag here in the table\n      <Segment basic className=\"p0\">\n        <Dimmer active={processing} inverted>\n          <Loader inverted>Updating</Loader>\n        </Dimmer>\n        <ReactTable\n          data={nonRootUsers}\n          defaultSorted={[{ id: 'lastName', desc: true }]}\n          showPagination={showPagination}\n          defaultPageSize={pageSize}\n          className=\"-striped -highlight\"\n          filterable\n          defaultFilterMethod={(filter, row) => {\n            const columnValue = String(row[filter.id]).toLowerCase();\n            const filterValue = filter.value.toLowerCase();\n            return columnValue.indexOf(filterValue) >= 0;\n          }}\n          columns={[\n            {\n              Header: 'User Name',\n              accessor: 'username',\n            },\n            {\n              Header: 'Email',\n              accessor: 'email',\n              Cell: displayEditableInput('email'),\n            },\n            {\n              Header: 'First Name',\n              accessor: 'firstName',\n              Cell: displayEditableInput('firstName'),\n            },\n            {\n              Header: 'Last Name',\n              accessor: 'lastName',\n              Cell: displayEditableInput('lastName'),\n            },\n            {\n              Header: 'Admin',\n              accessor: 'isAdmin',\n              filterMethod: booleanColumnValueFilter(),\n              Cell: row => {\n                const user = row.original;\n                const userBeingEdited = usersBeingEditedMap[user.id];\n                return userBeingEdited ? (\n                  <span>\n                    <Checkbox\n                      checked={userBeingEdited.isAdmin}\n                      label={userBeingEdited.isAdmin ? 'Yes' : 'No'}\n                      onChange={handleCheckboxChange(userBeingEdited, 'isAdmin')}\n                    />\n                  </span>\n                ) : user.isAdmin ? (\n                  <span>\n                    <i className=\"check circle outline icon green\" />\n                    Yes\n                  </span>\n                ) : (\n                  <span>No</span>\n                );\n              },\n            },\n            {\n              Header: 'Status',\n              accessor: 'isActive',\n              filterMethod: booleanColumnValueFilter('active', 'inactive'),\n              minWidth: 125,\n              Cell: row => {\n                const user = row.original;\n                const userBeingEdited = usersBeingEditedMap[user.id];\n                const isActive = userBeingEdited ? userBeingEdited.status.toLowerCase() === 'active' : row.value;\n                return userBeingEdited ? (\n                  <span>\n                    <Radio\n                      name={`status-${user.id}`}\n                      checked={isActive}\n                      value=\"active\"\n                      label=\"Active\"\n                      onChange={handleRadioChange(userBeingEdited, 'status')}\n                    />\n                    <Radio\n                      className=\"ml1\"\n                      name={`status-${user.id}`}\n                      checked={!isActive}\n                      value=\"inactive\"\n                      label=\"Inactive\"\n                      onChange={handleRadioChange(userBeingEdited, 'status')}\n                    />\n                  </span>\n                ) : user.isActive ? (\n                  <span>\n                    <Label color=\"green\">\n                      <i className=\"check circle outline icon\" />\n                      Active\n                    </Label>\n                  </span>\n                ) : (\n                  <span>\n                    <Label color=\"red\">Inactive</Label>\n                  </span>\n                );\n              },\n            },\n            {\n              Header: '',\n              filterable: false,\n              Cell: cell => {\n                const user = cell.original;\n                const userBeingEdited = usersBeingEditedMap[user.id];\n                return userBeingEdited ? (\n                  <span>\n                    <Icon\n                      name=\"checkmark\"\n                      className=\"ml1 cursor-pointer\"\n                      color=\"green\"\n                      onClick={this.handleSave(userBeingEdited)}\n                    />\n                    <Icon\n                      name=\"close\"\n                      className=\"ml1 cursor-pointer\"\n                      color=\"red\"\n                      onClick={this.handleCancel(userBeingEdited)}\n                    />\n                  </span>\n                ) : (\n                  <Icon name=\"pencil\" className=\"ml1 cursor-pointer\" color=\"blue\" onClick={this.handleEditorOn(user)} />\n                );\n              },\n            },\n          ]}\n        />\n      </Segment>\n    );\n  }\n\n  render() {\n    const store = this.getStore();\n    let content;\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} />;\n    } else if (isStoreLoading(store)) {\n      content = <BasicProgressPlaceholder segmentCount={3} />;\n    } else if (isStoreReady(store) && !store.hasNonRootAdmins) {\n      content = this.renderNoNonRootAdmins();\n    } else if (isStoreReady(store) && store.hasNonRootAdmins) {\n      content = this.renderMain();\n    } else {\n      content = null;\n    }\n\n    return (\n      <Container className=\"mt3 animated fadeIn\">\n        {this.renderHeader()}\n        {content}\n      </Container>\n    );\n  }\n\n  handleSave = user =>\n    action(async event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.formProcessing = true;\n\n      try {\n        await this.getStore().updateUser(user);\n        runInAction(() => {\n          this.mapOfUsersBeingEdited[user.id] = undefined;\n          // // The this.mapOfUsersBeingEdited is observable, to make sure the render is triggered update the this.mapOfUsersBeingEdited\n          // // reference by reassigning a new reference to this.mapOfUsersBeingEdited\n          // this.mapOfUsersBeingEdited = _.assign({}, this.mapOfUsersBeingEdited);\n          // this.mapOfUsersBeingEdited = {\n          //   [user.id]: undefined,\n          // };\n          this.formProcessing = false;\n        });\n      } catch (err) {\n        runInAction(() => {\n          this.formProcessing = false;\n        });\n        displayError(err);\n      }\n    });\n\n  handleCancel = user =>\n    action(event => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.mapOfUsersBeingEdited[user.id] = undefined;\n      // // The this.mapOfUsersBeingEdited is observable, to make sure the render is triggered update the this.mapOfUsersBeingEdited\n      // // reference by reassigning a new reference to this.mapOfUsersBeingEdited\n      this.mapOfUsersBeingEdited = _.clone(this.mapOfUsersBeingEdited);\n      // this.mapOfUsersBeingEdited = {\n      //   [user.id]: undefined,\n      // };\n    });\n\n  handleAddUser = () => {\n    this.goto('/users/add');\n  };\n\n  handleAddAuthenticationProvider = () => {\n    this.goto('/authentication-providers');\n  };\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(UsersList, {\n  mapOfUsersBeingEdited: observable,\n  formProcessing: observable,\n});\n\nexport default inject('userStore', 'usersStore')(withRouter(observer(UsersList)));\n"],"file":"UsersList.js"}