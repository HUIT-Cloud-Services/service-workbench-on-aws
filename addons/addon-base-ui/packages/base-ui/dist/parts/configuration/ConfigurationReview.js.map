{"version":3,"sources":["../../../src/parts/configuration/ConfigurationReview.js"],"names":["ConfigurationReview","props","handleCancel","processing","onCancel","_","noop","model","getModel","cancel","handleSave","onSave","configuration","entries","key","value","applyChanges","restart","handlePrevious","event","preventDefault","stopPropagation","form","getForm","previous","dimmer","isUndefined","getDimmer","configRows","definedConfigList","empty","length","review","buttons","content","React","Component","observable","action"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { decorate, action, runInAction, observable } from 'mobx';\nimport { Button, Icon, Segment, Dimmer, Loader } from 'semantic-ui-react';\n\nimport { displayError } from '../../helpers/notification';\nimport ConfigTable from './ConfigTable';\n\n// expected props\n// - model - an instance of the ConfigurationEditor model instance (via props)\n// - onCancel (via props) is called after all the necessary clean up\n// - onSave (via props) is called with (configuration) which is just an object with key/value pairs\n// - dimmer (via props) default to true, set to false if you don't want to use the dimmer (buttons will still be disabled during processing)\nclass ConfigurationReview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    runInAction(() => {\n      this.processing = false;\n    });\n  }\n\n  getModel() {\n    return this.props.model;\n  }\n\n  getForm() {\n    const model = this.getModel();\n    return model.form;\n  }\n\n  getDimmer() {\n    const dimmer = this.props.dimmer;\n    return _.isUndefined(dimmer) ? true : !!dimmer;\n  }\n\n  handleCancel = () => {\n    this.processing = false;\n    const onCancel = this.props.onCancel || _.noop;\n    const model = this.getModel();\n    model.cancel();\n\n    return onCancel();\n  };\n\n  handleSave = async () => {\n    const onSave = this.props.onSave || _.noop;\n    const model = this.getModel();\n    const configuration = {};\n\n    /* eslint-disable no-restricted-syntax */\n    for (const [key, value] of model.configuration.entries()) {\n      configuration[key] = value;\n    }\n    /* eslint-enable no-restricted-syntax */\n\n    try {\n      this.processing = true;\n      await onSave(configuration);\n      runInAction(() => {\n        this.processing = false;\n      });\n      model.applyChanges();\n      model.restart();\n    } catch (error) {\n      runInAction(() => {\n        this.processing = false;\n      });\n      displayError(error);\n    }\n  };\n\n  handlePrevious = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = this.getForm();\n    const model = this.getModel();\n\n    this.processing = false;\n    model.previous(form);\n  };\n\n  render() {\n    const processing = this.processing;\n    const dimmer = this.getDimmer();\n    const model = this.getModel();\n    const configRows = model.definedConfigList || [];\n    const empty = configRows.length === 0;\n    const review = model.review;\n    const buttons = (\n      <div className=\"mt3 clearfix\">\n        {review && (\n          <Button\n            floated=\"right\"\n            color=\"blue\"\n            icon=\"save\"\n            labelPosition=\"left\"\n            disabled={processing || !review || empty}\n            className=\"ml2\"\n            content=\"Save\"\n            onClick={this.handleSave}\n          />\n        )}\n        <Button floated=\"right\" icon disabled={processing} labelPosition=\"left\" onClick={this.handlePrevious}>\n          Previous\n          <Icon name=\"left arrow\" />\n        </Button>\n        <Button floated=\"left\" disabled={processing} onClick={this.handleCancel}>\n          Cancel\n        </Button>\n      </div>\n    );\n\n    let content = <ConfigTable rows={configRows} />;\n    if (empty) content = 'No configuration values are provided';\n\n    return (\n      <>\n        {review && (\n          <Segment padded>\n            {dimmer && (\n              <Dimmer active={processing} inverted>\n                <Loader inverted>Processing</Loader>\n              </Dimmer>\n            )}\n            {content}\n          </Segment>\n        )}\n        {buttons}\n      </>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ConfigurationReview, {\n  processing: observable,\n  handleSave: action,\n  handlePrevious: action,\n  handleCancel: action,\n});\n\nexport default observer(ConfigurationReview);\n"],"file":"ConfigurationReview.js"}