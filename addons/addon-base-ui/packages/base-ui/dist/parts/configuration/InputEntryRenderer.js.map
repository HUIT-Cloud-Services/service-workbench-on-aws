{"version":3,"sources":["../../../src/parts/configuration/InputEntryRenderer.js"],"names":["InputEntryRenderer","props","form","inputEntry","processing","entry","getInputEntry","field","getField","renderDivider","divider","undefined","hasIcon","icon","_","isBoolean","title","getProcessing","getForm","$","name","type","React","Component"],"mappings":";;;;;;;;;AAeA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;IACMA,kB;;;;;;;;;;;;;8BACM;AACR,aAAO,KAAKC,KAAL,CAAWC,IAAlB;AACD;;;oCAEe;AACd,aAAO,KAAKD,KAAL,CAAWE,UAAlB;AACD;;;oCAEe;AACd,aAAO,KAAKF,KAAL,CAAWG,UAAX,IAAyB,KAAhC;AACD;;;6BAEQ;AACP;AACA;AACA,UAAMC,KAAK,GAAG,KAAKC,aAAL,EAAd;AACA,UAAMC,KAAK,GAAG,KAAKC,QAAL,EAAd;AAEA,0BACE,kEACG,KAAKC,aAAL,CAAmBJ,KAAnB,CADH,EAEGE,KAFH,CADF;AAMD;;;kCAEaF,K,EAAO;AACnB,UAAIA,KAAK,CAACK,OAAN,KAAkBC,SAAtB,EAAiC,OAAO,IAAP;AACjC,UAAMD,OAAO,GAAGL,KAAK,CAACK,OAAtB;AACA,UAAME,OAAO,GAAG,CAAC,CAACF,OAAO,CAACG,IAA1B;AAEA,UAAIC,mBAAEC,SAAF,CAAYV,KAAK,CAACK,OAAlB,CAAJ,EAAgC,oBAAO,gCAAC,wBAAD;AAAS,QAAA,SAAS,EAAC;AAAnB,QAAP;AAEhC,0BACE,gCAAC,wBAAD;AAAS,QAAA,UAAU,MAAnB;AAAoB,QAAA,SAAS,EAAC;AAA9B,sBACE,gCAAC,uBAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC;AAAtB,SACGE,OAAO,iBAAI,gCAAC,qBAAD;AAAM,QAAA,IAAI,EAAEF,OAAO,CAACG,IAApB;AAA0B,QAAA,KAAK,EAAC;AAAhC,QADd,EAEGH,OAAO,CAACM,KAFX,CADF,CADF;AAQD;;;+BAEU;AACT,UAAMZ,UAAU,GAAG,KAAKa,aAAL,EAAnB;AACA,UAAMf,IAAI,GAAG,KAAKgB,OAAL,EAAb,CAFS,CAGT;AACA;;AACA,UAAMb,KAAK,GAAG,KAAKC,aAAL,EAAd;AACA,UAAMC,KAAK,GAAGL,IAAI,CAACiB,CAAL,CAAOd,KAAK,CAACe,IAAb,CAAd;;AAEA,cAAQf,KAAK,CAACgB,IAAd;AACE,aAAK,aAAL;AACE,8BAAO,gCAAC,iBAAD;AAAO,YAAA,KAAK,EAAEd,KAAd;AAAqB,YAAA,QAAQ,EAAEH;AAA/B,YAAP;;AACF,aAAK,YAAL;AACE,8BAAO,gCAAC,iBAAD;AAAO,YAAA,KAAK,EAAEG,KAAd;AAAqB,YAAA,QAAQ,EAAEH;AAA/B,YAAP;;AACF,aAAK,eAAL;AACE,8BAAO,gCAAC,oBAAD;AAAU,YAAA,KAAK,EAAEG,KAAjB;AAAwB,YAAA,KAAK,MAA7B;AAA8B,YAAA,SAAS,MAAvC;AAAwC,YAAA,QAAQ,EAAEH;AAAlD,YAAP;;AACF,aAAK,eAAL;AACE,8BAAO,gCAAC,oBAAD;AAAU,YAAA,KAAK,EAAEG,KAAjB;AAAwB,YAAA,QAAQ,EAAEH;AAAlC,YAAP;;AAEF;AACE,8BAAO,iEAAP;AAXJ;AAaD;;;;EAjE8BkB,kBAAMC,S,GAoEvC;;;AACA,oBAASvB,kBAAT,EAA6B,EAA7B;;eAEe,yBAAS,yBAASA,kBAAT,CAAT,C","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { decorate } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Divider, Icon, Header } from 'semantic-ui-react';\n\nimport Input from '../helpers/fields/Input';\nimport YesNo from '../helpers/fields/YesNo';\nimport DropDown from '../helpers/fields/DropDown';\nimport TextArea from '../helpers/fields/TextArea';\n\n// expected props\n// - form (via props)\n// - inputEntry (via props)\n// - processing (via props) (default to false)\nclass InputEntryRenderer extends React.Component {\n  getForm() {\n    return this.props.form;\n  }\n\n  getInputEntry() {\n    return this.props.inputEntry;\n  }\n\n  getProcessing() {\n    return this.props.processing || false;\n  }\n\n  render() {\n    // entry is an object of a shape like:\n    // { name: 'id',  type: 'string/yesNo,..', label, children: [ <optional> ], .. }\n    const entry = this.getInputEntry();\n    const field = this.getField();\n\n    return (\n      <>\n        {this.renderDivider(entry)}\n        {field}\n      </>\n    );\n  }\n\n  renderDivider(entry) {\n    if (entry.divider === undefined) return null;\n    const divider = entry.divider;\n    const hasIcon = !!divider.icon;\n\n    if (_.isBoolean(entry.divider)) return <Divider className=\"mb3 mt0\" />;\n\n    return (\n      <Divider horizontal className=\"mb3 mt0\">\n        <Header as=\"h4\" color=\"grey\">\n          {hasIcon && <Icon name={divider.icon} color=\"grey\" />}\n          {divider.title}\n        </Header>\n      </Divider>\n    );\n  }\n\n  getField() {\n    const processing = this.getProcessing();\n    const form = this.getForm();\n    // entry is an object of a shape like:\n    // { name: 'id',  type: 'string/yesNo,..', label, children: [ <optional> ], .. }\n    const entry = this.getInputEntry();\n    const field = form.$(entry.name);\n\n    switch (entry.type) {\n      case 'stringInput':\n        return <Input field={field} disabled={processing} />;\n      case 'yesNoInput':\n        return <YesNo field={field} disabled={processing} />;\n      case 'dropDownInput':\n        return <DropDown field={field} fluid selection disabled={processing} />;\n      case 'textAreaInput':\n        return <TextArea field={field} disabled={processing} />;\n\n      default:\n        return <></>;\n    }\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(InputEntryRenderer, {});\n\nexport default inject()(observer(InputEntryRenderer));\n"],"file":"InputEntryRenderer.js"}