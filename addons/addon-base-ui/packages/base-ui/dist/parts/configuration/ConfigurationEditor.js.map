{"version":3,"sources":["../../../src/parts/configuration/ConfigurationEditor.js"],"names":["ConfigurationEditor","handleCancel","onCancel","props","_","noop","model","getModel","cancel","handleNext","form","next","handlePrevious","event","preventDefault","stopPropagation","getForm","previous","handleClear","clearSectionConfigs","reset","hasPrevious","inputManifestSection","inputEntries","children","empty","length","processing","errors","_onSubmit","renderSectionTitles","totalSections","currentSectionIndex","showSectionTitles","sectionTitles","sectionsTitles","hasError","times","index","React","Component","action"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { decorate, action } from 'mobx';\nimport { Button, Icon, Segment, Step } from 'semantic-ui-react';\n\nimport Form from '../helpers/fields/Form';\nimport InputEntriesRenderer from './InputEntriesRenderer';\n\n// expected props\n// - model - an instance of the ConfigurationEditor model instance (via props)\n// - onCancel (via props) is called after all the necessary clean up\nclass ConfigurationEditor extends React.Component {\n  getModel() {\n    return this.props.model;\n  }\n\n  getForm() {\n    const model = this.getModel();\n    return model.form;\n  }\n\n  handleCancel = () => {\n    const onCancel = this.props.onCancel || _.noop;\n    const model = this.getModel();\n    model.cancel();\n\n    return onCancel();\n  };\n\n  handleNext = form => {\n    const model = this.getModel();\n    model.next(form);\n  };\n\n  handlePrevious = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = this.getForm();\n    const model = this.getModel();\n\n    model.previous(form);\n  };\n\n  handleClear = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = this.getForm();\n    const model = this.getModel();\n    model.clearSectionConfigs();\n    form.reset();\n  };\n\n  render() {\n    const form = this.getForm();\n    const model = this.getModel();\n    const hasPrevious = model.hasPrevious;\n    const inputManifestSection = model.inputManifestSection || {};\n    const inputEntries = inputManifestSection.children || [];\n    const empty = inputEntries.length === 0;\n\n    return (\n      <Form form={form} onCancel={this.handleCancel} onSuccess={this.handleNext}>\n        {({ processing, errors, _onSubmit, onCancel }) => (\n          <>\n            {!empty && (\n              <div className=\"mt3 clearfix p2\">\n                {this.renderSectionTitles(errors)}\n                <InputEntriesRenderer form={form} inputEntries={inputEntries} processing={processing} />\n              </div>\n            )}\n            {empty && (\n              <Segment padded className=\"mb3\">\n                No configuration values are provided\n              </Segment>\n            )}\n\n            <div className=\"mt0 clearfix\">\n              <Button\n                floated=\"right\"\n                type=\"submit\"\n                color=\"blue\"\n                icon\n                disabled={processing}\n                className=\"ml2\"\n                labelPosition=\"right\"\n              >\n                Next\n                <Icon name=\"right arrow\" />\n              </Button>\n              {hasPrevious && (\n                <Button\n                  floated=\"right\"\n                  className=\"ml2\"\n                  icon\n                  disabled={processing}\n                  labelPosition=\"left\"\n                  onClick={this.handlePrevious}\n                >\n                  Previous\n                  <Icon name=\"left arrow\" />\n                </Button>\n              )}\n              <Button floated=\"right\" disabled={processing} onClick={this.handleClear}>\n                Clear\n              </Button>\n              <Button floated=\"left\" disabled={processing} onClick={onCancel}>\n                Cancel\n              </Button>\n            </div>\n          </>\n        )}\n      </Form>\n    );\n  }\n\n  renderSectionTitles(errors) {\n    const model = this.getModel();\n    const totalSections = model.totalSections;\n    const currentSectionIndex = model.currentSectionIndex;\n    const showSectionTitles = totalSections > 1;\n    const sectionTitles = model.sectionsTitles;\n    const hasError = errors.length > 0;\n    if (!showSectionTitles) return null;\n    if (totalSections < 3) return null; // only show the titles when we have 3 or more sections\n\n    return (\n      <Step.Group size=\"mini\" fluid>\n        {_.times(totalSections, index => (\n          <Step active={index === currentSectionIndex} completed={index < currentSectionIndex}>\n            {hasError && index === currentSectionIndex ? <Icon name=\"times\" /> : <Icon name=\"setting\" />}\n            <Step.Content>\n              <Step.Title>{sectionTitles[index] || ''}</Step.Title>\n            </Step.Content>\n          </Step>\n        ))}\n      </Step.Group>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ConfigurationEditor, {\n  handleNext: action,\n  handlePrevious: action,\n  handleCancel: action,\n  handleClear: action,\n});\n\nexport default observer(ConfigurationEditor);\n"],"file":"ConfigurationEditor.js"}