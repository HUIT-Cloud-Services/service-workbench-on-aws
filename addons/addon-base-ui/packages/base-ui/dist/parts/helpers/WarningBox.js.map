{"version":3,"sources":["../../../src/parts/helpers/WarningBox.js"],"names":["WarningBox","handleRetry","Promise","resolve","then","props","onRetry","_err","defaultMessage","rawMessage","warning","message","_","isString","get","shouldRetry","isFunction","React","Component"],"mappings":";;;;;;;;;AAeA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,U;;;;;;;;;;;;;;;;UACJC,W,GAAc,YAAM;AAClBC,MAAAA,OAAO,CAACC,OAAR,GACGC,IADH,CACQ;AAAA,eAAM,MAAKC,KAAL,CAAWC,OAAX,EAAN;AAAA,OADR,WAES,UAAAC,IAAI,EAAI;AACb;AACD,OAJH;AAKD,K;;;;;;;6BAEQ;AACP,UAAMC,cAAc,GAAG,4CAAvB;AACA,UAAMC,UAAU,GAAG,KAAKJ,KAAL,CAAWK,OAAX,IAAsBF,cAAzC;AACA,UAAMG,OAAO,GAAGC,mBAAEC,QAAF,CAAWJ,UAAX,IAAyBA,UAAzB,GAAsCG,mBAAEE,GAAF,CAAML,UAAN,EAAkB,SAAlB,EAA6BD,cAA7B,CAAtD;;AACA,UAAMO,WAAW,GAAGH,mBAAEI,UAAF,CAAa,KAAKX,KAAL,CAAWC,OAAxB,CAApB;;AAEA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,gCAAC,wBAAD;AAAS,QAAA,OAAO,MAAhB;AAAiB,QAAA,SAAS,EAAC;AAA3B,sBACE,gCAAC,wBAAD,CAAS,MAAT,kBADF,eAEE,2CAAIK,OAAJ,CAFF,EAGGI,WAAW,iBACV,gCAAC,uBAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,KAAK,MAA7B;AAA8B,QAAA,KAAK,EAAC,OAApC;AAA4C,QAAA,OAAO,EAAE,KAAKd;AAA1D,iBAJJ,CADF,CADF;AAaD;;;;EA5BsBgB,kBAAMC,S;;eA+BhB,yBAASlB,UAAT,C","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { Message, Button } from 'semantic-ui-react';\n\nclass WarningBox extends React.Component {\n  handleRetry = () => {\n    Promise.resolve()\n      .then(() => this.props.onRetry())\n      .catch(_err => {\n        /* ignore */\n      });\n  };\n\n  render() {\n    const defaultMessage = 'Hmm... something is needing your attention';\n    const rawMessage = this.props.warning || defaultMessage;\n    const message = _.isString(rawMessage) ? rawMessage : _.get(rawMessage, 'message', defaultMessage);\n    const shouldRetry = _.isFunction(this.props.onRetry);\n\n    return (\n      <div className=\"p3\">\n        <Message warning className=\"mt2 mb2 clearfix\">\n          <Message.Header>Warning</Message.Header>\n          <p>{message}</p>\n          {shouldRetry && (\n            <Button floated=\"right\" basic color=\"brown\" onClick={this.handleRetry}>\n              Retry\n            </Button>\n          )}\n        </Message>\n      </div>\n    );\n  }\n}\n\nexport default observer(WarningBox);\n"],"file":"WarningBox.js"}