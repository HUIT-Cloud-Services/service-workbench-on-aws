{"version":3,"sources":["../../../src/parts/helpers/ErrorBox.js"],"names":["ErrorBox","handleRetry","Promise","resolve","then","props","onRetry","_err","defaultMessage","rawMessage","error","message","_","isString","get","shouldRetry","isFunction","className","React","Component"],"mappings":";;;;;;;;;AAeA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;IACMA,Q;;;;;;;;;;;;;;;;UACJC,W,GAAc,YAAM;AAClBC,MAAAA,OAAO,CAACC,OAAR,GACGC,IADH,CACQ;AAAA,eAAM,MAAKC,KAAL,CAAWC,OAAX,EAAN;AAAA,OADR,WAES,UAAAC,IAAI,EAAI;AACb;AACD,OAJH;AAKD,K;;;;;;;6BAEQ;AACP,UAAMC,cAAc,GAAG,6BAAvB;AACA,UAAMC,UAAU,GAAG,KAAKJ,KAAL,CAAWK,KAAX,IAAoBF,cAAvC;AACA,UAAMG,OAAO,GAAGC,mBAAEC,QAAF,CAAWJ,UAAX,IAAyBA,UAAzB,GAAsCG,mBAAEE,GAAF,CAAML,UAAN,EAAkB,SAAlB,EAA6BD,cAA7B,CAAtD;;AACA,UAAMO,WAAW,GAAGH,mBAAEI,UAAF,CAAa,KAAKX,KAAL,CAAWC,OAAxB,CAApB;;AACA,UAAMW,SAAS,GAAG,KAAKZ,KAAL,CAAWY,SAAX,GAAuB,KAAKZ,KAAL,CAAWY,SAAlC,GAA8C,IAAhE;AAEA,0BACE;AAAK,QAAA,SAAS,YAAKA,SAAL;AAAd,sBACE,gCAAC,wBAAD;AAAS,QAAA,QAAQ,MAAjB;AAAkB,QAAA,SAAS,EAAC;AAA5B,sBACE,gCAAC,wBAAD,CAAS,MAAT,oCADF,eAEE,2CAAIN,OAAJ,CAFF,EAGGI,WAAW,iBACV,gCAAC,uBAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,KAAK,MAA7B;AAA8B,QAAA,KAAK,EAAC,KAApC;AAA0C,QAAA,OAAO,EAAE,KAAKd;AAAxD,iBAJJ,CADF,CADF;AAaD;;;;EA7BoBiB,kBAAMC,S;;eAgCd,yBAASnB,QAAT,C","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { Message, Button } from 'semantic-ui-react';\n\n// expected props\n// - error (an object with a \"message\" property  or a string)\n// - className\nclass ErrorBox extends React.Component {\n  handleRetry = () => {\n    Promise.resolve()\n      .then(() => this.props.onRetry())\n      .catch(_err => {\n        /* ignore */\n      });\n  };\n\n  render() {\n    const defaultMessage = 'Hmm... something went wrong';\n    const rawMessage = this.props.error || defaultMessage;\n    const message = _.isString(rawMessage) ? rawMessage : _.get(rawMessage, 'message', defaultMessage);\n    const shouldRetry = _.isFunction(this.props.onRetry);\n    const className = this.props.className ? this.props.className : 'p3';\n\n    return (\n      <div className={`${className}`}>\n        <Message negative className=\"clearfix\">\n          <Message.Header>A problem was encountered</Message.Header>\n          <p>{message}</p>\n          {shouldRetry && (\n            <Button floated=\"right\" basic color=\"red\" onClick={this.handleRetry}>\n              Retry\n            </Button>\n          )}\n        </Message>\n      </div>\n    );\n  }\n}\n\nexport default observer(ErrorBox);\n"],"file":"ErrorBox.js"}