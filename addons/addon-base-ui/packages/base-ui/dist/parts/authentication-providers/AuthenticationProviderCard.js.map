{"version":3,"sources":["../../../src/parts/authentication-providers/AuthenticationProviderCard.js"],"names":["AuthenticationProviderCard","handleEditModeClick","event","preventDefault","stopPropagation","id","getAuthenticationProviderConfig","goto","encodeURIComponent","authenticationProviderConfig","renderIndexLabel","config","title","renderStatus","renderActionButtons","type","description","props","isActive","_","toLower","status","pos","Component"],"mappings":";;;;;;;;;AAeA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;IACMA,0B;;;;;;;;;;;;;;;;UAgDJC,mB,GAAsB,UAAAC,KAAK,EAAI;AAC7BA,MAAAA,KAAK,CAACC,cAAN;AACAD,MAAAA,KAAK,CAACE,eAAN;;AACA,UAAMC,EAAE,GAAG,MAAKC,+BAAL,GAAuCD,EAAlD;;AACA,UAAME,KAAI,GAAG,mDAAb;;AACAA,MAAAA,KAAI,qCAA8BC,kBAAkB,CAACH,EAAD,CAAhD,WAAJ;AACD,K;;;;;;;6BArDQ;AACP,UAAMI,4BAA4B,GAAG,KAAKH,+BAAL,EAArC;AACA;AAAA;AACE;AACA;AAAK,UAAA,SAAS,EAAC;AAAf,wBACE;AAAK,UAAA,SAAS,EAAC;AAAf,wBACE;AAAK,UAAA,SAAS,EAAC;AAAf,WACG,KAAKI,gBAAL,EADH,eAEE,gCAAC,uBAAD;AAAQ,UAAA,EAAE,EAAC,IAAX;AAAgB,UAAA,KAAK,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC;AAAvC,WACGD,4BAA4B,CAACE,MAA7B,CAAoCC,KADvC,EAC8C,GAD9C,eAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,WAAqCH,4BAA4B,CAACJ,EAAlE,CAFF,eAGE,6CAAM,KAAKQ,YAAL,CAAkBJ,4BAAlB,CAAN,CAHF,CAFF,eAOE;AAAK,UAAA,SAAS,EAAC;AAAf,WAA0B,KAAKK,mBAAL,EAA1B,CAPF,CADF,eAUE;AAAK,UAAA,SAAS,EAAC;AAAf,WAAuCL,4BAA4B,CAACE,MAA7B,CAAoCI,IAApC,CAAyCC,WAAhF,CAVF,CADF;AAFF;AAiBD;;;sDAEiC;AAChC,aAAO,KAAKC,KAAL,CAAWR,4BAAlB;AACD;;;iCAEYA,4B,EAA8B;AACzC,UAAMS,QAAQ,GAAGC,mBAAEC,OAAF,CAAUX,4BAA4B,CAACY,MAAvC,MAAmD,QAApE;AACA,0BAAO,gCAAC,sBAAD;AAAO,QAAA,KAAK,EAAEH,QAAQ,GAAG,OAAH,GAAa;AAAnC,SAA2CT,4BAA4B,CAACY,MAAxE,CAAP;AACD;;;uCAEkB;AACjB,UAAMC,GAAG,GAAG,KAAKL,KAAL,CAAWK,GAAvB;AACA,0BACE,gCAAC,sBAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,MAAM,MAAzB;AAA0B,QAAA,KAAK,EAAC,MAAhC;AAAuC,QAAA,SAAS,EAAC;AAAjD,SACGA,GADH,CADF;AAKD;;;0CAEqB;AACpB,0BACE,gCAAC,uBAAD,CAAQ,KAAR;AAAc,QAAA,KAAK,MAAnB;AAAoB,QAAA,IAAI,EAAC;AAAzB,sBACE,gCAAC,uBAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAE,KAAKrB;AAAlC,QADF,CADF;AAKD;;;;EA9CsCsB,gB;;eAyD1B,gCAAW,yBAASvB,0BAAT,CAAX,C","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Header, Label } from 'semantic-ui-react';\nimport { gotoFn } from '../../helpers/routing';\n\n// expected props\n// - authenticationProviderConfig\n// - pos\nclass AuthenticationProviderCard extends Component {\n  render() {\n    const authenticationProviderConfig = this.getAuthenticationProviderConfig();\n    return (\n      // The custom attribute \"data-id\" here is used for conveying the id of the virtualDatabase being clicked in the \"handleVirtualDatabaseClick\" handler\n      <div className=\"flex\">\n        <div className=\"flex-auto\">\n          <div className=\"flex\">\n            {this.renderIndexLabel()}\n            <Header as=\"h2\" color=\"grey\" className=\"mt0\">\n              {authenticationProviderConfig.config.title}{' '}\n              <span className=\"pl2 fs-9 breakout\">{authenticationProviderConfig.id}</span>\n              <div>{this.renderStatus(authenticationProviderConfig)}</div>\n            </Header>\n            <div className=\"ml-auto\">{this.renderActionButtons()}</div>\n          </div>\n          <div className=\"ml3 mb2 mt2 breakout\">{authenticationProviderConfig.config.type.description}</div>\n        </div>\n      </div>\n    );\n  }\n\n  getAuthenticationProviderConfig() {\n    return this.props.authenticationProviderConfig;\n  }\n\n  renderStatus(authenticationProviderConfig) {\n    const isActive = _.toLower(authenticationProviderConfig.status) === 'active';\n    return <Label color={isActive ? 'green' : 'red'}>{authenticationProviderConfig.status}</Label>;\n  }\n\n  renderIndexLabel() {\n    const pos = this.props.pos;\n    return (\n      <Label size=\"mini\" ribbon color=\"blue\" className=\"line-height-20-px\">\n        {pos}\n      </Label>\n    );\n  }\n\n  renderActionButtons() {\n    return (\n      <Button.Group basic size=\"mini\">\n        <Button icon=\"edit\" onClick={this.handleEditModeClick} />\n      </Button.Group>\n    );\n  }\n\n  handleEditModeClick = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const id = this.getAuthenticationProviderConfig().id;\n    const goto = gotoFn(this);\n    goto(`/authentication-providers/${encodeURIComponent(id)}/edit`);\n  };\n}\n\nexport default withRouter(observer(AuthenticationProviderCard));\n"],"file":"AuthenticationProviderCard.js"}