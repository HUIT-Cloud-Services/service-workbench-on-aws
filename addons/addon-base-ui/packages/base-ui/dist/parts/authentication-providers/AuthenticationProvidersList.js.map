{"version":3,"sources":["../../../src/parts/authentication-providers/AuthenticationProvidersList.js"],"names":["AuthenticationProvidersList","handleAddAuthenticationProviderClick","_event","goto","store","getStore","load","startHeartbeat","stopHeartbeat","props","authenticationProviderConfigsStore","content","error","renderMain","renderTitle","renderCount","showCount","list","length","_","map","authNProviderConfig","idx","id","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Header, Icon, Label, Segment } from 'semantic-ui-react';\nimport { gotoFn } from '../../helpers/routing';\n\nimport { swallowError } from '../../helpers/utils';\nimport { isStoreError, isStoreLoading, isStoreNotEmpty, isStoreReady } from '../../models/BaseStore';\nimport BasicProgressPlaceholder from '../helpers/BasicProgressPlaceholder';\nimport ErrorBox from '../helpers/ErrorBox';\nimport AuthenticationProviderCard from './AuthenticationProviderCard';\n\n// expected props\n// -  authenticationProviderConfigsStore (via injection)\nclass AuthenticationProvidersList extends Component {\n  componentDidMount() {\n    const store = this.getStore();\n    swallowError(store.load());\n    store.startHeartbeat();\n  }\n\n  componentWillUnmount() {\n    const store = this.getStore();\n    store.stopHeartbeat();\n  }\n\n  getStore() {\n    return this.props.authenticationProviderConfigsStore;\n  }\n\n  handleAddAuthenticationProviderClick = _event => {\n    const goto = gotoFn(this);\n    goto('/authentication-providers/add');\n  };\n\n  render() {\n    const store = this.getStore();\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} />;\n    } else if (isStoreLoading(store)) {\n      content = <BasicProgressPlaceholder segmentCount={3} />;\n    } else if (isStoreReady(store)) {\n      content = this.renderMain();\n    } else {\n      content = null;\n    }\n\n    return (\n      <Container className=\"mt3\">\n        <div className=\"mb4\">\n          {this.renderTitle()}\n          {content}\n        </div>\n      </Container>\n    );\n  }\n\n  renderTitle() {\n    const renderCount = () => {\n      const store = this.getStore();\n      const showCount = isStoreReady(store) && isStoreNotEmpty(store);\n      const list = store.list;\n      return (\n        showCount && (\n          <Label circular size=\"medium\">\n            {list.length}\n          </Label>\n        )\n      );\n    };\n\n    return (\n      <div className=\"mb3 flex\">\n        <Header as=\"h3\" className=\"color-grey mt1 mb0 flex-auto\">\n          <Icon name=\"user secret\" className=\"align-top\" />\n          <Header.Content className=\"left-align\">\n            Authentication Providers\n            {renderCount()}\n          </Header.Content>\n        </Header>\n        {/* <Button color=\"blue\" size=\"medium\" basic onClick={this.handleAddAuthenticationProviderClick}>Add Authentication Provider</Button> */}\n      </div>\n    );\n  }\n\n  renderMain() {\n    const store = this.getStore();\n    const list = store.list;\n\n    return (\n      <div>\n        {_.map(list, (authNProviderConfig, idx) => (\n          <Segment clearing key={authNProviderConfig.id} className=\"mb2\">\n            <AuthenticationProviderCard authenticationProviderConfig={authNProviderConfig} pos={idx + 1} />\n          </Segment>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default inject('authenticationProviderConfigsStore')(withRouter(observer(AuthenticationProvidersList)));\n"],"file":"AuthenticationProvidersList.js"}