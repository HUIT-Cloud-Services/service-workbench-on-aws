{"version":3,"sources":["../../src/helpers/form.js"],"names":["formPlugins","Object","freeze","dvr","validatorjs","formOptions","showErrorsOnReset","createForm","fields","pluginsParam","optionsParam","plugins","options","MobxReactForm","createSingleFieldForm","fieldName","value","fieldsObj","_","isArray","find","field","keys","fieldOfInterest","get","Error","fieldWithValue","assign","fieldsToUse"],"mappings":";;;;;;;;;AAeA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc;AAChCC,EAAAA,GAAG,EAAE,qBAAIC,uBAAJ;AAD2B,CAAd,CAApB;;AAIA,IAAMC,WAAW,GAAGJ,MAAM,CAACC,MAAP,CAAc;AAChCI,EAAAA,iBAAiB,EAAE;AADa,CAAd,CAApB;;;AAIA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,YAA5B,EAA0CC,YAA1C,EAAwD;AACtD,MAAMC,OAAO,GAAGF,YAAY,IAAIT,WAAhC;AACA,MAAMY,OAAO,GAAGF,YAAY,IAAIL,WAAhC;AACA,SAAO,IAAIQ,yBAAJ,CAAkB;AAAEL,IAAAA,MAAM,EAANA;AAAF,GAAlB,EAA8B;AAAEG,IAAAA,OAAO,EAAPA,OAAF;AAAWC,IAAAA,OAAO,EAAPA;AAAX,GAA9B,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,qBAAT,CAA+BC,SAA/B,EAA0CP,MAA1C,EAAkDQ,KAAlD,EAAyDP,YAAzD,EAAuEC,YAAvE,EAAqF;AACnF;AACA;AACA;AACA;AACA,MAAMO,SAAS,GAAGC,mBAAEC,OAAF,CAAUX,MAAV,IAAoBU,mBAAEE,IAAF,CAAOZ,MAAP,EAAe,UAAAa,KAAK;AAAA,WAAIH,mBAAEI,IAAF,CAAOD,KAAP,EAAc,CAAd,MAAqBN,SAAzB;AAAA,GAApB,CAApB,GAA8EP,MAAhG;;AACA,MAAMe,eAAe,GAAGL,mBAAEM,GAAF,CAAMP,SAAN,EAAiBF,SAAjB,CAAxB;;AAEA,MAAI,CAACQ,eAAL,EAAsB;AACpB,UAAM,IAAIE,KAAJ,0DAA4DV,SAA5D,OAAN;AACD;;AACD,MAAMW,cAAc,GAAGR,mBAAES,MAAF,CAAS,EAAT,EAAa;AAAEX,IAAAA,KAAK,EAALA;AAAF,GAAb,EAAwBO,eAAxB,CAAvB;;AACA,MAAMK,WAAW,uBAAMb,SAAN,EAAkBW,cAAlB,CAAjB;;AACA,SAAOnB,UAAU,CAACqB,WAAD,EAAcnB,YAAd,EAA4BC,YAA5B,CAAjB;AACD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport dvr from 'mobx-react-form/lib/validators/DVR';\nimport validatorjs from 'validatorjs';\nimport MobxReactForm from 'mobx-react-form';\n\nconst formPlugins = Object.freeze({\n  dvr: dvr(validatorjs),\n});\n\nconst formOptions = Object.freeze({\n  showErrorsOnReset: false,\n});\n\nfunction createForm(fields, pluginsParam, optionsParam) {\n  const plugins = pluginsParam || formPlugins;\n  const options = optionsParam || formOptions;\n  return new MobxReactForm({ fields }, { plugins, options });\n}\n\n/**\n * Creates a MobxReactForm specific to the field identified by the specified fieldName from the given fields.\n * @param fieldName Name of the field to create MobxReactForm for\n * @param fields An array of MobxReactForm fields OR an object containing the form fields.\n * See MobxReactForm documentation about fields https://foxhound87.github.io/mobx-react-form/docs/fields/ for more details.\n *\n * @param value Optional value for the field\n * @param pluginsParam Optional plugin parameters for the MobxReactForm\n * @param optionsParam Optional options parameters for the MobxReactForm\n */\nfunction createSingleFieldForm(fieldName, fields, value, pluginsParam, optionsParam) {\n  // An array of MobxReactForm fields OR an object containing the form fields\n  // Find field with the given fieldName from the fields\n  // In case of Array: It has shape [ {fieldName1:field1}, {fieldName2:field2} ]\n  // In case of Object: It has shape { fieldName1:field1, fieldName2:field2 }\n  const fieldsObj = _.isArray(fields) ? _.find(fields, field => _.keys(field)[0] === fieldName) : fields;\n  const fieldOfInterest = _.get(fieldsObj, fieldName);\n\n  if (!fieldOfInterest) {\n    throw new Error(`Field not found. Can not create form for field ${fieldName}.`);\n  }\n  const fieldWithValue = _.assign({}, { value }, fieldOfInterest);\n  const fieldsToUse = { [fieldName]: fieldWithValue };\n  return createForm(fieldsToUse, pluginsParam, optionsParam);\n}\n\nexport { formPlugins, formOptions, createForm, createSingleFieldForm };\n"],"file":"form.js"}