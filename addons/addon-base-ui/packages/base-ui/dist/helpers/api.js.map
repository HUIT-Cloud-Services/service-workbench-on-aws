{"version":3,"sources":["../../src/helpers/api.js"],"names":["config","apiPath","fetchMode","maxRetryCount","token","decodedIdToken","authHeader","tok","Authorization","setIdToken","idToken","decodedToken","getDecodedIdToken","isTokenExpired","expiresAt","_","get","Date","now","forgetIdToken","undefined","configure","obj","fetchJson","url","options","retryCount","isOk","httpStatus","headers","body","merged","method","cache","mode","redirect","retryOptions","params","paramKeys","keys","paramKeysToPass","filter","key","isNil","query","map","encodeURIComponent","join","omit","Promise","resolve","then","fetch","err","backoff","console","log","response","ok","status","isFunction","text","json","isObject","JSON","parse","message","Error","isBoolean","httpApiGet","urlPath","httpApiPost","data","stringify","httpApiPut","httpApiDelete","authenticate","authenticationUrl","username","password","authenticationProviderId","logout","expired","revoked","getApiKeys","ns","createNewApiKey","revokeApiKey","apiKeyId","getUser","addUser","user","identityProviderName","clone","createdBy","updatedBy","userType","updateUser","uid","getUsers","getAuthenticationProviderPublicConfigs","getAuthenticationProviderConfigs","updateAuthenticationProviderConfig","authenticationProvider"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { parseError, delay, removeNulls } from './utils';\nimport { apiPath } from './settings';\n\n/* eslint-disable import/no-mutable-exports */\nlet config = {\n  apiPath,\n  fetchMode: 'cors',\n  maxRetryCount: 4,\n};\n\nlet token;\nlet decodedIdToken;\nconst authHeader = tok => ({ Authorization: `${tok}` });\n\nfunction setIdToken(idToken, decodedToken) {\n  token = idToken;\n  decodedIdToken = decodedToken;\n}\n\nfunction getDecodedIdToken() {\n  return decodedIdToken;\n}\n\nfunction isTokenExpired() {\n  // Date.now() returns epoch time in MILLISECONDS\n  const expiresAt = _.get(decodedIdToken, 'exp', 0) * 1000;\n  return Date.now() >= expiresAt;\n}\n\nfunction forgetIdToken() {\n  token = undefined;\n  decodedIdToken = undefined;\n}\n\nfunction configure(obj) {\n  config = { ...config, ...obj };\n}\n\nfunction fetchJson(url, options = {}, retryCount = 0) {\n  // see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n  let isOk = false;\n  let httpStatus;\n\n  const headers = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  };\n  const body = '';\n  const merged = {\n    method: 'GET',\n    cache: 'no-cache',\n    mode: config.fetchMode,\n    redirect: 'follow',\n    body,\n    ...options,\n    headers: { ...headers, ...options.headers },\n  };\n\n  if (merged.method === 'GET') delete merged.body; // otherwise fetch will throw an error\n\n  let retryOptions = options;\n  if (merged.params) {\n    // if query string parameters are specified then add them to the URL\n    // The merged.params here is just a plain JavaScript object with key and value\n    // For example {key1: value1, key2: value2}\n\n    // Get keys from the params object such as [key1, key2] etc\n    const paramKeys = _.keys(merged.params);\n\n    // Filter out params with undefined or null values\n    const paramKeysToPass = _.filter(paramKeys, key => !_.isNil(_.get(merged.params, key)));\n    const query = _.map(\n      paramKeysToPass,\n      key => `${encodeURIComponent(key)}=${encodeURIComponent(_.get(merged.params, key))}`,\n    ).join('&');\n    url = query ? `${url}?${query}` : url;\n\n    // Omit options.params after they are added to the url as query string params\n    // This is required otherwise, if the call fails for some reason (e.g., time out) the same query string params\n    // will be added once again to the URL causing duplicate params being passed in.\n    // For example, if the options.params = { param1: 'value1', param2: 'value2' }\n    // The url will become something like `https://some-host/some-path?param1=value1&param2=value2`\n    // If we do not omit \"options.params\" here and if the call is retried (with a recursive call to \"fetchJson\") due\n    // to timeout or any other issue, the url will then become\n    // `https://some-host/some-path?param1=value1&param2=value2?param1=value1&param2=value2`\n    retryOptions = _.omit(options, 'params');\n  }\n\n  return Promise.resolve()\n    .then(() => fetch(url, merged))\n    .catch(err => {\n      // this will capture network/timeout errors, because fetch does not consider http Status 5xx or 4xx as errors\n      if (retryCount < config.maxRetryCount) {\n        let backoff = retryCount * retryCount;\n        if (backoff < 1) backoff = 1;\n\n        return Promise.resolve()\n          .then(() => console.log(`Retrying count = ${retryCount}, Backoff = ${backoff}`))\n          .then(() => delay(backoff))\n          .then(() => fetchJson(url, retryOptions, retryCount + 1));\n      }\n      throw parseError(err);\n    })\n    .then(response => {\n      isOk = response.ok;\n      httpStatus = response.status;\n      return response;\n    })\n    .then(response => {\n      if (_.isFunction(response.text)) return response.text();\n      return response;\n    })\n    .then(text => {\n      let json;\n      try {\n        if (_.isObject(text)) {\n          json = text;\n        } else {\n          json = JSON.parse(text);\n        }\n      } catch (err) {\n        if (httpStatus >= 400) {\n          if (httpStatus >= 501 && retryCount < config.maxRetryCount) {\n            let backoff = retryCount * retryCount;\n            if (backoff < 1) backoff = 1;\n\n            return Promise.resolve()\n              .then(() => console.log(`Retrying count = ${retryCount}, Backoff = ${backoff}`))\n              .then(() => delay(backoff))\n              .then(() => fetchJson(url, retryOptions, retryCount + 1));\n          }\n          throw parseError({\n            message: text,\n            status: httpStatus,\n          });\n        } else {\n          throw parseError(new Error('The server did not return a json response.'));\n        }\n      }\n\n      return json;\n    })\n    .then(json => {\n      if (_.isBoolean(isOk) && !isOk) {\n        throw parseError({ ...json, status: httpStatus });\n      } else {\n        return json;\n      }\n    });\n}\n\n// ---------- helper functions ---------------\n\nfunction httpApiGet(urlPath, { params } = {}) {\n  return fetchJson(`${config.apiPath}/${urlPath}`, {\n    method: 'GET',\n    headers: authHeader(token),\n    params,\n  });\n}\n\nfunction httpApiPost(urlPath, { data, params } = {}) {\n  return fetchJson(`${config.apiPath}/${urlPath}`, {\n    method: 'POST',\n    headers: authHeader(token),\n    params,\n    body: JSON.stringify(data),\n  });\n}\n\nfunction httpApiPut(urlPath, { data, params } = {}) {\n  return fetchJson(`${config.apiPath}/${urlPath}`, {\n    method: 'PUT',\n    headers: authHeader(token),\n    params,\n    body: JSON.stringify(data),\n  });\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction httpApiDelete(urlPath, { data, params } = {}) {\n  return fetchJson(`${config.apiPath}/${urlPath}`, {\n    method: 'DELETE',\n    headers: authHeader(token),\n    params,\n    body: JSON.stringify(data),\n  });\n}\n\n// ---------- api calls ---------------\n\nfunction authenticate(authenticationUrl, username, password, authenticationProviderId) {\n  return fetchJson(authenticationUrl, {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      password,\n      authenticationProviderId,\n    }),\n  });\n}\n\nfunction logout() {\n  if (isTokenExpired()) {\n    // if token is already expired then no need to call logout API to revoke token just return\n    return { expired: true, revoked: false };\n  }\n  return httpApiPost('api/authentication/logout');\n}\n\nfunction getApiKeys({ username, ns } = {}) {\n  return httpApiGet('api/api-keys', { params: { username, ns } });\n}\n\nfunction createNewApiKey({ username, ns } = {}) {\n  return httpApiPost('api/api-keys', { params: { username, ns } });\n}\n\nfunction revokeApiKey(apiKeyId, { username, ns } = {}) {\n  return httpApiPut(`api/api-keys/${apiKeyId}/revoke`, { params: { username, ns } });\n}\n\nfunction getUser() {\n  return httpApiGet('api/user');\n}\n\nfunction addUser(user) {\n  const params = {};\n  if (user.authenticationProviderId) {\n    params.authenticationProviderId = user.authenticationProviderId;\n  }\n  if (user.identityProviderName) {\n    params.identityProviderName = user.identityProviderName;\n  }\n  const data = removeNulls(_.clone(user));\n  delete data.ns; // Server derives ns based on \"authenticationProviderId\" and \"identityProviderName\"\n  // on server side so remove it from request body\n  delete data.createdBy; // Similarly, createdBy and updatedBy are derived on server side\n  delete data.updatedBy;\n  if (!data.userType) {\n    // if userType is specified as empty string then make sure to delete it\n    // the api requires this to be only one of the supported values (currently only supported value is 'root')\n    delete data.userType;\n  }\n  return httpApiPost('api/users', { data, params });\n}\n\nfunction updateUser(user) {\n  const params = {};\n\n  // Remove nulls and omit extra fields from the payload before calling the API\n  // The user is identified by the uid in the url\n  const data = removeNulls(\n    _.omit(\n      _.clone(user),\n      'uid',\n      'authenticationProviderId',\n      'identityProviderName',\n      'username',\n      'ns',\n      'createdBy',\n      'updatedBy',\n    ),\n  );\n  if (!data.userType) {\n    // if userType is specified as empty string then make sure to delete it\n    // the api requires this to be only one of the supported values (currently only supported value is 'root')\n    delete data.userType;\n  }\n  return httpApiPut(`api/users/${user.uid}`, { data, params });\n}\n\nfunction getUsers() {\n  return httpApiGet('api/users');\n}\n\nfunction getAuthenticationProviderPublicConfigs() {\n  return httpApiGet('api/authentication/public/provider/configs');\n}\nfunction getAuthenticationProviderConfigs() {\n  return httpApiGet('api/authentication/provider/configs');\n}\n\nfunction updateAuthenticationProviderConfig(authenticationProvider) {\n  return httpApiPut('api/authentication/provider/configs', { data: authenticationProvider });\n}\n\nexport {\n  configure,\n  setIdToken,\n  getDecodedIdToken,\n  fetchJson,\n  httpApiGet,\n  httpApiPost,\n  httpApiPut,\n  httpApiDelete,\n  getAuthenticationProviderPublicConfigs,\n  getAuthenticationProviderConfigs,\n  updateAuthenticationProviderConfig,\n  forgetIdToken,\n  getApiKeys,\n  createNewApiKey,\n  revokeApiKey,\n  getUser,\n  addUser,\n  updateUser,\n  getUsers,\n  authenticate,\n  logout,\n  config,\n};\n"],"file":"api.js"}