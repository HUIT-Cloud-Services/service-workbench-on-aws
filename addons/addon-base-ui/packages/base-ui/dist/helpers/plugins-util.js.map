{"version":3,"sources":["../../src/helpers/plugins-util.js"],"names":["getRoutes","location","appContext","plugins","pluginRegistry","getPluginsWithMethod","initial","Map","routesMap","_","reduce","routesFar","plugin","registerRoutes","entries","Array","from","routeIdx","map","routePath","reactComponent","getMenuItems","itemsMap","itemsSoFar","registerMenuItems","url","menuItem","getDefaultRouteLocation","reverse","defaultRoute","forEach","result","isUndefined"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { Route, Switch } from 'react-router-dom';\n\n/**\n * Configures the given React Router by collecting routes contributed by all route plugins.\n *\n * @returns {*} A React.Router or Switch Component\n */\n// eslint-disable-next-line no-unused-vars\nfunction getRoutes({ location, appContext }) {\n  const plugins = appContext.pluginRegistry.getPluginsWithMethod('routes', 'registerRoutes');\n  const initial = new Map();\n  // Ask each plugin to return their routes. Each plugin is passed a Map containing the routes collected so\n  // far from other plugins. The plugins are called in the same order as returned by the registry.\n  // Each plugin gets a chance to add, remove, update, or delete routes by mutating the provided routesMap object.\n  // This routesMap is a Map that has route paths as keys and React Component as value.\n  const routesMap = _.reduce(plugins, (routesFar, plugin) => plugin.registerRoutes(routesFar, appContext), initial);\n\n  const entries = Array.from(routesMap || new Map());\n  let routeIdx = 0;\n  return (\n    <Switch>\n      {_.map(entries, ([routePath, reactComponent]) => {\n        routeIdx += 1;\n        return <Route key={routeIdx} path={routePath} component={reactComponent} />;\n      })}\n    </Switch>\n  );\n}\n\n/**\n * Returns menu items for navigation by collecting items contributed by all menu item plugins.\n *\n * @param {*} appContext An application context object containing all MobX store objects\n *\n * @returns {*}\n */\nfunction getMenuItems({ location, appContext }) {\n  const plugins = appContext.pluginRegistry.getPluginsWithMethod('menu-items', 'registerMenuItems');\n  const initial = new Map();\n  // Ask each plugin to return their nav items. Each plugin is passed a Map containing the nav items collected so\n  // far from other plugins. The plugins are called in the same order as returned by the registry.\n  // Each plugin gets a chance to add, remove, update, or delete items by mutating the provided itemsMap object.\n  // This itemsMap is a Map that has route paths (urls) as keys and menu item object as values.\n  const itemsMap = _.reduce(\n    plugins,\n    (itemsSoFar, plugin) => plugin.registerMenuItems(itemsSoFar, { location, appContext }),\n    initial,\n  );\n\n  const entries = Array.from(itemsMap || new Map());\n  return _.map(entries, ([url, menuItem]) => ({ url, ...menuItem }));\n}\n\nfunction getDefaultRouteLocation({ location, appContext }) {\n  const plugins = _.reverse(appContext.pluginRegistry.getPluginsWithMethod('routes', 'getDefaultRouteLocation') || []);\n  // We ask each plugin in reverse order if they have a default route\n  let defaultRoute;\n  _.forEach(plugins, plugin => {\n    const result = plugin.getDefaultRouteLocation({ location, appContext });\n    if (_.isUndefined(result)) return;\n    defaultRoute = result;\n    // eslint-disable-next-line consistent-return\n    return false; // This will stop lodash from continuing the forEach loop\n  });\n\n  return defaultRoute;\n}\n\nexport { getRoutes, getMenuItems, getDefaultRouteLocation };\n"],"file":"plugins-util.js"}