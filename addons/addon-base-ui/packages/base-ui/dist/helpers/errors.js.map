{"version":3,"sources":["../../src/helpers/errors.js"],"names":["codes","boom","error","friendlyOrErr","code","friendly","_","isString","e","Error","isBoom","isError","startCase","err","JSON","stringify","forEach","errOrFriendlyMsg","friendlyMsg","isNotFound","get","isTokenExpired","isForbidden"],"mappings":";;;;;;;AAeA;;;;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,IAAMA,KAAK,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,YAAzB,EAAuC,cAAvC,EAAuD,yBAAvD,EAAkF,SAAlF,CAAd;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,KAAK,EAAE,eAACC,aAAD,EAAgBC,IAAhB,EAAwC;AAAA,QAAlBC,QAAkB,uEAAP,EAAO;;AAC7C,QAAIC,mBAAEC,QAAF,CAAWJ,aAAX,CAAJ,EAA+B;AAC7B,UAAMK,CAAC,GAAG,IAAIC,KAAJ,CAAUN,aAAV,CAAV;AACAK,MAAAA,CAAC,CAACE,MAAF,GAAW,IAAX;AACAF,MAAAA,CAAC,CAACJ,IAAF,GAASA,IAAT;AACAI,MAAAA,CAAC,CAACH,QAAF,GAAaF,aAAb,CAJ6B,CAID;;AAC5B,aAAOK,CAAP;AACD;;AACD,QAAIF,mBAAEK,OAAF,CAAUR,aAAV,CAAJ,EAA8B;AAC5BA,MAAAA,aAAa,CAACC,IAAd,GAAqBA,IAArB,CAD4B,CACD;;AAC3BD,MAAAA,aAAa,CAACO,MAAd,GAAuB,IAAvB,CAF4B,CAEC;;AAC7BP,MAAAA,aAAa,CAACE,QAAd,GAAyBA,QAAQ,IAAIC,mBAAEM,SAAF,CAAYR,IAAZ,CAArC;AACA,aAAOD,aAAP;AACD,KAb4C,CAe7C;;;AACA,QAAMU,GAAG,GAAG,IAAIJ,KAAJ,CAAUK,IAAI,CAACC,SAAL,CAAeZ,aAAf,CAAV,CAAZ;AACAU,IAAAA,GAAG,CAACH,MAAJ,GAAa,IAAb;AACAG,IAAAA,GAAG,CAACT,IAAJ,GAAWA,IAAX;AACAS,IAAAA,GAAG,CAACR,QAAJ,GAAeA,QAAQ,IAAIC,mBAAEM,SAAF,CAAYR,IAAZ,CAA3B;AAEA,WAAOS,GAAP;AACD;AAvBU,CAAb,C,CA0BA;AACA;AACA;;;AACAb,KAAK,CAACgB,OAAN,CAAc,UAAAZ,IAAI,EAAI;AACpBH,EAAAA,IAAI,CAACG,IAAD,CAAJ,GAAa,UAACa,gBAAD,EAAmBC,WAAnB;AAAA,WAAmCjB,IAAI,CAACC,KAAL,CAAWe,gBAAX,EAA6Bb,IAA7B,EAAmCc,WAAnC,CAAnC;AAAA,GAAb;AACD,CAFD;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAjB,KAAK,EAAI;AAC1B,SAAOI,mBAAEc,GAAF,CAAMlB,KAAN,EAAa,MAAb,MAAyB,UAAhC;AACD,CAFD;;;;AAIA,IAAMmB,cAAc,GAAG,SAAjBA,cAAiB,CAAAnB,KAAK,EAAI;AAC9B,SAAOI,mBAAEc,GAAF,CAAMlB,KAAN,EAAa,MAAb,MAAyB,cAAhC;AACD,CAFD;;;;AAIA,IAAMoB,WAAW,GAAG,SAAdA,WAAc,CAAApB,KAAK,EAAI;AAC3B,SAAOI,mBAAEc,GAAF,CAAMlB,KAAN,EAAa,MAAb,MAAyB,WAAhC;AACD,CAFD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\n\nconst codes = ['apiError', 'notFound', 'badRequest', 'tokenExpired', 'incorrectImplementation', 'timeout'];\n\nconst boom = {\n  error: (friendlyOrErr, code, friendly = '') => {\n    if (_.isString(friendlyOrErr)) {\n      const e = new Error(friendlyOrErr);\n      e.isBoom = true;\n      e.code = code;\n      e.friendly = friendlyOrErr; // the friendly argument is ignored and friendlyOrErr is used instead\n      return e;\n    }\n    if (_.isError(friendlyOrErr)) {\n      friendlyOrErr.code = code; // eslint-disable-line no-param-reassign\n      friendlyOrErr.isBoom = true; // eslint-disable-line no-param-reassign\n      friendlyOrErr.friendly = friendly || _.startCase(code);\n      return friendlyOrErr;\n    }\n\n    // if we are here, it means that the msgOrErr is an object\n    const err = new Error(JSON.stringify(friendlyOrErr));\n    err.isBoom = true;\n    err.code = code;\n    err.friendly = friendly || _.startCase(code);\n\n    return err;\n  },\n};\n\n// inject all the codes array elements as properties for the boom\n// example 'apiError' injected => produces boom.apiError(errOrFriendlyMsg, friendlyMsg)\n// then you can call boom.apiError(err, 'Error fetching user info')\ncodes.forEach(code => {\n  boom[code] = (errOrFriendlyMsg, friendlyMsg) => boom.error(errOrFriendlyMsg, code, friendlyMsg);\n});\n\nconst isNotFound = error => {\n  return _.get(error, 'code') === 'notFound';\n};\n\nconst isTokenExpired = error => {\n  return _.get(error, 'code') === 'tokenExpired';\n};\n\nconst isForbidden = error => {\n  return _.get(error, 'code') === 'forbidden';\n};\n\nexport { boom, isNotFound, isTokenExpired, isForbidden };\n"],"file":"errors.js"}