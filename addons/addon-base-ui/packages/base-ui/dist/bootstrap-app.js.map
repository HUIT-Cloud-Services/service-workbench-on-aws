{"version":3,"sources":["../src/bootstrap-app.js"],"names":["bootstrapApp","renderAppContainer","renderError","renderProgress","pluginRegistry","serviceWorker","unregister","enforceActions","appContext","appRunner","run","AppContainer","console","log","cleaner","cleanup","error"],"mappings":";;;;;;;;;AAeA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;AAEA,SAASA,YAAT,OAA2F;AAAA,MAAnEC,kBAAmE,QAAnEA,kBAAmE;AAAA,MAA/CC,WAA+C,QAA/CA,WAA+C;AAAA,MAAlCC,cAAkC,QAAlCA,cAAkC;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;AACzF;AACAC,EAAAA,aAAa,CAACC,UAAd,GAFyF,CAIzF;;AACA,uBAAU;AAAEC,IAAAA,cAAc,EAAE;AAAlB,GAAV,EALyF,CAOzF;;AACA,MAAMC,UAAU,GAAG,sCAAqBJ,cAArB,CAAnB,CARyF,CAUzF;;AACAD,EAAAA,cAAc,GAX2E,CAazF;;AACA,0DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAESK,UAAU,CAACC,SAAX,CAAqBC,GAArB,EAFT;;AAAA;AAGGT,YAAAA,kBAAkB,CAACU,wBAAD,EAAeH,UAAf,CAAlB;AAHH;AAAA;;AAAA;AAAA;AAAA;AAKGI,YAAAA,OAAO,CAACC,GAAR,cALH,CAMG;AACA;AACA;AACA;AACA;AACA;AACA;;AACAX,YAAAA,WAAW,aAAX;;AACA,gBAAI;AACFM,cAAAA,UAAU,CAACM,OAAX,CAAmBC,OAAnB;AACD,aAFD,CAEE,OAAOC,KAAP,EAAc;AACd;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;;AAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;AAsBD;;eAEchB,Y","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { configure } from 'mobx';\nimport 'mobx-react/batchingForReactDom';\nimport { initializeAppContext } from './app-context/app-context';\n\nimport * as serviceWorker from './service-worker';\nimport AppContainer from './AppContainer';\n\nfunction bootstrapApp({ renderAppContainer, renderError, renderProgress, pluginRegistry }) {\n  // Disabling service worker\n  serviceWorker.unregister();\n\n  // Enable mobx strict mode, changes to state must be contained in actions\n  configure({ enforceActions: 'always' });\n\n  // Initialize appContext object registering various Mobx stores etc\n  const appContext = initializeAppContext(pluginRegistry);\n\n  // Render page loading message\n  renderProgress();\n\n  // Trigger the app startup sequence\n  (async () => {\n    try {\n      await appContext.appRunner.run();\n      renderAppContainer(AppContainer, appContext);\n    } catch (err) {\n      console.log(err);\n      // TODO - check if the code = tokenExpired, then\n      // - render a notification error\n      // - call cleaner cleanup, this is IMPORTANT\n      // - render the app and skip the rest of the renderError logic\n      // - doing the above logic will help us have a smooth user experience\n      //   when the token has expired. NOTE: this might not be applicable for the\n      //   cases where the app requires midway before anything is displayed to the user\n      renderError(err);\n      try {\n        appContext.cleaner.cleanup();\n      } catch (error) {\n        // ignore\n        console.log(error);\n      }\n    }\n  })();\n}\n\nexport default bootstrapApp;\n"],"file":"bootstrap-app.js"}