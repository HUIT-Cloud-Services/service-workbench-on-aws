{"version":3,"sources":["../../src/app-context/app-context.js"],"names":["appContext","initializeAppContext","pluginRegistry","registry","PluginRegistry","appContextHolder","disposers","intervalIds","assets","images","registerAppContextItems","getPluginsWithMethod","_","forEach","plugin","postRegisterAppContextItems","Object","assign"],"mappings":";;;;;;;AAeA;;AACA;;AAEA;;;;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA,IAAMA,UAAU,GAAG,sBAAW,EAAX,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,cAAc,EAAI;AAC7C,MAAMC,QAAQ,GAAG,IAAIC,8BAAJ,CAAmBF,cAAnB,CAAjB;AACA,MAAMG,gBAAgB,GAAG;AACvBC,IAAAA,SAAS,EAAE,EADY;AAEvBC,IAAAA,WAAW,EAAE,EAFU;AAGvBL,IAAAA,cAAc,EAAEC,QAHO;AAIvBK,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE;AADF;AAJe,GAAzB;AASA,MAAMC,uBAAuB,GAAGP,QAAQ,CAACQ,oBAAT,CAA8B,mBAA9B,EAAmD,yBAAnD,CAAhC;;AACAC,qBAAEC,OAAF,CAAUH,uBAAV,EAAmC,UAAAI,MAAM,EAAI;AAC3CA,IAAAA,MAAM,CAACJ,uBAAP,CAA+BL,gBAA/B;AACD,GAFD;;AAIA,MAAMU,2BAA2B,GAAGZ,QAAQ,CAACQ,oBAAT,CAA8B,mBAA9B,EAAmD,6BAAnD,CAApC;;AACAC,qBAAEC,OAAF,CAAUE,2BAAV,EAAuC,UAAAD,MAAM,EAAI;AAC/CA,IAAAA,MAAM,CAACC,2BAAP,CAAmCV,gBAAnC;AACD,GAFD;;AAIAW,EAAAA,MAAM,CAACC,MAAP,CAAcjB,UAAd,EAA0BK,gBAA1B,EArB6C,CAqBA;;AAC7C,SAAOA,gBAAP;AACD,CAvBD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { observable } from 'mobx';\n\nimport { PluginRegistry } from '../models/PluginRegistry';\n\nconst appContext = observable({});\n\n/**\n * Initializes the given appContext (application context containing various MobX stores etc) by calling each plugin's\n * \"registerAppContextItems\" and \"postRegisterAppContextItems\" methods.\n *\n * @param {Object} pluginRegistry A registry that provides plugins registered by various addons for the specified extension point.\n * Each 'contextItems' plugin in the returned array is an object containing \"registerAppContextItems\" and \"postRegisterAppContextItems\" plugin methods.\n *\n * @returns {{intervalIds: {}, disposers: {}, pluginRegistry: {}}}\n */\nconst initializeAppContext = pluginRegistry => {\n  const registry = new PluginRegistry(pluginRegistry);\n  const appContextHolder = {\n    disposers: {},\n    intervalIds: {},\n    pluginRegistry: registry,\n    assets: {\n      images: {},\n    },\n  };\n\n  const registerAppContextItems = registry.getPluginsWithMethod('app-context-items', 'registerAppContextItems');\n  _.forEach(registerAppContextItems, plugin => {\n    plugin.registerAppContextItems(appContextHolder);\n  });\n\n  const postRegisterAppContextItems = registry.getPluginsWithMethod('app-context-items', 'postRegisterAppContextItems');\n  _.forEach(postRegisterAppContextItems, plugin => {\n    plugin.postRegisterAppContextItems(appContextHolder);\n  });\n\n  Object.assign(appContext, appContextHolder); // this is to ensure that it is the same appContext reference whether initializeAppContext is called or not\n  return appContextHolder;\n};\n\nexport { appContext, initializeAppContext };\n"],"file":"app-context.js"}