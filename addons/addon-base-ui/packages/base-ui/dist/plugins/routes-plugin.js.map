{"version":3,"sources":["../../src/plugins/routes-plugin.js"],"names":["registerRoutes","routesMap","location","appContext","routes","Map","AddAuthenticationProvider","EditAuthenticationProvider","AuthenticationProvidersList","AddUser","UsersList","Dashboard","getDefaultRouteLocation","userStore","isRootUser","_","get","defaultLocation","pathname","search","hash","state","plugin"],"mappings":";;;;;;;AAeA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAT,CAAwBC,SAAxB,QAA6D;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAC3D,MAAMC,MAAM,GAAG,IAAIC,GAAJ,8BACVJ,SADU,IAEb,CAAC,+BAAD,EAAkC,0BAASK,qCAAT,CAAlC,CAFa,EAGb,CAAC,gEAAD,EAAmE,0BAASC,sCAAT,CAAnE,CAHa,EAIb,CAAC,2BAAD,EAA8B,0BAASC,uCAAT,CAA9B,CAJa,EAKb,CAAC,YAAD,EAAe,0BAASC,mBAAT,CAAf,CALa,EAMb,CAAC,QAAD,EAAW,0BAASC,qBAAT,CAAX,CANa,EAOb,CAAC,YAAD,EAAe,0BAASC,qBAAT,CAAf,CAPa,GAAf;AAUA,SAAOP,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,uBAAT,QAA2D;AAAA,MAAxBV,QAAwB,SAAxBA,QAAwB;AAAA,MAAdC,UAAc,SAAdA,UAAc;AACzD,MAAMU,SAAS,GAAGV,UAAU,CAACU,SAA7B,CADyD,CAEzD;;AACA,MAAMC,UAAU,GAAGC,mBAAEC,GAAF,CAAMH,SAAN,EAAiB,iBAAjB,CAAnB;;AACA,MAAMI,eAAe,GAAG;AACtBC,IAAAA,QAAQ,EAAEJ,UAAU,GAAG,QAAH,GAAc,YADZ;AAEtBK,IAAAA,MAAM,EAAEjB,QAAQ,CAACiB,MAFK;AAEG;AACzBC,IAAAA,IAAI,EAAElB,QAAQ,CAACkB,IAHO;AAItBC,IAAAA,KAAK,EAAEnB,QAAQ,CAACmB;AAJM,GAAxB;AAOA,SAAOJ,eAAP;AACD;;AAED,IAAMK,MAAM,GAAG;AACbtB,EAAAA,cAAc,EAAdA,cADa;AAEbY,EAAAA,uBAAuB,EAAvBA;AAFa,CAAf;eAKeU,M","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\n\nimport Dashboard from '../parts/dashboard/Dashboard';\nimport AddAuthenticationProvider from '../parts/authentication-providers/AddAuthenticationProvider';\nimport EditAuthenticationProvider from '../parts/authentication-providers/EditAuthenticationProvider';\nimport AuthenticationProvidersList from '../parts/authentication-providers/AuthenticationProvidersList';\nimport AddUser from '../parts/users/AddUser';\nimport UsersList from '../parts/users/UsersList';\nimport withAuth from '../withAuth';\n\n/**\n * Adds base routes to the given routesMap.\n * @param routesMap A Map containing routes. This object is a Map that has route paths as\n * keys and React Component as value.\n * @param appContext An application context object containing various Mobx Stores, Models etc.\n *\n * @returns {Promise<*>} Returns a Map with the mapping of base routes vs React Component\n */\n// eslint-disable-next-line no-unused-vars\nfunction registerRoutes(routesMap, { location, appContext }) {\n  const routes = new Map([\n    ...routesMap,\n    ['/authentication-providers/add', withAuth(AddAuthenticationProvider)],\n    ['/authentication-providers/:authenticationProviderConfigId/edit', withAuth(EditAuthenticationProvider)],\n    ['/authentication-providers', withAuth(AuthenticationProvidersList)],\n    ['/users/add', withAuth(AddUser)],\n    ['/users', withAuth(UsersList)],\n    ['/dashboard', withAuth(Dashboard)],\n  ]);\n\n  return routes;\n}\n\n/**\n * Returns default route. By default this method returns the\n * '/dashboard' route as the default route for all non-root users and returns\n * '/users' route for root user.\n * @returns {{search: *, state: *, hash: *, pathname: string}}\n */\nfunction getDefaultRouteLocation({ location, appContext }) {\n  const userStore = appContext.userStore;\n  // See https://reacttraining.com/react-router/web/api/withRouter\n  const isRootUser = _.get(userStore, 'user.isRootUser');\n  const defaultLocation = {\n    pathname: isRootUser ? '/users' : '/dashboard',\n    search: location.search, // we want to keep any query parameters\n    hash: location.hash,\n    state: location.state,\n  };\n\n  return defaultLocation;\n}\n\nconst plugin = {\n  registerRoutes,\n  getDefaultRouteLocation,\n};\n\nexport default plugin;\n"],"file":"routes-plugin.js"}