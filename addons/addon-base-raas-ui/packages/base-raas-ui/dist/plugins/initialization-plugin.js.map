{"version":3,"sources":["../../src/plugins/initialization-plugin.js"],"names":["postInit","payload","appContext","tokenNotExpired","_","get","userStore","usersStore","awsAccountsStore","userRolesStore","indexesStore","projectsStore","user","status","Promise","all","load","plugin"],"mappings":";;;;;;;AAeA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;SACeA,Q;;;;;sEAAf,iBAAwBC,OAAxB,EAAiCC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,eADR,GAC0BC,mBAAEC,GAAF,CAAMJ,OAAN,EAAe,kBAAf,MAAuC,YADjE;;AAAA,gBAEOE,eAFP;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEgC;AAEtBG,YAAAA,SAJV,GAImGJ,UAJnG,CAIUI,SAJV,EAIqBC,UAJrB,GAImGL,UAJnG,CAIqBK,UAJrB,EAIiCC,gBAJjC,GAImGN,UAJnG,CAIiCM,gBAJjC,EAImDC,cAJnD,GAImGP,UAJnG,CAImDO,cAJnD,EAImEC,YAJnE,GAImGR,UAJnG,CAImEQ,YAJnE,EAIiFC,aAJjF,GAImGT,UAJnG,CAIiFS,aAJjF,EAME;;AANF,kBAOML,SAAS,CAACM,IAAV,CAAeC,MAAf,KAA0B,QAPhC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAQUC,OAAO,CAACC,GAAR,CAAY,CAChBR,UAAU,CAACS,IAAX,EADgB,EAEhBR,gBAAgB,CAACQ,IAAjB,EAFgB,EAGhBP,cAAc,CAACO,IAAf,EAHgB,EAIhBN,YAAY,CAACM,IAAb,EAJgB,EAKhBL,aAAa,CAACK,IAAd,EALgB,CAAZ,CARV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBA,IAAMC,MAAM,GAAG;AACbjB,EAAAA,QAAQ,EAARA;AADa,CAAf;eAIeiB,M","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\n\n/**\n * This is where we run the post initialization logic that is specific to Service Workbench.\n *\n * @param payload A free form object. This function expects a property named 'tokenInfo' to be available on the payload object.\n * @param appContext An application context object containing various Mobx Stores, Models etc.\n *\n * @returns {Promise<void>}\n */\nasync function postInit(payload, appContext) {\n  const tokenNotExpired = _.get(payload, 'tokenInfo.status') === 'notExpired';\n  if (!tokenNotExpired) return; // Continue only if we have a token that is not expired\n\n  const { userStore, usersStore, awsAccountsStore, userRolesStore, indexesStore, projectsStore } = appContext;\n\n  // TODO: Load these stores as needed instead of on startup\n  if (userStore.user.status === 'active') {\n    await Promise.all([\n      usersStore.load(),\n      awsAccountsStore.load(),\n      userRolesStore.load(),\n      indexesStore.load(),\n      projectsStore.load(),\n    ]);\n  }\n}\n\nconst plugin = {\n  postInit,\n};\n\nexport default plugin;\n"],"file":"initialization-plugin.js"}