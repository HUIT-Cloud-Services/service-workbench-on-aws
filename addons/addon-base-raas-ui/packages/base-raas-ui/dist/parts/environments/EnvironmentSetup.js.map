{"version":3,"sources":["../../../src/parts/environments/EnvironmentSetup.js"],"names":["EnvironmentSetup","props","handlePrevious","envTypeId","handleCompleted","environment","step","enableBuiltInWorkspaces","currentStep","CurrentStep","create","window","scrollTo","pathname","goto","renderTitle","renderStepsProgress","renderContent","content","match","params","React","Component","action","observable"],"mappings":";;;;;;;;;AAeA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;IACMA,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAsBnBC,cAtBmB,GAsBF,YAAM;AACrB,UAAI,MAAKC,SAAT,EAAoB;AAClB;AACA;AACA,sBAAU,6BAAV;AACD,OAJD,MAIO;AACL,sBAAU,aAAV;AACD;AACF,KA9BkB;;AAAA,UAiCnBC,eAjCmB;AAAA,yEAiCD,iBAAMC,WAAN;AAAA;AAAA;AAAA;AAAA;AAChB,kDAAe,6CAAf;;AACA,8BAAU,aAAV;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjCC;;AAAA;AAAA;AAAA;AAAA;;AAEjB,2BAAY,YAAM;AAChB,UAAIC,IAAI,GAAG,eAAX;;AACA,UAAIC,iCAAJ,EAA6B;AAC3BD,QAAAA,IAAI,GAAG,uBAAP;AACD,OAFD,MAEO,IAAI,MAAKH,SAAT,EAAoB;AACzBG,QAAAA,IAAI,GAAG,iBAAP,CADyB,CACC;AAC3B;;AACD,YAAKE,WAAL,GAAmBC,yBAAYC,MAAZ,CAAmB;AAAEJ,QAAAA,IAAI,EAAJA;AAAF,OAAnB,CAAnB;AACD,KARD;AAFiB;AAWlB;;;;wCAEmB;AAClBK,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;;;yBAEIC,Q,EAAU;AACb,UAAMC,KAAI,GAAG,qBAAO,IAAP,CAAb;;AACAA,MAAAA,KAAI,CAACD,QAAD,CAAJ;AACD;;;6BAkBQ;AACP,0BACE,gCAAC,0BAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACG,KAAKE,WAAL,EADH,EAEG,KAAKC,mBAAL,EAFH,EAGG,KAAKC,aAAL,EAHH,CADF;AAOD;;;kCAEa;AACZ,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,gCAAC,uBAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,SAAS,EAAC;AAA1B,sBACE,gCAAC,qBAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,SAAS,EAAC;AAA9B,QADF,eAEE,gCAAC,uBAAD,CAAQ,OAAR;AAAgB,QAAA,SAAS,EAAC;AAA1B,+BAFF,CADF,CADF;AAQD;;;0CAEqB;AACpB,0BAAO,gCAAC,8BAAD;AAAoB,QAAA,WAAW,EAAE,KAAKT,WAAtC;AAAmD,QAAA,gBAAgB,EAAE,CAAC,CAAC,KAAKL;AAA5E,QAAP;AACD;;;oCAEe;AACd,UAAIe,OAAO,GAAG,IAAd;;AACA,UAAIX,iCAAJ,EAA6B;AAC3BW,QAAAA,OAAO,gBACL,gCAAC,gCAAD;AACE,UAAA,WAAW,EAAE,KAAKV,WADpB;AAEE,UAAA,UAAU,EAAE,KAAKN,cAFnB;AAGE,UAAA,WAAW,EAAE,KAAKE;AAHpB,UADF;AAOD,OARD,MAQO;AACLc,QAAAA,OAAO,gBACL,gCAAC,8BAAD;AACE,UAAA,WAAW,EAAE,KAAKV,WADpB;AAEE,UAAA,UAAU,EAAE,KAAKN,cAFnB;AAGE,UAAA,WAAW,EAAE,KAAKE,eAHpB;AAIE,UAAA,SAAS,EAAE,KAAKD,SAJlB;AAKE,UAAA,gBAAgB,EAAE,CAAC,CAAC,KAAKA,SAL3B,CAKsC;;AALtC,UADF;AASD;;AAED,aAAOe,OAAP;AACD;;;wBAEe;AACd,aAAO,CAAC,KAAKjB,KAAL,CAAWkB,KAAX,CAAiBC,MAAjB,IAA2B,EAA5B,EAAgCjB,SAAvC;AACD;;;;EA3F4BkB,kBAAMC,S,GA8FrC;;;AACA,oBAAStB,gBAAT,EAA2B;AACzBE,EAAAA,cAAc,EAAEqB,YADS;AAEzBnB,EAAAA,eAAe,EAAEmB,YAFQ;AAGzBf,EAAAA,WAAW,EAAEgB;AAHY,CAA3B;;eAMe,yBAAS,gCAAW,yBAASxB,gBAAT,CAAX,CAAT,C","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { decorate, runInAction, observable, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Icon, Container, Header } from 'semantic-ui-react';\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport { displaySuccess } from '@aws-ee/base-ui/dist/helpers/notification';\n\nimport { enableBuiltInWorkspaces } from '../../helpers/settings';\nimport { CurrentStep } from '../compute/helpers/CurrentStep';\nimport ComputePlatformSetup from '../compute/ComputePlatformSetup';\nimport SetupStepsProgress from '../environments-builtin/SetupStepsProgress';\nimport ScEnvironmentSetup from '../environments-sc/setup/ScEnvironmentSetup';\n\n// expected props\nclass EnvironmentSetup extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      let step = 'selectEnvType';\n      if (enableBuiltInWorkspaces) {\n        step = 'selectComputePlatform';\n      } else if (this.envTypeId) {\n        step = 'selectEnvConfig'; // If envTypeId id is passed then jump to env config step\n      }\n      this.currentStep = CurrentStep.create({ step });\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  goto(pathname) {\n    const goto = gotoFn(this);\n    goto(pathname);\n  }\n\n  handlePrevious = () => {\n    if (this.envTypeId) {\n      // If envTypeId is already preselected selected\n      // then we must have reached here via env type management page so go back to that page\n      this.goto('/workspace-types-management');\n    } else {\n      this.goto('/workspaces');\n    }\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  handleCompleted = async environment => {\n    displaySuccess('The research workspace is being provisioned');\n    this.goto('/workspaces');\n  };\n\n  render() {\n    return (\n      <Container className=\"mt3\">\n        {this.renderTitle()}\n        {this.renderStepsProgress()}\n        {this.renderContent()}\n      </Container>\n    );\n  }\n\n  renderTitle() {\n    return (\n      <div className=\"flex\">\n        <Header as=\"h3\" className=\"color-grey mt1 mb0 flex-auto\">\n          <Icon name=\"server\" className=\"align-top\" />\n          <Header.Content className=\"left-align\">Research Workspaces</Header.Content>\n        </Header>\n      </div>\n    );\n  }\n\n  renderStepsProgress() {\n    return <SetupStepsProgress currentStep={this.currentStep} envTypeImmutable={!!this.envTypeId} />;\n  }\n\n  renderContent() {\n    let content = null;\n    if (enableBuiltInWorkspaces) {\n      content = (\n        <ComputePlatformSetup\n          currentStep={this.currentStep}\n          onPrevious={this.handlePrevious}\n          onCompleted={this.handleCompleted}\n        />\n      );\n    } else {\n      content = (\n        <ScEnvironmentSetup\n          currentStep={this.currentStep}\n          onPrevious={this.handlePrevious}\n          onCompleted={this.handleCompleted}\n          envTypeId={this.envTypeId}\n          envTypeImmutable={!!this.envTypeId} // If envTypeId is passed already then do not allow selecting it\n        />\n      );\n    }\n\n    return content;\n  }\n\n  get envTypeId() {\n    return (this.props.match.params || {}).envTypeId;\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(EnvironmentSetup, {\n  handlePrevious: action,\n  handleCompleted: action,\n  currentStep: observable,\n});\n\nexport default inject()(withRouter(observer(EnvironmentSetup)));\n"],"file":"EnvironmentSetup.js"}