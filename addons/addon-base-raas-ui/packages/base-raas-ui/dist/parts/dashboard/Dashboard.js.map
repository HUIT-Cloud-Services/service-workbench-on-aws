{"version":3,"sources":["../../../src/parts/dashboard/Dashboard.js"],"names":["Dashboard","props","state","totalCost","projNameToTotalCost","projNameToUserTotalCost","envNameToCostInfo","isLoading","window","scrollTo","getCosts","setState","store","getStore","code","user","isAdmin","message","userStore","renderTitle","renderContent","renderCostPerProj","renderPastMonthCostPerEnv","renderYesterdayCostPerEnv","renderPastMonthCostPerProjPerUser","Math","round","getAccumulatedEnvCost","envNameToIndex","Object","keys","forEach","envName","projName","undefined","pastMonthCostByUser","currentUserCost","_","get","indexCost","enableBuiltInWorkspaces","environments","envIdToName","env","isExternal","id","name","indexId","envIds","envCostPromises","map","envId","Promise","all","envCostResults","pastMonthCostByUserArray","costResult","createdByToCost","costDate","cost","group","createdBy","split","amount","yesterdayCostArray","yesterdayCost","length","arrayOfCosts","flatMapDeep","i","key","isEmpty","title","labels","dataPoints","data","datasets","pastMonthCostTotalArray","total","push","results","projCostData","colors","backgroundColor","hoverBackgroundColor","React","Component"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { decorate } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Pie } from 'react-chartjs-2';\nimport { Container, Header, Segment, Icon } from 'semantic-ui-react';\nimport { displayError, displayWarning } from '@aws-ee/base-ui/dist/helpers/notification';\nimport ProgressPlaceHolder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\n\nimport { getEnvironments, getEnvironmentCost, getScEnvironments, getScEnvironmentCost } from '../../helpers/api';\nimport { enableBuiltInWorkspaces } from '../../helpers/settings';\n\nimport { blueDatasets } from './graphs/graph-options';\nimport BarGraph from './graphs/BarGraph';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalCost: 0,\n      projNameToTotalCost: {},\n      projNameToUserTotalCost: {},\n      envNameToCostInfo: {},\n      isLoading: true,\n    };\n  }\n\n  async componentDidMount() {\n    window.scrollTo(0, 0);\n    try {\n      const { totalCost, projNameToTotalCost, projNameToUserTotalCost, envNameToCostInfo } = await this.getCosts();\n      this.setState({\n        totalCost,\n        projNameToTotalCost,\n        projNameToUserTotalCost,\n        envNameToCostInfo,\n        isLoading: false,\n      });\n    } catch (error) {\n      const store = this.getStore();\n\n      // \"AccessDeniedException\" error code is thrown when Cost Explorer hasn't been configured\n      if (error.code === 'AccessDeniedException') {\n        if (store.user.isAdmin) {\n          // Cost Explorer related errors are only to be shown to admins, not researchers (GALI-266)\n          displayWarning(\n            'Error encountered accessing cost data. Please enable Cost Explorer in the AWS Management Console and wait for 24 hours.',\n          );\n        }\n      } else {\n        displayError(error.message);\n      }\n    }\n  }\n\n  getStore() {\n    return this.props.userStore;\n  }\n\n  render() {\n    return (\n      <Container className=\"mt3 mb4\">\n        {this.renderTitle()}\n        {this.renderContent()}\n      </Container>\n    );\n  }\n\n  renderTitle() {\n    return (\n      <div data-testid=\"page-title\" className=\"mb3 flex\">\n        <Header as=\"h3\" className=\"color-grey mt1 mb0 flex-auto\">\n          <Icon name=\"dashboard\" className=\"align-top\" />\n          <Header.Content className=\"left-align\">Dashboard</Header.Content>\n        </Header>\n      </div>\n    );\n  }\n\n  renderContent() {\n    return (\n      <div>\n        {this.state.isLoading === false && this.state.totalCost === 0 ? (\n          <Segment className=\"bold\">No cost data to show</Segment>\n        ) : (\n          <>\n            <Segment>{this.renderCostPerProj()}</Segment>\n            <Segment>{this.renderPastMonthCostPerEnv()}</Segment>\n            <Segment>{this.renderYesterdayCostPerEnv()}</Segment>\n            <Segment className=\"clearfix\">{this.renderPastMonthCostPerProjPerUser()}</Segment>\n            <Segment className=\"bold\">\n              Total cost of all research workspaces for the past 30 days: $\n              {Math.round(this.state.totalCost * 100) / 100}\n            </Segment>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  async getCosts() {\n    const { envNameToCostInfo, envNameToIndex } = await this.getAccumulatedEnvCost();\n\n    const projNameToUserTotalCost = {};\n    Object.keys(envNameToCostInfo).forEach(envName => {\n      const projName = envNameToIndex[envName];\n      if (projNameToUserTotalCost[projName] === undefined) {\n        projNameToUserTotalCost[projName] = {};\n      }\n      Object.keys(envNameToCostInfo[envName].pastMonthCostByUser).forEach(user => {\n        const currentUserCost = _.get(projNameToUserTotalCost, `${projName}.${user}`, 0);\n        projNameToUserTotalCost[projName][user] =\n          currentUserCost + envNameToCostInfo[envName].pastMonthCostByUser[user];\n      });\n    });\n\n    const projNameToTotalCost = {};\n    let totalCost = 0;\n    Object.keys(projNameToUserTotalCost).forEach(projName => {\n      let indexCost = 0;\n      Object.keys(projNameToUserTotalCost[projName]).forEach(user => {\n        indexCost += projNameToUserTotalCost[projName][user];\n      });\n      totalCost += indexCost;\n      projNameToTotalCost[projName] = indexCost;\n    });\n\n    return { totalCost, projNameToTotalCost, projNameToUserTotalCost, envNameToCostInfo };\n  }\n\n  async getAccumulatedEnvCost() {\n    const environments = enableBuiltInWorkspaces ? await getEnvironments() : await getScEnvironments();\n    const envIdToName = {};\n\n    const envNameToIndex = {};\n    environments.forEach(env => {\n      if (env.isExternal) return;\n      envIdToName[env.id] = env.name;\n      envNameToIndex[env.name] = env.indexId;\n    });\n\n    const envIds = Object.keys(envIdToName);\n    const envCostPromises = envIds.map(envId => {\n      return enableBuiltInWorkspaces\n        ? getEnvironmentCost(envId, 30, false, true)\n        : getScEnvironmentCost(envId, 30, false, true);\n    });\n\n    const envCostResults = await Promise.all(envCostPromises);\n    const pastMonthCostByUserArray = envCostResults.map(costResult => {\n      const createdByToCost = {};\n      _.forEach(costResult, costDate => {\n        const cost = costDate.cost;\n        Object.keys(cost).forEach(group => {\n          let createdBy = group.split('$')[1];\n          createdBy = createdBy || 'None';\n          const currentUserCost = _.get(createdByToCost, createdBy, 0);\n          createdByToCost[createdBy] = currentUserCost + cost[group].amount;\n        });\n      });\n      return createdByToCost;\n    });\n\n    const yesterdayCostArray = envCostResults.map(costResult => {\n      const yesterdayCost = costResult.length > 0 ? costResult[costResult.length - 1] : {};\n      let totalCost = 0;\n      if (yesterdayCost) {\n        const arrayOfCosts = _.flatMapDeep(yesterdayCost.cost);\n        arrayOfCosts.forEach(cost => {\n          totalCost += cost.amount;\n        });\n      }\n      return totalCost;\n    });\n\n    const envNameToCostInfo = {};\n    for (let i = 0; i < envIds.length; i++) {\n      const key = envIdToName[envIds[i]];\n      envNameToCostInfo[key] = {\n        pastMonthCostByUser: pastMonthCostByUserArray[i],\n        yesterdayCost: yesterdayCostArray[i],\n      };\n    }\n    return { envNameToCostInfo, envNameToIndex };\n  }\n\n  renderCostPerProj() {\n    if (_.isEmpty(this.state.projNameToTotalCost)) {\n      return <ProgressPlaceHolder />;\n    }\n    const title = 'Index Costs for Past 30 Days';\n    const labels = Object.keys(this.state.projNameToTotalCost);\n    const dataPoints = Object.keys(this.state.projNameToTotalCost).map(projName => {\n      return this.state.projNameToTotalCost[projName];\n    });\n    const data = {\n      labels,\n      datasets: blueDatasets(title, dataPoints),\n    };\n\n    return <BarGraph className=\"mr4\" data={data} title={title} />;\n  }\n\n  renderPastMonthCostPerEnv() {\n    if (_.isEmpty(this.state.envNameToCostInfo)) {\n      return <ProgressPlaceHolder />;\n    }\n\n    const pastMonthCostTotalArray = [];\n    Object.keys(this.state.envNameToCostInfo).forEach(envName => {\n      let total = 0;\n      Object.keys(this.state.envNameToCostInfo[envName].pastMonthCostByUser).forEach(user => {\n        total += this.state.envNameToCostInfo[envName].pastMonthCostByUser[user];\n      });\n      pastMonthCostTotalArray.push(total);\n    });\n    const title = 'Env Cost for Past 30 Days';\n    const labels = Object.keys(this.state.envNameToCostInfo);\n    const dataPoints = pastMonthCostTotalArray;\n    const data = {\n      labels,\n      datasets: blueDatasets(title, dataPoints),\n    };\n\n    return <BarGraph className=\"mr4\" data={data} title={title} />;\n  }\n\n  renderYesterdayCostPerEnv() {\n    if (_.isEmpty(this.state.envNameToCostInfo)) {\n      return <ProgressPlaceHolder />;\n    }\n    const title = \"Yesterday's Env Cost\";\n    const labels = Object.keys(this.state.envNameToCostInfo);\n    const dataPoints = Object.keys(this.state.envNameToCostInfo).map(envName => {\n      return this.state.envNameToCostInfo[envName].yesterdayCost;\n    });\n    const data = {\n      labels,\n      datasets: blueDatasets(title, dataPoints),\n    };\n\n    return <BarGraph className=\"mr4\" data={data} title={title} />;\n  }\n\n  renderPastMonthCostPerProjPerUser() {\n    if (_.isEmpty(this.state.projNameToUserTotalCost)) {\n      return <ProgressPlaceHolder />;\n    }\n    const results = [];\n    Object.keys(this.state.projNameToUserTotalCost).forEach(projName => {\n      const projCostData = this.state.projNameToUserTotalCost[projName];\n      const labels = Object.keys(projCostData);\n      // NOTE: We need a color for each user\n      const colors = ['#FF6384', '#36A2EB', '#FFCE56', '#CDDC39', '#4527a0', '#f4511e'];\n      const datasets = [\n        {\n          data: Object.keys(projCostData).map(user => {\n            return projCostData[user];\n          }),\n          backgroundColor: colors,\n          hoverBackgroundColor: colors,\n        },\n      ];\n\n      const data = {\n        labels,\n        datasets,\n      };\n\n      results.push(\n        <div key={projName} className=\"col col-6\">\n          <div className=\"center\">{projName}</div>\n          <Pie data={data} />\n        </div>,\n      );\n    });\n    return (\n      <>\n        <div className=\"center bold\">Index Cost Breakdowns for Past 30 Days</div>\n        {results}\n      </>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(Dashboard, {});\n\nexport default inject('userStore')(withRouter(observer(Dashboard)));\n"],"file":"Dashboard.js"}