{"version":3,"sources":["../../../src/parts/projects/AddProject.js"],"names":["AddProject","props","handleRoleChange","e","value","setState","role","handleStatusChange","status","handleProjectAdminsSelection","Array","isArray","project","projectAdmins","handleIndexSelection","indexId","handleCancel","event","preventDefault","stopPropagation","formProcessing","handleSubmit","state","addProjectFormFields","validationResult","fails","validationErrors","errors","projectsStore","addProject","Map","id","description","form","pathname","location","link","history","push","renderAddProjectForm","processing","fields","toEditableInput","attributeName","type","handleChange","target","placeholder","renderField","renderIndexSelection","renderProjectAdminsSelection","renderButtons","projectAdminsOption","usersStore","asDropDownOptions","indexIdOption","indexesStore","dropdownOptions","name","component","explain","label","hasExplain","_","isEmpty","fieldErrors","get","hasError","map","fieldError","React","Component","observable","user"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { decorate, observable, action, runInAction } from 'mobx';\nimport { Button, Dimmer, Header, List, Loader, Dropdown, Segment } from 'semantic-ui-react';\nimport _ from 'lodash';\n\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport { createLink } from '@aws-ee/base-ui/dist/helpers/routing';\nimport validate from '@aws-ee/base-ui/dist/models/forms/Validate';\n\nimport { getAddProjectForm, getAddProjectFormFields } from '../../models/forms/AddProjectForm';\n\nclass AddProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // eslint-disable-next-line react/no-unused-state\n      role: 'guest',\n      // eslint-disable-next-line react/no-unused-state\n      status: 'active',\n      indexId: '',\n    };\n\n    runInAction(() => {\n      this.formProcessing = false;\n      this.validationErrors = new Map();\n      this.project = {\n        id: '',\n        description: '',\n        indexId: '',\n        projectAdmins: [],\n      };\n    });\n    this.form = getAddProjectForm();\n    this.addProjectFormFields = getAddProjectFormFields();\n  }\n\n  goto(pathname) {\n    const location = this.props.location;\n    const link = createLink({ location, pathname });\n    this.props.history.push(link);\n  }\n\n  render() {\n    return (\n      <div className=\"mt2 animated fadeIn\">\n        <Header as=\"h2\" icon textAlign=\"center\" className=\"mt3\" color=\"grey\">\n          Add Project\n        </Header>\n        <div className=\"mt3 ml3 mr3 animated fadeIn\">{this.renderAddProjectForm()}</div>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line react/no-unused-state\n  handleRoleChange = (e, { value }) => this.setState({ role: value });\n\n  // eslint-disable-next-line react/no-unused-state\n  handleStatusChange = (e, { value }) => this.setState({ status: value });\n\n  renderAddProjectForm() {\n    const processing = this.formProcessing;\n    const fields = this.addProjectFormFields;\n    const toEditableInput = (attributeName, type = 'text') => {\n      const handleChange = action(event => {\n        event.preventDefault();\n        this.project[attributeName] = event.target.value;\n      });\n      return (\n        <div className=\"ui focus input\">\n          <input\n            type={type}\n            defaultValue={this.project[attributeName]}\n            placeholder={fields[attributeName].placeholder || ''}\n            onChange={handleChange}\n          />\n        </div>\n      );\n    };\n\n    return (\n      <Segment basic className=\"ui fluid form\">\n        <Dimmer active={processing} inverted>\n          <Loader inverted>Checking</Loader>\n        </Dimmer>\n        {this.renderField('id', toEditableInput('id', 'id'))}\n        <div className=\"mb4\" />\n        {this.renderField('indexId')}\n        {this.renderIndexSelection()}\n        <div className=\"mb4\" />\n        {this.renderField('description', toEditableInput('description', 'description'))}\n        <div className=\"mb4\" />\n        {this.renderField('projectAdmins')}\n        {this.renderProjectAdminsSelection()}\n        {this.renderButtons()}\n      </Segment>\n    );\n  }\n\n  renderProjectAdminsSelection() {\n    const projectAdminsOption = this.props.usersStore.asDropDownOptions();\n    const fields = this.addProjectFormFields;\n    const placeholder = fields.projectAdmins.placeholder || 'Please select a user';\n\n    return (\n      <Dropdown\n        options={projectAdminsOption}\n        placeholder={placeholder}\n        fluid\n        multiple\n        selection\n        onChange={this.handleProjectAdminsSelection}\n      />\n    );\n  }\n\n  handleProjectAdminsSelection = (e, { value }) => {\n    runInAction(() => {\n      if (Array.isArray(value)) {\n        this.project.projectAdmins = value;\n      }\n    });\n  };\n\n  renderButtons() {\n    const processing = this.formProcessing;\n    return (\n      <div className=\"mt3\">\n        <Button floated=\"right\" color=\"blue\" icon disabled={processing} className=\"ml2\" onClick={this.handleSubmit}>\n          Add Project\n        </Button>\n        <Button floated=\"right\" disabled={processing} onClick={this.handleCancel}>\n          Cancel\n        </Button>\n      </div>\n    );\n  }\n\n  renderIndexSelection() {\n    const indexIdOption = this.props.indexesStore.dropdownOptions;\n    return (\n      <Dropdown\n        options={indexIdOption}\n        placeholder=\"Please assign indexes to this project\"\n        fluid\n        selection\n        onChange={this.handleIndexSelection}\n      />\n    );\n  }\n\n  handleIndexSelection = (e, { value }) => this.setState({ indexId: value });\n\n  renderField(name, component) {\n    const fields = this.addProjectFormFields;\n    const explain = fields[name].explain;\n    const label = fields[name].label;\n    const hasExplain = !_.isEmpty(explain);\n    const fieldErrors = this.validationErrors.get(name);\n    const hasError = !_.isEmpty(fieldErrors);\n\n    return (\n      <div>\n        <Header className=\"mr3 mt0\" as=\"h2\" color=\"grey\">\n          {label}\n        </Header>\n        {hasExplain && <div className=\"mb2\">{explain}</div>}\n        <div className={`ui big field input block m0 ${hasError ? 'error' : ''}`}>{component}</div>\n        {hasError && (\n          <div className=\"ui pointing red basic label\">\n            <List>\n              {_.map(fieldErrors, fieldError => (\n                <List.Item key={name}>\n                  <List.Content>{fieldError}</List.Content>\n                </List.Item>\n              ))}\n            </List>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  handleCancel = action(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.formProcessing = false;\n    this.goto('/accounts');\n  });\n\n  handleSubmit = action(async () => {\n    this.formProcessing = true;\n    try {\n      // Perform client side validations first\n      this.project.indexId = this.state.indexId;\n      const validationResult = await validate(this.project, this.addProjectFormFields);\n      // if there are any client side validation errors then do not attempt to make API call\n      if (validationResult.fails()) {\n        runInAction(() => {\n          this.validationErrors = validationResult.errors;\n          this.formProcessing = false;\n        });\n      } else {\n        // There are no client side validation errors so ask the store to add user (which will make API call to server to add the user)\n        await this.props.projectsStore.addProject(this.project);\n        runInAction(() => {\n          this.formProcessing = false;\n        });\n        this.goto('/accounts');\n      }\n    } catch (error) {\n      runInAction(() => {\n        this.formProcessing = false;\n      });\n      displayError(error);\n    }\n  });\n\n  getStore() {\n    return this.props.usersStore;\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(AddProject, {\n  formProcessing: observable,\n  user: observable,\n  validationErrors: observable,\n});\nexport default inject('usersStore', 'indexesStore', 'projectsStore')(withRouter(observer(AddProject)));\n"],"file":"AddProject.js"}