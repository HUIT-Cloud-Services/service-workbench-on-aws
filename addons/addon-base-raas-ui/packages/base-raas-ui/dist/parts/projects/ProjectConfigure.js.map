{"version":3,"sources":["../../../src/parts/projects/ProjectConfigure.js"],"names":["ProjectConfigure","props","handleModalOpen","project","rev","id","description","indexId","projectAdmins","updateProject","formProcessing","modalOpen","confirmDeleteOpen","view","handleModalClose","cleanUp","handleDeleteConfirmOpen","handleDeleteConfirmClose","handleClickEditButton","handleClickCancelButton","handleClickSubmitButton","currentProject","store","getStore","handleClickDeleteButton","deleteProject","load","handleProjectAdminsSelection","e","value","stores","Stores","usersStore","awsAccountsStore","projectsStore","userStore","form","addProjectFormFields","getStores","getFieldLabel","fieldName","$","label","toRow","_","get","displayValue","isArray","map","v","k","user","asUserObject","uid","username","renderButtons","content","renderDetailView","renderEditView","hasError","error","loading","ready","renderMain","renderTrigger","processing","fields","toEditableInput","attributeName","type","handleChange","event","preventDefault","target","placeholder","renderField","renderProjectAdminsSelection","makeButton","color","floated","makeConfirmDeleteButton","editButton","onClick","saveButton","deleteButton","cancelButton","projectAdminsOption","asDropDownOptions","currentProjectAdminUsers","x","name","component","contentRenderer","explain","hasExplain","isEmpty","getProjectStore","React","Component","observable","computed","action"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { decorate, observable, action, runInAction, computed } from 'mobx';\nimport { Button, Dimmer, Header, Loader, Table, Label, Dropdown, Segment, Modal, Confirm } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { displayError, displaySuccess } from '@aws-ee/base-ui/dist/helpers/notification';\nimport Stores from '@aws-ee/base-ui/dist/models/Stores';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport BasicProgressPlaceholder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\nimport { getAddProjectFormFields, getAddProjectForm } from '../../models/forms/AddProjectForm';\n\nclass ProjectConfigure extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.stores = new Stores([this.usersStore, this.awsAccountsStore, this.projectsStore, this.userStore]);\n      const { rev, id, description, indexId, projectAdmins } = this.props.project;\n      this.updateProject = {\n        rev,\n        id,\n        description,\n        indexId,\n        projectAdmins,\n      };\n      this.formProcessing = false;\n      this.modalOpen = false;\n      this.confirmDeleteOpen = false;\n      this.view = 'detail';\n    });\n    this.form = getAddProjectForm();\n    this.addProjectFormFields = getAddProjectFormFields();\n    this.currentProject = this.props.project;\n  }\n\n  componentWillUnmount() {\n    this.cleanUp();\n  }\n\n  getStores() {\n    return this.stores;\n  }\n\n  componentDidMount() {\n    swallowError(this.getStores().load());\n  }\n\n  cleanUp() {\n    runInAction(() => {\n      this.modalOpen = false;\n      this.confirmDeleteOpen = false;\n    });\n  }\n\n  handleModalOpen = () => {\n    runInAction(() => {\n      const { rev, id, description, indexId, projectAdmins } = this.props.project;\n      this.updateProject = {\n        rev,\n        id,\n        description,\n        indexId,\n        projectAdmins,\n      };\n      this.formProcessing = false;\n      this.modalOpen = false;\n      this.confirmDeleteOpen = false;\n      this.view = 'detail';\n      this.modalOpen = true;\n    });\n  };\n\n  handleModalClose = () => {\n    this.cleanUp();\n  };\n\n  handleDeleteConfirmOpen = () => {\n    runInAction(() => {\n      this.confirmDeleteOpen = true;\n    });\n  };\n\n  handleDeleteConfirmClose = () => {\n    runInAction(() => {\n      this.confirmDeleteOpen = false;\n    });\n  };\n\n  renderDetailView() {\n    const getFieldLabel = fieldName => this.form.$(fieldName).label;\n    const toRow = fieldName => {\n      const value = _.get(this.currentProject, fieldName);\n      const displayValue = _.isArray(value)\n        ? _.map(value, (v, k) => {\n            const user = this.usersStore.asUserObject({ uid: v });\n            return <Label key={k} content={user.username} />;\n          })\n        : value;\n      return (\n        <>\n          <Table.Cell collapsing active>\n            {getFieldLabel(fieldName)}\n          </Table.Cell>\n          <Table.Cell>{displayValue}</Table.Cell>\n        </>\n      );\n    };\n\n    return (\n      <Segment basic className=\"ui fluid form mb4\">\n        <Table celled>\n          <Table.Body>\n            <Table.Row>{toRow('id')}</Table.Row>\n            <Table.Row>{toRow('description')}</Table.Row>\n            <Table.Row>{toRow('projectAdmins')}</Table.Row>\n          </Table.Body>\n        </Table>\n        {this.renderButtons()}\n      </Segment>\n    );\n  }\n\n  renderTrigger() {\n    return (\n      <Button size=\"mini\" compact color=\"blue\" onClick={this.handleModalOpen}>\n        Detail\n      </Button>\n    );\n  }\n\n  renderMain() {\n    let content = null;\n    if (this.view === 'detail') {\n      content = this.renderDetailView();\n    } else if (this.view === 'edit') {\n      content = this.renderEditView();\n    }\n    return content;\n  }\n\n  render() {\n    const stores = this.getStores();\n    let content = null;\n    if (stores.hasError) {\n      content = <ErrorBox error={stores.error} className=\"p0 mb3\" />;\n    } else if (stores.loading) {\n      content = <BasicProgressPlaceholder />;\n    } else if (stores.ready) {\n      content = this.renderMain();\n    } else {\n      content = null;\n    }\n\n    return (\n      <Modal closeIcon trigger={this.renderTrigger()} open={this.modalOpen} onClose={this.handleModalClose}>\n        <div className=\"mt2 animated fadeIn\">\n          <Header as=\"h3\" icon textAlign=\"center\" className=\"mt3\" color=\"grey\">\n            Project Detail\n          </Header>\n          <div className=\"mt3 ml3 mr3 animated fadeIn\">{content}</div>\n        </div>\n      </Modal>\n    );\n  }\n\n  renderEditView() {\n    const processing = this.formProcessing;\n    const fields = this.addProjectFormFields;\n    const toEditableInput = (attributeName, type = 'text') => {\n      const handleChange = action(event => {\n        event.preventDefault();\n        this.updateProject[attributeName] = event.target.value;\n      });\n      return (\n        <div className=\"ui focus input\">\n          <input\n            type={type}\n            defaultValue={this.currentProject[attributeName]}\n            placeholder={fields[attributeName].placeholder || ''}\n            onChange={handleChange}\n          />\n        </div>\n      );\n    };\n\n    return (\n      <Segment basic className=\"ui fluid form\">\n        <Dimmer active={processing} inverted>\n          <Loader inverted>Checking</Loader>\n        </Dimmer>\n        {this.renderField('id', toEditableInput('id', 'id'))}\n        <div className=\"mb2\" />\n        {this.renderField('description', toEditableInput('description', 'description'))}\n        <div className=\"mb2\" />\n        {this.renderField('projectAdmins')}\n        {this.renderProjectAdminsSelection()}\n        <div className=\"mb2\" />\n        {this.renderButtons()}\n        <div className=\"mb4\" />\n      </Segment>\n    );\n  }\n\n  handleClickEditButton = () => {\n    runInAction(() => {\n      this.view = 'edit';\n    });\n  };\n\n  handleClickCancelButton = () => {\n    if (this.view === 'edit') {\n      runInAction(() => {\n        this.view = 'detail';\n      });\n    } else {\n      this.handleModalClose();\n    }\n  };\n\n  handleClickSubmitButton = action(async () => {\n    if (!this.updateProject.id) {\n      this.updateProject.id = this.currentProject.id;\n    }\n    runInAction(() => {\n      this.formProcessing = true;\n    });\n    try {\n      const store = this.getStore();\n      await store.updateProject(this.updateProject);\n\n      runInAction(() => {\n        this.formProcessing = false;\n      });\n\n      this.cleanUp();\n\n      displaySuccess('Updated project successfully');\n    } catch (err) {\n      runInAction(() => {\n        this.formProcessing = false;\n      });\n      displayError(err);\n    }\n  });\n\n  handleClickDeleteButton = action(async () => {\n    runInAction(() => {\n      this.confirmDeleteOpen = false;\n      this.formProcessing = true;\n    });\n    try {\n      const store = this.getStore();\n      await store.deleteProject(this.currentProject.id);\n      await store.load();\n      runInAction(async () => {\n        this.formProcessing = false;\n      });\n      this.cleanUp();\n    } catch (error) {\n      runInAction(() => {\n        this.formProcessing = false;\n      });\n      displayError(error);\n    }\n  });\n\n  renderButtons() {\n    const processing = this.formProcessing;\n\n    const makeButton = ({ label = '', color = 'blue', floated = 'left', ...props }) => {\n      return (\n        <Button color={color} floated={floated} disabled={processing} className=\"ml2\" {...props}>\n          {label}\n        </Button>\n      );\n    };\n\n    const makeConfirmDeleteButton = ({ label = 'Delete', color = 'red', floated = 'right' } = {}) => {\n      return (\n        <div>\n          <Button\n            color={color}\n            floated={floated}\n            disabled={processing}\n            className=\"ml2\"\n            onClick={this.handleDeleteConfirmOpen}\n          >\n            {label}\n          </Button>\n          <Confirm\n            open={this.confirmDeleteOpen}\n            content=\"Are you sure you want to delete this project?\"\n            onCancel={this.handleDeleteConfirmClose}\n            onConfirm={this.handleClickDeleteButton}\n          />\n        </div>\n      );\n    };\n\n    const editButton = this.view === 'detail' ? makeButton({ label: 'Edit', onClick: this.handleClickEditButton }) : '';\n\n    const saveButton = this.view === 'edit' ? makeButton({ label: 'Save', onClick: this.handleClickSubmitButton }) : '';\n\n    const deleteButton = this.view === 'detail' ? makeConfirmDeleteButton() : '';\n\n    const cancelButton = makeButton({\n      label: 'Cancel',\n      floated: 'right',\n      color: 'grey',\n      onClick: this.handleClickCancelButton,\n    });\n\n    return (\n      <div className=\"mt3 mb3\">\n        <Modal.Actions>\n          {cancelButton}\n          {deleteButton}\n          {saveButton}\n          {editButton}\n        </Modal.Actions>\n      </div>\n    );\n  }\n\n  renderProjectAdminsSelection() {\n    const usersStore = this.props.usersStore;\n    const projectAdminsOption = usersStore.asDropDownOptions();\n    const currentProjectAdminUsers = _.map(this.currentProject.projectAdmins, uid => usersStore.asUserObject({ uid }));\n    return (\n      <Dropdown\n        options={projectAdminsOption}\n        defaultValue={_.map(currentProjectAdminUsers, x => x.uid)}\n        fluid\n        multiple\n        selection\n        onChange={this.handleProjectAdminsSelection}\n      />\n    );\n  }\n\n  handleProjectAdminsSelection = (e, { value }) => {\n    runInAction(() => {\n      this.updateProject.projectAdmins = value;\n    });\n  };\n\n  renderField(name, component, contentRenderer) {\n    const fields = this.addProjectFormFields;\n    const explain = fields[name].explain;\n    const label = fields[name].label;\n    const hasExplain = !_.isEmpty(explain);\n    let content = this.currentProject[name];\n    if (contentRenderer && typeof contentRenderer === 'function') {\n      content = contentRenderer(content);\n    }\n    content = _.isEmpty(content) ? 'N/A' : content;\n\n    return (\n      <div>\n        <Header className=\"mr3 mt0\" as=\"h4\" color=\"grey\">\n          {label}\n        </Header>\n        {hasExplain && (\n          <div className=\"mb2\">\n            {explain} <span>{this.view === 'detail' ? content : ''}</span>\n          </div>\n        )}\n        <div className=\"ui field input block m0\">{component}</div>\n      </div>\n    );\n  }\n\n  getStore() {\n    return this.props.projectsStore;\n  }\n\n  get userStore() {\n    return this.props.userStore;\n  }\n\n  get usersStore() {\n    return this.props.usersStore;\n  }\n\n  get awsAccountsStore() {\n    return this.props.awsAccountsStore;\n  }\n\n  get projectStore() {\n    return this.props.projectsStore.getProjectStore();\n  }\n\n  get projectsStore() {\n    return this.props.projectsStore;\n  }\n}\n\n// Using the MobX 4 way to use decorators without decorator syntax\ndecorate(ProjectConfigure, {\n  formProcessing: observable,\n  modalOpen: observable,\n  confirmDeleteOpen: observable,\n  view: observable,\n  updateProject: observable,\n\n  projectsStore: computed,\n  awsAccountsStore: computed,\n  usersStore: computed,\n  userStore: computed,\n\n  handleClickSubmitButton: action,\n});\nexport default observer(ProjectConfigure);\n"],"file":"ProjectConfigure.js"}