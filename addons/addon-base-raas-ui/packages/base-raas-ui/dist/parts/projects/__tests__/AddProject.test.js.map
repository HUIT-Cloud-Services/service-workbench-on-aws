{"version":3,"sources":["../../../../src/parts/projects/__tests__/AddProject.test.js"],"names":["usersStore","asDropDownOptions","key","value","text","indexesStore","dropdownOptions","projectsStore","addProject","jest","fn","describe","component","wrapper","beforeEach","instance","it","project","id","description","projectAdmins","handleSubmit","errors","validationErrors","expect","indexId","toBeDefined","toContain","setState","not","toHaveBeenCalled","toHaveBeenCalledWith"],"mappings":";;AAeA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,UAAU,GAAG;AACjBC,EAAAA,iBAAiB,EAAE;AAAA,WAAM,CACvB;AACEC,MAAAA,GAAG,EAAE,SADP;AAEEC,MAAAA,KAAK,EAAE,SAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADuB,CAAN;AAAA;AADF,CAAnB;AAUA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,CACf;AACEJ,IAAAA,GAAG,EAAE,GADP;AAEEC,IAAAA,KAAK,EAAE,KAFT;AAGEC,IAAAA,IAAI,EAAE;AAHR,GADe;AADE,CAArB;AAUA,IAAMG,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAEC,IAAI,CAACC,EAAL;AADQ,CAAtB;AAIAC,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3B,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,OAAO,GAAG,IAAd;AACAC,EAAAA,UAAU,CAAC,YAAM;AACf;AACAD,IAAAA,OAAO,GAAG,mCACR,gCAAC,sBAAD,CAAY,gBAAZ;AAA6B,MAAA,YAAY,EAAER,YAA3C;AAAyD,MAAA,aAAa,EAAEE,aAAxE;AAAuF,MAAA,UAAU,EAAEP;AAAnG,MADQ,CAAV,CAFe,CAMf;;AACAY,IAAAA,SAAS,GAAGC,OAAO,CAACE,QAAR,EAAZ,CAPe,CASf;;AACAH,IAAAA,SAAS,QAAT,GAAiBH,IAAI,CAACC,EAAL,EAAjB;AACD,GAXS,CAAV;AAaAM,EAAAA,EAAE,CAAC,gDAAD,uEAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AACnD;AACAJ,YAAAA,SAAS,CAACK,OAAV,CAAkBC,EAAlB,GAAuB,qBAAvB;AACAN,YAAAA,SAAS,CAACK,OAAV,CAAkBE,WAAlB,GAAgC,2BAAhC;AACAP,YAAAA,SAAS,CAACK,OAAV,CAAkBG,aAAlB,GAAkC,CAAC,SAAD,CAAlC,CAJmD,CAMnD;;AANmD;AAAA,mBAO7CR,SAAS,CAACS,YAAV,EAP6C;;AAAA;AASnD;AACMC,YAAAA,MAV6C,GAUpCV,SAAS,CAACW,gBAAV,CAA2BD,MAVS;AAWnDE,YAAAA,MAAM,CAACF,MAAM,CAACG,OAAR,CAAN,CAAuBC,WAAvB;AACAF,YAAAA,MAAM,CAACF,MAAM,CAACG,OAAR,CAAN,CAAuBE,SAAvB,CAAiC,gCAAjC;;AAZmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnD,GAAF;AAeAX,EAAAA,EAAE,CAAC,iDAAD,uEAAoD;AAAA;AAAA;AAAA;AAAA;AACpD;AACAJ,YAAAA,SAAS,CAACK,OAAV,CAAkBC,EAAlB,GAAuB,qBAAvB;AACAN,YAAAA,SAAS,CAACK,OAAV,CAAkBE,WAAlB,GAAgC,2BAAhC;AACAP,YAAAA,SAAS,CAACK,OAAV,CAAkBG,aAAlB,GAAkC,CAAC,SAAD,CAAlC,CAJoD,CAMpD;;AACAP,YAAAA,OAAO,CAACe,QAAR,CAAiB;AAAEH,cAAAA,OAAO,EAAE;AAAX,aAAjB,EAPoD,CASpD;;AAToD;AAAA,mBAU9Cb,SAAS,CAACS,YAAV,EAV8C;;AAAA;AAYpD;AACAG,YAAAA,MAAM,CAACZ,SAAS,CAACW,gBAAV,CAA2BD,MAA5B,CAAN,CAA0CO,GAA1C,CAA8CH,WAA9C;AACAF,YAAAA,MAAM,CAACjB,aAAa,CAACC,UAAf,CAAN,CAAiCsB,gBAAjC;AACAN,YAAAA,MAAM,CAACZ,SAAS,QAAV,CAAN,CAAuBmB,oBAAvB,CAA4C,WAA5C;;AAfoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApD,GAAF;AAiBD,CAhDO,CAAR","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport AddProject from '../AddProject';\n\nconst usersStore = {\n  asDropDownOptions: () => [\n    {\n      key: 'userABC',\n      value: 'userABC',\n      text: 'Dr. John Doe',\n    },\n  ],\n};\n\nconst indexesStore = {\n  dropdownOptions: [\n    {\n      key: '1',\n      value: '123',\n      text: 'Index 123',\n    },\n  ],\n};\n\nconst projectsStore = {\n  addProject: jest.fn(),\n};\n\ndescribe('AddProject', () => {\n  let component = null;\n  let wrapper = null;\n  beforeEach(() => {\n    // Render AddProject component\n    wrapper = shallow(\n      <AddProject.WrappedComponent indexesStore={indexesStore} projectsStore={projectsStore} usersStore={usersStore} />,\n    );\n\n    // Get instance of the component\n    component = wrapper.instance();\n\n    // Mock goto function\n    component.goto = jest.fn();\n  });\n\n  it('should give an error if indexId is not present', async () => {\n    // Set project attributes, except indexId\n    component.project.id = 'my-research-project';\n    component.project.description = 'Some relevant description';\n    component.project.projectAdmins = ['userABC'];\n\n    // Submit form\n    await component.handleSubmit();\n\n    // Verify an error is displayed\n    const errors = component.validationErrors.errors;\n    expect(errors.indexId).toBeDefined();\n    expect(errors.indexId).toContain('The indexId field is required.');\n  });\n\n  it('should not give an error if indexId is provided', async () => {\n    // Set project attributes\n    component.project.id = 'my-research-project';\n    component.project.description = 'Some relevant description';\n    component.project.projectAdmins = ['userABC'];\n\n    // Also set indexId, which is in the component state for some reason\n    wrapper.setState({ indexId: '123' });\n\n    // Submit form\n    await component.handleSubmit();\n\n    // Verify addProject gets invoked\n    expect(component.validationErrors.errors).not.toBeDefined();\n    expect(projectsStore.addProject).toHaveBeenCalled();\n    expect(component.goto).toHaveBeenCalledWith('/accounts');\n  });\n});\n"],"file":"AddProject.test.js"}