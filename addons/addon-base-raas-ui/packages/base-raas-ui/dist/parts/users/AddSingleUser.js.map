{"version":3,"sources":["../../../src/parts/users/AddSingleUser.js"],"names":["AddSingleUser","props","handleCancel","goto","handleFormSubmission","form","values","isInternalUser","userRolesStore","userRole","isInternalGuest","projectId","idpOptionValue","identityProviderName","idpName","authenticationProviderId","authNProviderId","usersStore","addUser","clear","handleFormError","_form","_errors","stores","Stores","userStore","awsAccountsStore","projectsStore","authenticationProviderConfigsStore","addUserFormFields","getStores","load","content","hasError","error","loading","ready","renderMain","emailField","$","identityProviderNameField","userRoleField","projectIdField","statusField","identityProviderOptions","getIdentityProviderOptions","userRoleOptions","getUserRoleOptions","projectIdOptions","getProjectOptions","value","showProjectField","_","isEmpty","processing","_onSubmit","onCancel","list","dropdownOptions","React","Component","computed"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { decorate, computed, runInAction } from 'mobx';\nimport { Segment, Button } from 'semantic-ui-react';\n\nimport { displaySuccess, displayError } from '@aws-ee/base-ui/dist//helpers/notification';\n\nimport Stores from '@aws-ee/base-ui/dist/models/Stores';\nimport BasicProgressPlaceholder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\nimport YesNo from '@aws-ee/base-ui/dist/parts/helpers/fields/YesNo';\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport DropDown from '@aws-ee/base-ui/dist/parts/helpers/fields/DropDown';\nimport Input from '@aws-ee/base-ui/dist/parts/helpers/fields/Input';\nimport { getAddUserForm, getAddUserFormFields } from '../../models/forms/AddUserForm';\nimport { toIdpFromValue, toIdpOptions } from '../../models/forms/UserFormUtils';\n\n// expected props\n// - userStore (via injection)\n// - usersStore (via injection)\n// - userRolesStore (via injection)\n// - awsAccountsStore (via injection)\n// - projectsStore (via injection)\n// - authenticationProviderConfigsStore (via injection)\nclass AddSingleUser extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.stores = new Stores([\n        this.userStore,\n        this.usersStore,\n        this.userRolesStore,\n        this.awsAccountsStore,\n        this.projectsStore,\n        this.authenticationProviderConfigsStore,\n      ]);\n    });\n    this.form = getAddUserForm();\n    this.addUserFormFields = getAddUserFormFields();\n  }\n\n  componentDidMount() {\n    swallowError(this.getStores().load());\n  }\n\n  render() {\n    const stores = this.getStores();\n    let content = null;\n    if (stores.hasError) {\n      content = <ErrorBox error={stores.error} className=\"p0 mb3\" />;\n    } else if (stores.loading) {\n      content = <BasicProgressPlaceholder />;\n    } else if (stores.ready) {\n      content = this.renderMain();\n    } else {\n      content = null;\n    }\n\n    return content;\n  }\n\n  renderMain() {\n    const form = this.form;\n    const emailField = form.$('email');\n    const identityProviderNameField = form.$('identityProviderName');\n    const userRoleField = form.$('userRole');\n    const projectIdField = form.$('projectId');\n    const statusField = form.$('status');\n\n    const identityProviderOptions = this.getIdentityProviderOptions();\n    const userRoleOptions = this.getUserRoleOptions();\n    const projectIdOptions = this.getProjectOptions();\n\n    const isInternalUser = this.userRolesStore.isInternalUser(userRoleField.value);\n    const isInternalGuest = this.userRolesStore.isInternalGuest(userRoleField.value);\n    const showProjectField = !_.isEmpty(projectIdOptions) && isInternalUser && !isInternalGuest;\n\n    return (\n      <Segment clearing className=\"p3\">\n        <Form\n          form={form}\n          onCancel={this.handleCancel}\n          onSuccess={this.handleFormSubmission}\n          onError={this.handleFormError}\n        >\n          {({ processing, _onSubmit, onCancel }) => (\n            <>\n              <Input field={emailField} disabled={processing} />\n              <DropDown\n                field={identityProviderNameField}\n                options={identityProviderOptions}\n                selection\n                fluid\n                disabled={processing}\n              />\n              <DropDown field={userRoleField} options={userRoleOptions} selection fluid disabled={processing} />\n\n              {showProjectField && (\n                <DropDown\n                  field={projectIdField}\n                  options={projectIdOptions}\n                  multiple\n                  selection\n                  clearable\n                  fluid\n                  disabled={processing}\n                />\n              )}\n\n              <YesNo field={statusField} disabled={processing} />\n\n              <div className=\"mt3\">\n                <Button floated=\"right\" color=\"blue\" icon disabled={processing} className=\"ml2\" type=\"submit\">\n                  Add User\n                </Button>\n                <Button floated=\"right\" disabled={processing} onClick={onCancel}>\n                  Cancel\n                </Button>\n              </div>\n            </>\n          )}\n        </Form>\n      </Segment>\n    );\n  }\n\n  getIdentityProviderOptions() {\n    return toIdpOptions(this.authenticationProviderConfigsStore.list);\n  }\n\n  getUserRoleOptions() {\n    return this.userRolesStore.dropdownOptions;\n  }\n\n  getProjectOptions() {\n    return this.projectsStore.dropdownOptions;\n  }\n\n  // Private methods\n  handleCancel = () => {\n    const goto = gotoFn(this);\n    goto('/users');\n  };\n\n  handleFormSubmission = async form => {\n    const values = form.values();\n    const isInternalUser = this.userRolesStore.isInternalUser(values.userRole);\n    const isInternalGuest = this.userRolesStore.isInternalGuest(values.userRole);\n    let projectId = values.projectId || [];\n    if (!isInternalUser || isInternalGuest) {\n      // Pass projectId(s) only if the user's role is internal role and if the user is not a guest.\n      // Pass empty array otherwise.\n      projectId = [];\n    }\n\n    // The values.identityProviderName is in JSON string format\n    // containing authentication provider id as well as identity provider name\n    // See \"src/models/forms/UserFormUtils.js\" for more details.\n    const idpOptionValue = toIdpFromValue(values.identityProviderName);\n    const identityProviderName = idpOptionValue.idpName;\n    const authenticationProviderId = idpOptionValue.authNProviderId;\n\n    try {\n      await this.usersStore.addUser({ ...values, authenticationProviderId, identityProviderName, projectId });\n      form.clear();\n      displaySuccess('Added user successfully');\n\n      const goto = gotoFn(this);\n      goto('/users');\n    } catch (error) {\n      displayError(error);\n    }\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  handleFormError = (_form, _errors) => {\n    // We don't need to do anything here\n  };\n\n  getStores() {\n    return this.stores;\n  }\n\n  get userStore() {\n    return this.props.userStore;\n  }\n\n  get usersStore() {\n    return this.props.usersStore;\n  }\n\n  get userRolesStore() {\n    return this.props.userRolesStore;\n  }\n\n  get awsAccountsStore() {\n    return this.props.awsAccountsStore;\n  }\n\n  get projectsStore() {\n    return this.props.projectsStore;\n  }\n\n  get authenticationProviderConfigsStore() {\n    return this.props.authenticationProviderConfigsStore;\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(AddSingleUser, {\n  userStore: computed,\n  usersStore: computed,\n  userRolesStore: computed,\n  awsAccountsStore: computed,\n  projectsStore: computed,\n  authenticationProviderConfigsStore: computed,\n});\n\nexport default inject(\n  'userStore',\n  'usersStore',\n  'userRolesStore',\n  'awsAccountsStore',\n  'projectsStore',\n  'authenticationProviderConfigsStore',\n)(withRouter(observer(AddSingleUser)));\n"],"file":"AddSingleUser.js"}