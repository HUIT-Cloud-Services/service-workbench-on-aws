{"version":3,"sources":["../../../src/parts/users/UserPinModal.js"],"names":["UserPinModal","props","handlePinSubmission","e","preventDefault","persist","user","unencryptedCreds","target","pin","value","errorMsg","undefined","hideModal","message","Form","show","React","Component","propTypes","PropTypes","bool","isRequired","func","object","string","defaultProps","observable"],"mappings":";;;;;;;;;AAeA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAQnBC,mBARmB;AAAA,yEAQG,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AACpBA,gBAAAA,CAAC,CAACC,cAAF;AACAD,gBAAAA,CAAC,CAACE,OAAF,GAFoB,CAIpB;;AAJoB;AAAA;AAAA,uBAMZ,MAAKJ,KAAL,CAAWK,IAAX,CAAgBC,gBAAhB,CAAiCJ,CAAC,CAACK,MAAF,CAASC,GAAT,CAAaC,KAA9C,CANY;;AAAA;AAOlB,uCAAY,YAAM;AAChB,wBAAKC,QAAL,GAAgBC,SAAhB;AACD,iBAFD;;AAGA,sBAAKX,KAAL,CAAWY,SAAX;;AAVkB;AAAA;;AAAA;AAAA;AAAA;AAYlB,uCAAY,YAAM;AAChB,wBAAKF,QAAL,GAAgB,YAAMG,OAAtB;AACD,iBAFD;;AAZkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARH;;AAAA;AAAA;AAAA;AAAA;;AAGjB,2BAAY,YAAM;AAChB,YAAKH,QAAL,GAAgBC,SAAhB;AACD,KAFD;AAHiB;AAMlB;;;;6BAoBQ;AACP,0BACE,gCAAC,sBAAD;AACE,QAAA,EAAE,EAAEG,qBADN;AAEE,QAAA,QAAQ,EAAE,KAAKb,mBAFjB;AAGE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWe,IAHnB;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,OAAO,EAAE,KAAKf,KAAL,CAAWY,SALtB;AAME,QAAA,kBAAkB;AANpB,sBAQE,gCAAC,uBAAD;AAAQ,QAAA,OAAO,EAAC;AAAhB,QARF,eASE,gCAAC,sBAAD,CAAO,OAAP,QACG,KAAKZ,KAAL,CAAWa,OADd,eAEE,gCAAC,qBAAD,CAAM,KAAN;AACE,QAAA,KAAK,EAAC,KADR;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,WAAW,EAAC,sCALd;AAME,QAAA,KAAK,EAAE,KAAKH;AANd,QAFF,CATF,eAoBE,gCAAC,sBAAD,CAAO,OAAP,qBACE,gCAAC,uBAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,OAA9B;AAAsC,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWY;AAA1D,QADF,eAEE,gCAAC,uBAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,MAA5B;AAAmC,QAAA,OAAO,EAAC;AAA3C,QAFF,CApBF,CADF;AA2BD;;;;EAvDwBI,kBAAMC,S;;AAyDjClB,YAAY,CAACmB,SAAb,GAAyB;AACvBH,EAAAA,IAAI,EAAEI,sBAAUC,IAAV,CAAeC,UADE;AAEvBT,EAAAA,SAAS,EAAEO,sBAAUG,IAAV,CAAeD,UAFH;AAGvB;AACAhB,EAAAA,IAAI,EAAEc,sBAAUI,MAAV,CAAiBF,UAJA;AAKvBR,EAAAA,OAAO,EAAEM,sBAAUK;AALI,CAAzB;AAOAzB,YAAY,CAAC0B,YAAb,GAA4B;AAC1BZ,EAAAA,OAAO,EAAE;AADiB,CAA5B;AAIA,oBAASd,YAAT,EAAuB;AACrBW,EAAAA,QAAQ,EAAEgB;AADW,CAAvB;;eAIe,yBAAS3B,YAAT,C","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { decorate, observable, runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { Modal, Form, Header, Button } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nclass UserPinModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    runInAction(() => {\n      this.errorMsg = undefined;\n    });\n  }\n\n  handlePinSubmission = async e => {\n    e.preventDefault();\n    e.persist();\n\n    // Will throw error if PIN is incorrect\n    try {\n      await this.props.user.unencryptedCreds(e.target.pin.value);\n      runInAction(() => {\n        this.errorMsg = undefined;\n      });\n      this.props.hideModal();\n    } catch (error) {\n      runInAction(() => {\n        this.errorMsg = error.message;\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Modal\n        as={Form}\n        onSubmit={this.handlePinSubmission}\n        open={this.props.show}\n        size=\"tiny\"\n        onClose={this.props.hideModal}\n        closeOnDimmerClick\n      >\n        <Header content=\"Enter PIN\" />\n        <Modal.Content>\n          {this.props.message}\n          <Form.Input\n            label=\"PIN\"\n            name=\"pin\"\n            required\n            type=\"password\"\n            placeholder=\"Your pin to access your AWS IAM user\"\n            error={this.errorMsg}\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button type=\"button\" content=\"Close\" onClick={this.props.hideModal} />\n          <Button type=\"submit\" color=\"blue\" content=\"Save\" />\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\nUserPinModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  hideModal: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  user: PropTypes.object.isRequired,\n  message: PropTypes.string,\n};\nUserPinModal.defaultProps = {\n  message: '',\n};\n\ndecorate(UserPinModal, {\n  errorMsg: observable,\n});\n\nexport default observer(UserPinModal);\n"],"file":"UserPinModal.js"}