{"version":3,"sources":["../../../src/parts/users/AddSingleLocalUser.js"],"names":["AddSingleLocalUser","props","handleCancel","goto","handleFormSubmission","form","values","isInternalUser","userRolesStore","userRole","isInternalGuest","projectId","usersStore","addUser","clear","stores","Stores","projectsStore","load","content","hasError","error","renderContent","renderTitle","renderWarning","emailField","$","firstNameField","lastNameField","passwordField","userRoleField","projectIdField","statusField","userRoleOptions","dropdownOptions","projectIdOptions","value","showProjectField","_","isEmpty","showProjectWarning","processing","onCancel","React","Component","computed","observable","action"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport { computed, decorate, observable, runInAction, action } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Header, Icon, Message, Segment, Button } from 'semantic-ui-react';\n\nimport { displaySuccess, displayError } from '@aws-ee/base-ui/dist//helpers/notification';\nimport Stores from '@aws-ee/base-ui/dist/models/Stores';\nimport BasicProgressPlaceholder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\nimport YesNo from '@aws-ee/base-ui/dist/parts/helpers/fields/YesNo';\nimport DropDown from '@aws-ee/base-ui/dist/parts/helpers/fields/DropDown';\nimport Input from '@aws-ee/base-ui/dist/parts/helpers/fields/Input';\n\nimport { isStoreLoading, isStoreReady } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport { getAddUserForm } from '../../models/forms/AddLocalUserForm';\n\n// expected props\n// - projectsStore (via injection)\n// - userRolesStore (via injection)\n// - usersStore (via injection)\nclass AddSingleLocalUser extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.stores = new Stores([this.userRolesStore, this.projectsStore]);\n      this.form = getAddUserForm();\n    });\n  }\n\n  componentDidMount() {\n    swallowError(this.stores.load());\n  }\n\n  get projectsStore() {\n    return this.props.projectsStore;\n  }\n\n  get userRolesStore() {\n    return this.props.userRolesStore;\n  }\n\n  get usersStore() {\n    return this.props.usersStore;\n  }\n\n  // Private methods\n  handleCancel = () => {\n    const goto = gotoFn(this);\n    goto('/users');\n  };\n\n  handleFormSubmission = async form => {\n    const values = form.values();\n    const isInternalUser = this.userRolesStore.isInternalUser(values.userRole);\n    const isInternalGuest = this.userRolesStore.isInternalGuest(values.userRole);\n\n    let projectId = values.projectId || [];\n    if (!isInternalUser || isInternalGuest) {\n      // Pass projectId(s) only if it is internal user or a guest. Pass empty array otherwise.\n      projectId = [];\n    }\n\n    try {\n      await this.usersStore.addUser({ ...values, projectId });\n      runInAction(() => {\n        form.clear();\n      });\n      displaySuccess('Added local user successfully');\n\n      const goto = gotoFn(this);\n      goto('/users');\n    } catch (error) {\n      displayError(error);\n    }\n  };\n\n  render() {\n    const stores = this.stores;\n    let content = null;\n    if (stores.hasError) {\n      content = <ErrorBox error={stores.error} className=\"p0 mb3\" />;\n    } else if (isStoreLoading(stores)) {\n      content = <BasicProgressPlaceholder />;\n    } else if (isStoreReady(stores)) {\n      content = this.renderContent();\n    } else {\n      content = null;\n    }\n\n    return (\n      <Container className=\"mt3 mb4\">\n        {this.renderTitle()}\n        {this.renderWarning()}\n        {content}\n      </Container>\n    );\n  }\n\n  renderTitle() {\n    return (\n      <div className=\"mb3 flex\">\n        <Header as=\"h3\" className=\"color-grey mt1 mb0 flex-auto\">\n          <Icon name=\"user\" className=\"align-top\" />\n          <Header.Content className=\"left-align\">Add Local User</Header.Content>\n        </Header>\n      </div>\n    );\n  }\n\n  renderContent() {\n    const form = this.form;\n    const emailField = form.$('email');\n    const firstNameField = form.$('firstName');\n    const lastNameField = form.$('lastName');\n    const passwordField = form.$('password');\n    const userRoleField = form.$('userRole');\n    const projectIdField = form.$('projectId');\n    const statusField = form.$('status');\n\n    const userRoleOptions = this.userRolesStore.dropdownOptions;\n    const projectIdOptions = this.projectsStore.dropdownOptions;\n\n    const isInternalUser = this.userRolesStore.isInternalUser(userRoleField.value);\n    const isInternalGuest = this.userRolesStore.isInternalGuest(userRoleField.value);\n    const showProjectField = !_.isEmpty(projectIdOptions) && isInternalUser && !isInternalGuest;\n    const showProjectWarning = _.isEmpty(projectIdOptions) && isInternalUser && !isInternalGuest;\n\n    return (\n      <Segment clearing className=\"p3\">\n        <Form form={form} onCancel={this.handleCancel} onSuccess={this.handleFormSubmission}>\n          {({ processing, onCancel }) => (\n            <>\n              <Input field={emailField} disabled={processing} />\n              <Input field={firstNameField} disabled={processing} />\n              <Input field={lastNameField} disabled={processing} />\n              <Input field={passwordField} type=\"password\" disabled={processing} />\n              <DropDown field={userRoleField} options={userRoleOptions} selection fluid disabled={processing} />\n\n              {showProjectField && (\n                <DropDown\n                  field={projectIdField}\n                  options={projectIdOptions}\n                  multiple\n                  selection\n                  clearable\n                  fluid\n                  disabled={processing}\n                />\n              )}\n\n              {showProjectWarning && (\n                <Message\n                  className=\"mb4\"\n                  icon=\"warning\"\n                  header=\"Missing projects\"\n                  content=\"There are no projects created. Once you create a project or two. You want to come back and associate this user to at least one project. You can still create the user for now.\"\n                />\n              )}\n\n              <YesNo field={statusField} disabled={processing} />\n\n              <div className=\"mt3\">\n                <Button floated=\"right\" color=\"blue\" icon disabled={processing} className=\"ml2\" type=\"submit\">\n                  Add Local User\n                </Button>\n                <Button floated=\"right\" disabled={processing} onClick={onCancel}>\n                  Cancel\n                </Button>\n              </div>\n            </>\n          )}\n        </Form>\n      </Segment>\n    );\n  }\n\n  renderWarning() {\n    return (\n      <Message\n        warning\n        icon=\"warning\"\n        header=\"Not for production usage\"\n        content=\"Creating local users is not meant to be used in production environments.\"\n      />\n    );\n  }\n}\n\ndecorate(AddSingleLocalUser, {\n  projectsStore: computed,\n  userRolesStore: computed,\n  usersStore: computed,\n  stores: observable,\n  form: observable,\n  handleCancel: action,\n  handleFormSubmission: action,\n});\n\nexport default inject('projectsStore', 'userRolesStore', 'usersStore')(withRouter(observer(AddSingleLocalUser)));\n"],"file":"AddSingleLocalUser.js"}