{"version":3,"sources":["../../../src/parts/studies/StudyFilesTable.js"],"names":["StudyFilesTable","props","filesStore","study","getFilesStore","load","startHeartbeat","stopHeartbeat","store","content","error","renderEmpty","renderTable","files","map","file","filename","size","lastModified","toISOString","React","Component","observable"],"mappings":";;;;;;;;;AAeA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;IACMA,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,2BAAY,YAAM;AAChB,YAAKC,UAAL,GAAkBD,KAAK,CAACE,KAAN,CAAYC,aAAZ,EAAlB;AACD,KAFD;AAFiB;AAKlB;;;;wCAEmB;AAClB,+BAAa,KAAKF,UAAL,CAAgBG,IAAhB,EAAb;AACA,WAAKH,UAAL,CAAgBI,cAAhB;AACD;;;2CAEsB;AACrB,WAAKJ,UAAL,CAAgBK,aAAhB;AACD;;;6BAEQ;AACP,UAAMC,KAAK,GAAG,KAAKN,UAAnB,CADO,CAEP;;AACA,UAAIO,OAAJ;;AACA,UAAI,6BAAaD,KAAb,CAAJ,EAAyB;AACvBC,QAAAA,OAAO,gBAAG,gCAAC,oBAAD;AAAU,UAAA,KAAK,EAAED,KAAK,CAACE,KAAvB;AAA8B,UAAA,SAAS,EAAC;AAAxC,UAAV;AACD,OAFD,MAEO,IAAI,+BAAeF,KAAf,CAAJ,EAA2B;AAChCC,QAAAA,OAAO,gBAAG,gCAAC,oCAAD;AAA0B,UAAA,YAAY,EAAE;AAAxC,UAAV;AACD,OAFM,MAEA,IAAI,6BAAaD,KAAb,CAAJ,EAAyB;AAC9BC,QAAAA,OAAO,GAAG,KAAKE,WAAL,EAAV;AACD,OAFM,MAEA;AACLF,QAAAA,OAAO,GAAG,KAAKG,WAAL,EAAV;AACD;;AAED,aAAOH,OAAP;AACD;;;kCAEa;AACZ,0BACE,+EACE,gCAAC,sBAAD;AAAO,QAAA,OAAO;AAAd,sBACE,gCAAC,sBAAD,CAAO,MAAP,qBACE,gCAAC,sBAAD,CAAO,GAAP,qBACE,gCAAC,sBAAD,CAAO,UAAP,mBADF,eAEE,gCAAC,sBAAD,CAAO,UAAP,eAFF,eAGE,gCAAC,sBAAD,CAAO,UAAP,wBAHF,CADF,CADF,eASE,gCAAC,sBAAD,CAAO,IAAP,QACG,KAAKP,UAAL,CAAgBW,KAAhB,CAAsBC,GAAtB,CAA0B,UAAAC,IAAI;AAAA,4BAC7B,gCAAC,sBAAD,CAAO,GAAP;AAAW,UAAA,GAAG,EAAEA,IAAI,CAACC;AAArB,wBACE,gCAAC,sBAAD,CAAO,IAAP,QAAaD,IAAI,CAACC,QAAlB,CADF,eAEE,gCAAC,sBAAD,CAAO,IAAP,QAAa,wBAAYD,IAAI,CAACE,IAAjB,CAAb,CAFF,eAGE,gCAAC,sBAAD,CAAO,IAAP,QAAaF,IAAI,CAACG,YAAL,CAAkBC,WAAlB,EAAb,CAHF,CAD6B;AAAA,OAA9B,CADH,CATF,CADF,CADF;AAuBD;;;kCAEa;AACZ,0BACE,gCAAC,wBAAD;AAAS,QAAA,WAAW,MAApB;AAAqB,QAAA,SAAS,EAAC;AAA/B,sBACE,gCAAC,uBAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,SAAS,EAAC;AAAvB,sBACE,gCAAC,qBAAD;AAAM,QAAA,IAAI,EAAC;AAAX,QADF,2BAGE,gCAAC,uBAAD,CAAQ,SAAR,mDAHF,CADF,CADF;AASD;;;;EAtE2BC,kBAAMC,S;;AAyEpC,oBAASrB,eAAT,EAA0B;AACxBE,EAAAA,UAAU,EAAEoB;AADY,CAA1B;;eAIe,yBAAStB,eAAT,C","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { observable, runInAction, decorate } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { Table, Segment, Header, Icon } from 'semantic-ui-react';\n\nimport { formatBytes, swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { isStoreError, isStoreLoading, isStoreEmpty } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport BasicProgressPlaceholder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\n\n// expected props\n// - study\nclass StudyFilesTable extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.filesStore = props.study.getFilesStore();\n    });\n  }\n\n  componentDidMount() {\n    swallowError(this.filesStore.load());\n    this.filesStore.startHeartbeat();\n  }\n\n  componentWillUnmount() {\n    this.filesStore.stopHeartbeat();\n  }\n\n  render() {\n    const store = this.filesStore;\n    // Render loading, error, or tab content\n    let content;\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} className=\"m0\" />;\n    } else if (isStoreLoading(store)) {\n      content = <BasicProgressPlaceholder segmentCount={1} />;\n    } else if (isStoreEmpty(store)) {\n      content = this.renderEmpty();\n    } else {\n      content = this.renderTable();\n    }\n\n    return content;\n  }\n\n  renderTable() {\n    return (\n      <>\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Filename</Table.HeaderCell>\n              <Table.HeaderCell>Size</Table.HeaderCell>\n              <Table.HeaderCell>Last Modified</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {this.filesStore.files.map(file => (\n              <Table.Row key={file.filename}>\n                <Table.Cell>{file.filename}</Table.Cell>\n                <Table.Cell>{formatBytes(file.size)}</Table.Cell>\n                <Table.Cell>{file.lastModified.toISOString()}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <Segment placeholder className=\"mt0\">\n        <Header icon className=\"color-grey\">\n          <Icon name=\"file outline\" />\n          No files\n          <Header.Subheader>No files are uploaded yet for this study</Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n}\n\ndecorate(StudyFilesTable, {\n  filesStore: observable,\n});\n\nexport default observer(StudyFilesTable);\n"],"file":"StudyFilesTable.js"}