{"version":3,"sources":["../../../src/parts/studies/CreateStudy.js"],"names":["CreateStudy","props","cleanModal","modalOpen","handleFormCancel","form","clear","handleFormError","_form","_errors","handleFormSubmission","studyValues","values","categoryId","categoryName","name","studiesStore","getStudiesStore","createStudy","category","studiesStoresMap","renderTrigger","renderCreateStudyForm","projectIds","userStore","projectIdDropdown","processing","onCancel","$","React","Component","observable","action"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { decorate, observable, action, runInAction } from 'mobx';\nimport { Button, Header, Modal, Segment } from 'semantic-ui-react';\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport Dropdown from '@aws-ee/base-ui/dist/parts/helpers/fields/DropDown';\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\nimport Input from '@aws-ee/base-ui/dist/parts/helpers/fields/Input';\nimport TextArea from '@aws-ee/base-ui/dist/parts/helpers/fields/TextArea';\nimport YesNo from '@aws-ee/base-ui/dist/parts/helpers/fields/YesNo';\n\nimport { getCreateStudyForm } from '../../models/forms/CreateStudy';\nimport { getCategoryById } from '../../models/studies/categories';\n\n// expected props\n// - userStore (via injection)\n// - studiesStoresMap (via injection)\nclass CreateStudy extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.cleanModal();\n      this.form = getCreateStudyForm();\n    });\n  }\n\n  getStudiesStore(categoryId) {\n    return this.props.studiesStoresMap[categoryId];\n  }\n\n  cleanModal = () => {\n    runInAction(() => {\n      this.modalOpen = false;\n    });\n  };\n\n  handleFormCancel = form => {\n    form.clear();\n    this.cleanModal();\n  };\n\n  handleFormError = (_form, _errors) => {};\n\n  handleFormSubmission = async form => {\n    try {\n      const studyValues = form.values();\n      const categoryId = studyValues.categoryId; // Type here is the category id\n      const categoryName = (getCategoryById(categoryId) || {}).name;\n      const studiesStore = this.getStudiesStore(categoryId);\n\n      delete studyValues.categoryId;\n\n      // Create study, clear form, and close modal\n      await studiesStore.createStudy({ ...studyValues, category: categoryName }); // TODO the backend should really accept category id not the category name\n      form.clear();\n      this.cleanModal();\n    } catch (error) {\n      displayError(error);\n    }\n  };\n\n  render() {\n    return (\n      <Modal closeIcon trigger={this.renderTrigger()} open={this.modalOpen} onClose={this.cleanModal}>\n        <div className=\"mt2\">\n          <Header as=\"h3\" icon textAlign=\"center\" className=\"mt3\" color=\"grey\">\n            Create Study\n          </Header>\n          <div className=\"mx3\">{this.renderCreateStudyForm()}</div>\n        </div>\n      </Modal>\n    );\n  }\n\n  renderTrigger() {\n    return (\n      <Button\n        floated=\"right\"\n        color=\"blue\"\n        onClick={action(() => {\n          this.modalOpen = true;\n        })}\n      >\n        Create Study\n      </Button>\n    );\n  }\n\n  renderCreateStudyForm() {\n    const form = this.form;\n    const projectIds = this.props.userStore.projectIdDropdown;\n\n    return (\n      <Segment clearing className=\"p3 mb3\">\n        <Form form={form} onCancel={this.handleFormCancel} onSuccess={this.handleFormSubmission}>\n          {({ processing, /* onSubmit, */ onCancel }) => (\n            <>\n              <Input field={form.$('id')} />\n              <YesNo field={form.$('categoryId')} />\n              <Input field={form.$('name')} />\n              <TextArea field={form.$('description')} />\n              <Dropdown field={form.$('projectId')} options={projectIds} fluid selection />\n\n              <Button className=\"ml2\" floated=\"right\" color=\"blue\" icon disabled={processing} type=\"submit\">\n                Create Study\n              </Button>\n              <Button floated=\"right\" disabled={processing} onClick={onCancel}>\n                Cancel\n              </Button>\n            </>\n          )}\n        </Form>\n      </Segment>\n    );\n  }\n}\n\ndecorate(CreateStudy, {\n  form: observable,\n  modalOpen: observable,\n  getStudiesStore: observable,\n  cleanModal: action,\n  handleFormSubmission: action,\n});\n\nexport default inject('userStore', 'studiesStoresMap')(observer(CreateStudy));\n"],"file":"CreateStudy.js"}