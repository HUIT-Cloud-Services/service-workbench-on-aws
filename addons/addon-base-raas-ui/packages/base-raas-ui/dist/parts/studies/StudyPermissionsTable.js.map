{"version":3,"sources":["../../../src/parts/studies/StudyPermissionsTable.js"],"names":["StudyPermissionsTable","props","enableEditMode","permissionsStore","studyPermissions","userTypes","forEach","userType","selectedUserIds","editModeOn","resetForm","isProcessing","submitUpdate","update","study","getPermissionsStore","currUser","userStore","user","usersStore","load","startHeartbeat","stopHeartbeat","content","error","renderTable","isEditable","adminUsers","some","uid","map","uids","userIdentifiers","_","users","asUserObjects","textTransform","renderUsersDropdown","dropdownOnChange","_event","data","value","asDropDownOptions","React","Component","observable","action"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { action, decorate, observable, runInAction } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport { Button, Dimmer, Dropdown, Loader, Icon, Table } from 'semantic-ui-react';\n\nimport { displayError, displaySuccess } from '@aws-ee/base-ui/dist/helpers/notification';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { isStoreError, isStoreLoading, isStoreNew } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport BasicProgressPlaceholder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport UserLabels from '@aws-ee/base-ui/dist/parts/helpers/UserLabels';\n\n// expected props\n// - study\n// - userStore (via injection)\n// - usersStore (via injection)\nclass StudyPermissionsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.permissionsStore = props.study.getPermissionsStore();\n      this.currUser = props.userStore.user;\n      this.usersStore = props.usersStore;\n\n      this.resetForm();\n    });\n  }\n\n  componentDidMount() {\n    swallowError(this.permissionsStore.load());\n    this.permissionsStore.startHeartbeat();\n  }\n\n  componentWillUnmount() {\n    this.permissionsStore.stopHeartbeat();\n  }\n\n  enableEditMode = () => {\n    // Set users who currently have permission to the study as the selected users\n    this.permissionsStore.studyPermissions.userTypes.forEach(userType => {\n      this.selectedUserIds[userType] = this.permissionsStore.studyPermissions[`${userType}Users`];\n    });\n\n    // Show edit dropdowns via observable\n    this.editModeOn = true;\n  };\n\n  resetForm = () => {\n    this.editModeOn = false;\n    this.isProcessing = false;\n    this.selectedUserIds = {};\n  };\n\n  submitUpdate = async () => {\n    runInAction(() => {\n      this.isProcessing = true;\n    });\n\n    // Perform update\n    try {\n      await this.permissionsStore.update(this.selectedUserIds);\n      displaySuccess('Update Succeeded');\n      runInAction(() => {\n        this.resetForm();\n      });\n    } catch (error) {\n      displayError('Update Failed', error);\n      runInAction(() => {\n        this.isProcessing = false;\n      });\n    }\n  };\n\n  render() {\n    // Render loading, error, or permissions table\n    let content;\n    if (isStoreError(this.permissionsStore)) {\n      content = <ErrorBox error={this.permissionsStore.error} className=\"mt0\" />;\n    } else if (isStoreLoading(this.permissionsStore) || isStoreNew(this.permissionsStore)) {\n      content = <BasicProgressPlaceholder segmentCount={1} />;\n    } else {\n      content = this.renderTable();\n    }\n\n    return content;\n  }\n\n  renderTable() {\n    const studyPermissions = this.permissionsStore.studyPermissions;\n    const isEditable = studyPermissions.adminUsers.some(uid => uid === this.currUser.uid);\n\n    return (\n      <>\n        <Dimmer.Dimmable dimmed={this.isProcessing}>\n          <Dimmer active={this.isProcessing} inverted>\n            <Loader size=\"big\" />\n          </Dimmer>\n          <Table striped className=\"mt0\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width={2}>Permission Level</Table.HeaderCell>\n                <Table.HeaderCell>\n                  Users\n                  {isEditable && !this.editModeOn && (\n                    <Icon name=\"pencil\" className=\"ml1 cursor-pointer\" color=\"grey\" onClick={this.enableEditMode} />\n                  )}\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              {this.permissionsStore.studyPermissions.userTypes.map(userType => {\n                const uids = studyPermissions[`${userType}Users`];\n                const userIdentifiers = _.map(uids, uid => ({ uid }));\n                const users = this.usersStore.asUserObjects(userIdentifiers);\n                return (\n                  <Table.Row key={userType}>\n                    <Table.Cell style={{ textTransform: 'capitalize' }}>{userType}</Table.Cell>\n                    <Table.Cell>\n                      {this.editModeOn ? this.renderUsersDropdown(userType) : <UserLabels users={users} />}\n                    </Table.Cell>\n                  </Table.Row>\n                );\n              })}\n            </Table.Body>\n          </Table>\n\n          {this.editModeOn && (\n            <>\n              <Button\n                floated=\"right\"\n                disabled={this.isProcessing}\n                onClick={this.submitUpdate}\n                size=\"mini\"\n                color=\"blue\"\n                icon\n              >\n                Submit\n              </Button>\n\n              <Button floated=\"right\" disabled={this.isProcessing} onClick={this.resetForm} size=\"mini\">\n                Cancel\n              </Button>\n            </>\n          )}\n        </Dimmer.Dimmable>\n      </>\n    );\n  }\n\n  renderUsersDropdown(userType) {\n    const dropdownOnChange = action((_event, data) => {\n      this.selectedUserIds[userType] = data.value;\n    });\n\n    return (\n      <Dropdown\n        selection\n        fluid\n        multiple\n        search\n        options={this.usersStore.asDropDownOptions()}\n        value={this.selectedUserIds[userType]}\n        placeholder=\"Select users\"\n        onChange={dropdownOnChange}\n      />\n    );\n  }\n}\n\ndecorate(StudyPermissionsTable, {\n  editModeOn: observable,\n  isProcessing: observable,\n  selectedUserIds: observable,\n\n  enableEditMode: action,\n  resetForm: action,\n  submitUpdate: action,\n});\nexport default inject('userStore', 'usersStore')(observer(StudyPermissionsTable));\n"],"file":"StudyPermissionsTable.js"}