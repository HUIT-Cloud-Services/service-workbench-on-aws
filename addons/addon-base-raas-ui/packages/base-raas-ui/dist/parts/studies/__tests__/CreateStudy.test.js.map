{"version":3,"sources":["../../../../src/parts/studies/__tests__/CreateStudy.test.js"],"names":["jest","mock","displayErrorMock","require","userStore","asDropDownOptions","key","value","text","projectIdDropdown","studiesStore","createStudy","fn","studiesStoresMap","describe","component","wrapper","beforeEach","instance","displayError","err","it","form","values","categoryId","clear","handleFormSubmission","expect","toHaveBeenCalledWith","category","toHaveBeenCalled","hasAssertions","message","toEqual"],"mappings":";;AAeA;;AACA;;AACA;;;;;;;;AAEAA,IAAI,CAACC,IAAL,CAAU,2CAAV;;AACA,IAAMC,gBAAgB,GAAGC,OAAO,CAAC,2CAAD,CAAhC;;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,iBAAiB,EAAE;AAAA,WAAM,CACvB;AACEC,MAAAA,GAAG,EAAE,SADP;AAEEC,MAAAA,KAAK,EAAE,SAFT;AAGEC,MAAAA,IAAI,EAAE;AAHR,KADuB,CAAN;AAAA,GADH;AAQhBC,EAAAA,iBAAiB,EAAE,CAAC,OAAD,EAAU,OAAV;AARH,CAAlB;AAWA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAEX,IAAI,CAACY,EAAL;AADM,CAArB;AAIA,IAAMC,gBAAgB,GAAG;AACvB,gBAAcH,YADS;AAEvB,eAAaA,YAFU;AAGvB,kBAAgBA;AAHO,CAAzB;AAMAI,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC5B,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,OAAO,GAAG,IAAd;AACAC,EAAAA,UAAU,CAAC,YAAM;AACf;AACAD,IAAAA,OAAO,GAAG,mCAAQ,gCAAC,uBAAD,CAAa,gBAAb;AAA8B,MAAA,SAAS,EAAEZ,SAAzC;AAAoD,MAAA,gBAAgB,EAAES;AAAtE,MAAR,CAAV,CAFe,CAIf;;AACAE,IAAAA,SAAS,GAAGC,OAAO,CAACE,QAAR,EAAZ,CALe,CAOf;;AACAhB,IAAAA,gBAAgB,CAACiB,YAAjB,GAAgCnB,IAAI,CAACY,EAAL,CAAQ,UAAAQ,GAAG,EAAI;AAC7C,YAAMA,GAAN;AACD,KAF+B,CAAhC;AAGD,GAXS,CAAV;AAaAC,EAAAA,EAAE,CAAC,kDAAD,uEAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AACrD;AACMC,YAAAA,IAF+C,GAExC;AACXC,cAAAA,MADW,oBACF;AACP,uBAAO;AACLC,kBAAAA,UAAU,EAAE;AADP,iBAAP;AAGD,eALU;AAMXC,cAAAA,KAAK,EAAEzB,IAAI,CAACY,EAAL;AANI,aAFwC,EAWrD;;AAXqD;AAAA,mBAY/CG,SAAS,CAACW,oBAAV,CAA+BJ,IAA/B,CAZ+C;;AAAA;AAcrD;AACAK,YAAAA,MAAM,CAACjB,YAAY,CAACC,WAAd,CAAN,CAAiCiB,oBAAjC,CAAsD;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aAAtD;AACAF,YAAAA,MAAM,CAACL,IAAI,CAACG,KAAN,CAAN,CAAmBK,gBAAnB;;AAhBqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArD,GAAF;AAmBAT,EAAAA,EAAE,CAAC,uDAAD,uEAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1D;AACMC,YAAAA,IAFoD,GAE7C;AACXC,cAAAA,MADW,oBACF;AACP,uBAAO,EAAP;AACD,eAHU;AAIXE,cAAAA,KAAK,EAAEzB,IAAI,CAACY,EAAL;AAJI,aAF6C,EAS1D;;AAT0D;AAAA;AAAA,mBAWlDG,SAAS,CAACW,oBAAV,CAA+BJ,IAA/B,CAXkD;;AAAA;AAYxDK,YAAAA,MAAM,CAACI,aAAP;AAZwD;AAAA;;AAAA;AAAA;AAAA;AAcxDJ,YAAAA,MAAM,CAACzB,gBAAgB,CAACiB,YAAlB,CAAN,CAAsCW,gBAAtC;AACAH,YAAAA,MAAM,CAAC,aAAIK,OAAL,CAAN,CAAoBC,OAApB,CAA4B,iDAA5B;;AAfwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1D,GAAF;AAkBD,CArDO,CAAR","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport CreateStudy from '../CreateStudy';\n\njest.mock('@aws-ee/base-ui/dist/helpers/notification');\nconst displayErrorMock = require('@aws-ee/base-ui/dist/helpers/notification');\n\nconst userStore = {\n  asDropDownOptions: () => [\n    {\n      key: 'userABC',\n      value: 'userABC',\n      text: 'Dr. John Doe',\n    },\n  ],\n  projectIdDropdown: ['proj1', 'proj2'],\n};\n\nconst studiesStore = {\n  createStudy: jest.fn(),\n};\n\nconst studiesStoresMap = {\n  'my-studies': studiesStore,\n  'open-data': studiesStore,\n  'organization': studiesStore,\n};\n\ndescribe('CreateStudy', () => {\n  let component = null;\n  let wrapper = null;\n  beforeEach(() => {\n    // Render component\n    wrapper = shallow(<CreateStudy.wrappedComponent userStore={userStore} studiesStoresMap={studiesStoresMap} />);\n\n    // Get instance of the component\n    component = wrapper.instance();\n\n    // mock displayError because toastr cant function properly in a wrappedComponent setting\n    displayErrorMock.displayError = jest.fn(err => {\n      throw err;\n    });\n  });\n\n  it('should try to create a study based on form input', async () => {\n    // BUILD\n    const form = {\n      values() {\n        return {\n          categoryId: 'my-studies',\n        };\n      },\n      clear: jest.fn(),\n    };\n\n    // OPERATE\n    await component.handleFormSubmission(form);\n\n    // CHECK\n    expect(studiesStore.createStudy).toHaveBeenCalledWith({ category: 'My Studies' });\n    expect(form.clear).toHaveBeenCalled();\n  });\n\n  it('should fail if the categoryId is not valid or missing', async () => {\n    // BUILD\n    const form = {\n      values() {\n        return {};\n      },\n      clear: jest.fn(),\n    };\n\n    // OPERATE\n    try {\n      await component.handleFormSubmission(form);\n      expect.hasAssertions();\n    } catch (err) {\n      expect(displayErrorMock.displayError).toHaveBeenCalled();\n      expect(err.message).toEqual(\"Cannot read property 'createStudy' of undefined\");\n    }\n  });\n});\n"],"file":"CreateStudy.test.js"}