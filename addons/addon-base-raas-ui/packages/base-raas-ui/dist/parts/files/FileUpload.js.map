{"version":3,"sources":["../../../src/parts/files/FileUpload.js"],"names":["FileUpload","files","state","onCancelSelectFiles","onCancelUpload","onClickStartUpload","onClickUploadMore","onSelectFiles","onClickRemoveFile","onClickCancelFile","length","propTypes","PropTypes","arrayOf","shape","name","string","isRequired","size","number","status","oneOf","uploaded","error","func","ConnectedFileUpload","props","handleResetFileUploadGroup","fileUploadsStore","resetFileUploadGroup","resourceId","fileUploadGroup","getFileUploadGroup","handleCancel","cancel","handleStart","group","start","fileUploadHandler","success","errors","fileUploadObjects","forEach","fileUpload","handleCancelFileUpload","id","getFileUpload","doCancel","handleRemoveFileUpload","remove","handleSelectFiles","file","add","prevProps","React","Component","MobXPropTypes","observableObject","observable"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { decorate, observable, runInAction } from 'mobx';\nimport { inject, observer, PropTypes as MobXPropTypes } from 'mobx-react';\nimport PropTypes from 'prop-types';\n\nimport React from 'react';\nimport { Button, Grid, Header, Segment } from 'semantic-ui-react';\n\nimport { displayError, displaySuccess, displayWarning } from '@aws-ee/base-ui/dist/helpers/notification';\n\nimport StudyFileDropZone from './FileDropZone';\nimport FileUploadTable from './FileUploadTable';\n\nconst FileUpload = observer(\n  ({\n    files = [],\n    state = 'PENDING',\n    onCancelSelectFiles,\n    onCancelUpload,\n    onClickStartUpload,\n    onClickUploadMore,\n    onSelectFiles,\n    onClickRemoveFile,\n    onClickCancelFile,\n  }) => {\n    return (\n      <Segment vertical>\n        <Header as=\"h3\">Upload Files</Header>\n        <StudyFileDropZone state={state} onSelectFiles={onSelectFiles} />\n        {files.length > 0 && (\n          <Segment>\n            <Grid>\n              <Grid.Row>\n                <Grid.Column>\n                  <FileUploadTable\n                    files={files}\n                    state={state}\n                    onClickRemoveFile={onClickRemoveFile}\n                    onClickCancelFile={onClickCancelFile}\n                  />\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column>\n                  {state === 'PENDING' ? (\n                    <Button floated=\"right\" basic color=\"blue\" onClick={onClickStartUpload}>\n                      Upload Files\n                    </Button>\n                  ) : state === 'UPLOADING' ? (\n                    <Button floated=\"right\" basic color=\"blue\" loading disabled>\n                      Uploading\n                    </Button>\n                  ) : state === 'COMPLETE' ? (\n                    <Button floated=\"right\" basic color=\"blue\" onClick={onClickUploadMore}>\n                      Upload More Files\n                    </Button>\n                  ) : null}\n                  {state === 'PENDING' ? (\n                    <Button floated=\"right\" basic onClick={onCancelSelectFiles}>\n                      Cancel\n                    </Button>\n                  ) : state === 'UPLOADING' ? (\n                    <Button floated=\"right\" basic onClick={onCancelUpload}>\n                      Cancel\n                    </Button>\n                  ) : null}\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Segment>\n        )}\n      </Segment>\n    );\n  },\n);\nFileUpload.propTypes = {\n  files: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      size: PropTypes.number.isRequired,\n      status: PropTypes.oneOf(['PENDING', 'UPLOADING', 'COMPLETE', 'FAILED']).isRequired,\n      uploaded: PropTypes.number,\n      error: PropTypes.string,\n    }),\n  ),\n  state: PropTypes.oneOf(['PENDING', 'UPLOADING', 'COMPLETE']).isRequired,\n  onCancelSelectFiles: PropTypes.func,\n  onCancelUpload: PropTypes.func,\n  onClickStartUpload: PropTypes.func,\n  onClickUploadMore: PropTypes.func,\n  onSelectFiles: PropTypes.func,\n  onClickRemoveFile: PropTypes.func,\n  onClickCancelFile: PropTypes.func,\n};\n\nclass ConnectedFileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.fileUploadGroup = props.fileUploadsStore.getFileUploadGroup(this.props.resourceId);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.resourceId !== this.props.resourceId) {\n      runInAction(() => {\n        this.fileUploadGroup = this.props.fileUploadsStore.getFileUploadGroup(this.props.resourceId);\n      });\n    }\n  }\n\n  handleResetFileUploadGroup = () => {\n    runInAction(() => {\n      this.props.fileUploadsStore.resetFileUploadGroup(this.props.resourceId);\n      this.fileUploadGroup = this.props.fileUploadsStore.getFileUploadGroup(this.props.resourceId);\n    });\n  };\n\n  handleCancel = () => {\n    this.fileUploadGroup.cancel();\n  };\n\n  handleStart = async () => {\n    const group = this.fileUploadGroup;\n    try {\n      await group.start(this.props.fileUploadHandler);\n      let success = 0;\n      let errors = 0;\n      group.fileUploadObjects.forEach(fileUpload => {\n        // eslint-disable-next-line default-case\n        switch (fileUpload.status) {\n          case 'COMPLETE':\n            success++;\n            break;\n          case 'FAILED':\n            if (fileUpload.error !== 'Cancelled') {\n              errors++;\n            }\n            break;\n        }\n      });\n      if (errors > 0 && success > 0) {\n        displayWarning(`File uploads completed with ${errors} errors`);\n      } else if (errors > 0) {\n        displayError(`File uploads failed`);\n      } else if (success > 0) {\n        displaySuccess(`File uploads completed successfully!`);\n      }\n    } catch (err) {\n      displayError(`File uploads failed: ${err}`);\n    }\n  };\n\n  handleCancelFileUpload = id => {\n    const fileUpload = this.fileUploadGroup.getFileUpload(id);\n    if (fileUpload) {\n      fileUpload.doCancel();\n    }\n  };\n\n  handleRemoveFileUpload = id => {\n    this.fileUploadGroup.remove(id);\n  };\n\n  handleSelectFiles = files => {\n    const group = this.fileUploadGroup;\n    files.forEach(file => {\n      group.add({ file });\n    });\n  };\n\n  render() {\n    return (\n      <FileUpload\n        files={this.fileUploadGroup.fileUploadObjects}\n        state={this.fileUploadGroup.state}\n        onCancelSelectFiles={this.handleResetFileUploadGroup}\n        onCancelUpload={this.handleCancel}\n        onClickStartUpload={this.handleStart}\n        onClickUploadMore={this.handleResetFileUploadGroup}\n        onSelectFiles={this.handleSelectFiles}\n        onClickRemoveFile={this.handleRemoveFileUpload}\n        onClickCancelFile={this.handleCancelFileUpload}\n      />\n    );\n  }\n}\nConnectedFileUpload.propTypes = {\n  resourceId: PropTypes.string.isRequired,\n  fileUploadHandler: PropTypes.func.isRequired,\n  fileUploadsStore: MobXPropTypes.observableObject.isRequired,\n};\n\ndecorate(ConnectedFileUpload, {\n  fileUploadGroup: observable,\n});\nexport default inject('fileUploadsStore')(observer(ConnectedFileUpload));\n"],"file":"FileUpload.js"}