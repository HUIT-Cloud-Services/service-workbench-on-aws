{"version":3,"sources":["../../../src/parts/accounts/AddIndex.js"],"names":["AddIndex","props","handleRoleChange","e","value","setState","role","handleStatusChange","status","handleAwsAccountSelection","awsAccountId","handleCancel","event","preventDefault","stopPropagation","formProcessing","handleSubmit","index","state","addIndexFormFields","validationResult","fails","validationErrors","errors","indexesStore","addIndex","Map","form","pathname","location","link","history","push","renderAddIndexForm","processing","fields","toEditableInput","attributeName","type","handleChange","target","placeholder","renderField","renderAwsAccountSelection","renderButtons","awsAccountIdOption","awsAccountsStore","dropdownOptions","name","component","explain","label","hasExplain","_","isEmpty","fieldErrors","get","hasError","map","fieldError","usersStore","React","Component","observable","user"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { decorate, observable, action, runInAction } from 'mobx';\nimport { Button, Dimmer, Header, List, Loader, Dropdown, Segment } from 'semantic-ui-react';\nimport _ from 'lodash';\n\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport { createLink } from '@aws-ee/base-ui/dist/helpers/routing';\nimport validate from '@aws-ee/base-ui/dist/models/forms/Validate';\n\nimport { getAddIndexForm, getAddIndexFormFields } from '../../models/forms/AddIndexForm';\n\nclass AddIndex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // eslint-disable-next-line react/no-unused-state\n      role: 'guest',\n      // eslint-disable-next-line react/no-unused-state\n      status: 'active',\n      awsAccountId: '',\n    };\n\n    runInAction(() => {\n      this.formProcessing = false;\n      this.validationErrors = new Map();\n      this.index = {};\n    });\n    this.form = getAddIndexForm();\n    this.addIndexFormFields = getAddIndexFormFields();\n  }\n\n  goto(pathname) {\n    const location = this.props.location;\n    const link = createLink({ location, pathname });\n    this.props.history.push(link);\n  }\n\n  render() {\n    return (\n      <div className=\"mt2 animated fadeIn\">\n        <Header as=\"h2\" icon textAlign=\"center\" className=\"mt3\" color=\"grey\">\n          Add Index\n        </Header>\n        <div className=\"mt3 ml3 mr3 animated fadeIn\">{this.renderAddIndexForm()}</div>\n      </div>\n    );\n  }\n\n  // eslint-disable-next-line react/no-unused-state\n  handleRoleChange = (e, { value }) => this.setState({ role: value });\n\n  // eslint-disable-next-line react/no-unused-state\n  handleStatusChange = (e, { value }) => this.setState({ status: value });\n\n  renderAddIndexForm() {\n    const processing = this.formProcessing;\n    const fields = this.addIndexFormFields;\n    const toEditableInput = (attributeName, type = 'text') => {\n      const handleChange = action(event => {\n        event.preventDefault();\n        this.index[attributeName] = event.target.value;\n      });\n      return (\n        <div className=\"ui focus input\">\n          <input\n            type={type}\n            defaultValue={this.index[attributeName]}\n            placeholder={fields[attributeName].placeholder || ''}\n            onChange={handleChange}\n          />\n        </div>\n      );\n    };\n\n    return (\n      <Segment basic className=\"ui fluid form\">\n        <Dimmer active={processing} inverted>\n          <Loader inverted>Checking</Loader>\n        </Dimmer>\n        {this.renderField('id', toEditableInput('id', 'id'))}\n        <div className=\"mb4\" />\n        {this.renderField('awsAccountId')}\n        {this.renderAwsAccountSelection()}\n        <div className=\"mb4\" />\n        {this.renderField('description', toEditableInput('description', 'description'))}\n        {this.renderButtons()}\n      </Segment>\n    );\n  }\n\n  renderButtons() {\n    const processing = this.formProcessing;\n    return (\n      <div className=\"mt3\">\n        <Button floated=\"right\" color=\"blue\" icon disabled={processing} className=\"ml2\" onClick={this.handleSubmit}>\n          Add Index\n        </Button>\n        <Button floated=\"right\" disabled={processing} onClick={this.handleCancel}>\n          Cancel\n        </Button>\n      </div>\n    );\n  }\n\n  renderAwsAccountSelection() {\n    const awsAccountIdOption = this.props.awsAccountsStore.dropdownOptions;\n    return (\n      <Dropdown\n        options={awsAccountIdOption}\n        placeholder=\"Please select an AWS Account\"\n        fluid\n        selection\n        onChange={this.handleAwsAccountSelection}\n      />\n    );\n  }\n\n  handleAwsAccountSelection = (e, { value }) => this.setState({ awsAccountId: value });\n\n  renderField(name, component) {\n    const fields = this.addIndexFormFields;\n    const explain = fields[name].explain;\n    const label = fields[name].label;\n    const hasExplain = !_.isEmpty(explain);\n    const fieldErrors = this.validationErrors.get(name);\n    const hasError = !_.isEmpty(fieldErrors);\n\n    return (\n      <div>\n        <Header className=\"mr3 mt0\" as=\"h2\" color=\"grey\">\n          {label}\n        </Header>\n        {hasExplain && <div className=\"mb2\">{explain}</div>}\n        <div className={`ui big field input block m0 ${hasError ? 'error' : ''}`}>{component}</div>\n        {hasError && (\n          <div className=\"ui pointing red basic label\">\n            <List>\n              {_.map(fieldErrors, fieldError => (\n                <List.Item key={name}>\n                  <List.Content>{fieldError}</List.Content>\n                </List.Item>\n              ))}\n            </List>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  handleCancel = action(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.formProcessing = false;\n    this.goto('/accounts');\n  });\n\n  handleSubmit = action(async () => {\n    this.formProcessing = true;\n    try {\n      // Perform client side validations first\n      this.index.awsAccountId = this.state.awsAccountId;\n      const validationResult = await validate(this.index, this.addIndexFormFields);\n      // if there are any client side validation errors then do not attempt to make API call\n      if (validationResult.fails()) {\n        runInAction(() => {\n          this.validationErrors = validationResult.errors;\n          this.formProcessing = false;\n        });\n      } else {\n        // There are no client side validation errors so ask the store to add user (which will make API call to server to add the user)\n        await this.props.indexesStore.addIndex(this.index);\n        runInAction(() => {\n          this.formProcessing = false;\n        });\n        this.goto('/accounts');\n      }\n    } catch (error) {\n      runInAction(() => {\n        this.formProcessing = false;\n      });\n      displayError(error);\n    }\n  });\n\n  getStore() {\n    return this.props.usersStore;\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(AddIndex, {\n  formProcessing: observable,\n  user: observable,\n  validationErrors: observable,\n});\nexport default inject('usersStore', 'indexesStore', 'awsAccountsStore')(withRouter(observer(AddIndex)));\n"],"file":"AddIndex.js"}