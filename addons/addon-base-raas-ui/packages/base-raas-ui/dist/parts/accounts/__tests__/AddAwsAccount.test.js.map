{"version":3,"sources":["../../../../src/parts/accounts/__tests__/AddAwsAccount.test.js"],"names":["usersStore","asDropDownOptions","key","value","text","awsAccountsStore","addAwsAccount","jest","fn","dropdownOptions","describe","component","wrapper","beforeEach","instance","it","awsAccount","name","accountId","roleArn","externalId","description","vpcId","subnetId","encryptionKeyArn","xAccEnvMgmtRoleArn","handleSubmit","expect","toHaveBeenCalledWith","not","toHaveBeenCalled","validationErrors","errors","toBeDefined","fieldsWithError","Object","keys","toEqual","arrayContaining"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport AddAwsAccount from '../AddAwsAccount';\n\nconst usersStore = {\n  asDropDownOptions: () => [\n    {\n      key: 'userABC',\n      value: 'userABC',\n      text: 'Dr. John Doe',\n    },\n  ],\n};\n\nconst awsAccountsStore = {\n  addAwsAccount: jest.fn(),\n  dropdownOptions: [\n    {\n      key: '1',\n      value: '123',\n      text: 'Index 123',\n    },\n  ],\n};\n\ndescribe('AddAwsAccount', () => {\n  let component = null;\n  let wrapper = null;\n\n  beforeEach(() => {\n    // Render AddIndex component\n    wrapper = shallow(<AddAwsAccount.WrappedComponent usersStore={usersStore} awsAccountsStore={awsAccountsStore} />);\n\n    // Get instance of the component\n    component = wrapper.instance();\n\n    // Mock goto function\n    component.goto = jest.fn();\n    awsAccountsStore.addAwsAccount = jest.fn();\n  });\n\n  it('should create an AWS account if all information is provided', async () => {\n    // Set all fields to valid values\n    component.awsAccount = {\n      name: 'MyResearchProjectAccount',\n      accountId: '012345678910',\n      roleArn: 'arn:aws:iam/*',\n      externalId: '123',\n      description: 'This is my research project account',\n      vpcId: 'vpc-abc-123456',\n      subnetId: 'vpc-abc-subnet-123456',\n      encryptionKeyArn: 'arn:aws:kms/*',\n      xAccEnvMgmtRoleArn: 'example-arn',\n    };\n\n    // Submit form\n    await component.handleSubmit();\n\n    // Verify account gets created\n    expect(awsAccountsStore.addAwsAccount).toHaveBeenCalledWith(component.awsAccount);\n    // And user gets redirected to the accounts page\n    expect(component.goto).toHaveBeenCalledWith('/accounts');\n  });\n\n  it('should not create an account if required fields are not provided', async () => {\n    // Set invalid values (i.e. user leaves the form empty)\n    component.awsAccount = {};\n\n    // Submit form\n    await component.handleSubmit();\n\n    // Should not create account and errors should be displayed\n    expect(awsAccountsStore.addAwsAccount).not.toHaveBeenCalled();\n\n    // Verify errors are set\n    expect(component.validationErrors.errors).toBeDefined();\n    const fieldsWithError = Object.keys(component.validationErrors.errors);\n    expect(fieldsWithError).toEqual(\n      expect.arrayContaining([\n        'name',\n        'accountId',\n        'roleArn',\n        'externalId',\n        'description',\n        'vpcId',\n        'subnetId',\n        'encryptionKeyArn',\n      ]),\n    );\n  });\n});\n"],"file":"AddAwsAccount.test.js"}