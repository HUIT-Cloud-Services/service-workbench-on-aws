{"version":3,"sources":["../../../src/parts/data-sources/DataSourceAccountInfo.js"],"names":["DataSourceAccountInfo","props","handleCancel","form","reset","handleSave","account","accountsStore","formData","values","data","id","rev","updateAccount","names","container","_","map","name","$","isDirty","processing","onCancel","dataSourceAccountsStore","React","Component","computed","observable","action"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { decorate, computed, runInAction, observable, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from 'semantic-ui-react';\n\nimport { displaySuccess, displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\nimport Input from '@aws-ee/base-ui/dist/parts/helpers/fields/Input';\nimport TextArea from '@aws-ee/base-ui/dist/parts/helpers/fields/TextArea';\n\nimport { getAccountForm } from '../../models/forms/UpdateRegisteredAccountForm';\n\n// expected props\n// - account (via prop)\n// - dataSourceAccountsStore (via injection)\nclass DataSourceAccountInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.form = getAccountForm(props.account);\n    });\n  }\n\n  get account() {\n    return this.props.account;\n  }\n\n  get accountsStore() {\n    return this.props.dataSourceAccountsStore;\n  }\n\n  getFields(names, container) {\n    const form = container || this.form;\n    return _.map(names, name => form.$(name));\n  }\n\n  handleCancel = () => {\n    this.form.reset();\n  };\n\n  handleSave = async form => {\n    const account = this.account;\n    const accountsStore = this.accountsStore;\n    const formData = form.values();\n\n    const data = { ...formData, id: account.id, rev: account.rev };\n    try {\n      await accountsStore.updateAccount(data);\n      runInAction(() => {\n        this.form = getAccountForm(data);\n      });\n      displaySuccess('Account information updated successfully');\n    } catch (error) {\n      displayError(error);\n    }\n  };\n\n  render() {\n    const form = this.form;\n    const isDirty = form.isDirty;\n\n    return (\n      <div className=\"animated fadeIn mb3 mt3\">\n        <Form form={form} onCancel={this.handleCancel} onSuccess={this.handleSave}>\n          {({ processing, /* onSubmit, */ onCancel }) => (\n            <>\n              <Input field={form.$('name')} className=\"mb3\" />\n              <TextArea field={form.$('contactInfo')} className=\"mb3\" />\n              <TextArea field={form.$('description')} className=\"mb3\" />\n\n              <Button\n                floated=\"right\"\n                className=\"ml2\"\n                primary\n                content=\"Save\"\n                disabled={processing || !isDirty}\n                type=\"submit\"\n              />\n              <Button\n                floated=\"right\"\n                className=\"ml2\"\n                content=\"Reset\"\n                disabled={processing || !isDirty}\n                onClick={onCancel}\n              />\n            </>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(DataSourceAccountInfo, {\n  accountsStore: computed,\n  account: computed,\n  form: observable,\n  handleCancel: action,\n});\n\nexport default inject('dataSourceAccountsStore')(withRouter(observer(DataSourceAccountInfo)));\n"],"file":"DataSourceAccountInfo.js"}