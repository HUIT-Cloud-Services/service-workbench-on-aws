{"version":3,"sources":["../../../src/parts/data-sources/DataSourceStudyRow.js"],"names":["DataSourceStudyRow","props","handleExpandClick","event","preventDefault","stopPropagation","expanded","store","studyStore","load","startHeartbeat","handleCheckConnection","connectionPanel","show","study","accountsStore","operation","doWork","checkStudyReachability","id","run","handleDismissPanel","Operation","create","item","category","folder","friendlyAccessType","state","value","text","_","isEmpty","iconName","renderStatus","renderExpanded","classnames","color","display","content","error","renderExpandedContent","showPanel","reachableState","height","renderDetailTablePart1","renderDetailTablePart2","renderDetailTablePart3","renderPermissionsTable","name","statusAt","naIfEmpty","renderRow","key","bucket","projectId","region","bucketRow","description","kmsScope","kmsArn","kms","accessType","myStudies","permissions","adminUsers","readonlyUsers","readwriteUsers","showReadonly","showReadwrite","renderUsersRow","title","userIds","userIdentifiers","map","uid","users","usersStore","asUserObjects","dataSourceAccountsStore","React","Component","computed","action","observable"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { decorate, computed, runInAction, action, observable } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Icon, Table, Label, Grid, Button } from 'semantic-ui-react';\nimport TimeAgo from 'react-timeago';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport UserLabels from '@aws-ee/base-ui/dist/parts/helpers/UserLabels';\nimport { isStoreReady, isStoreLoading, isStoreError, stopHeartbeat } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport ProgressPlaceHolder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\n\nimport { Operation } from '../../models/helpers/Operation';\nimport StudyConnectionPanel from './parts/StudyConnectionPanel';\nimport StudyStatusMessage from './parts/StudyStatusMessage';\n\n// expected props\n// - study (via prop)\n// - store (via prop) (this the study store)\n// - dataSourceAccountsStore (via injection)\n// - usersStore (via injection)\nclass DataSourceStudyRow extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.expanded = false;\n      this.connectionPanel = {\n        show: false,\n        operation: Operation.create({}),\n      };\n    });\n  }\n\n  componentWillUnmount() {\n    const store = this.studyStore;\n    stopHeartbeat(store);\n  }\n\n  get study() {\n    return this.props.study;\n  }\n\n  get accountsStore() {\n    return this.props.dataSourceAccountsStore;\n  }\n\n  get usersStore() {\n    return this.props.usersStore;\n  }\n\n  get studyStore() {\n    return this.props.store;\n  }\n\n  handleExpandClick = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.expanded = !this.expanded;\n    const store = this.studyStore;\n\n    if (!isStoreReady(store) && this.expanded) {\n      swallowError(store.load());\n      store.startHeartbeat();\n    }\n\n    if (!this.expanded) {\n      stopHeartbeat(store);\n    }\n  };\n\n  handleCheckConnection = () => {\n    this.connectionPanel.show = true;\n\n    const study = this.study;\n    const accountsStore = this.accountsStore;\n    const operation = this.connectionPanel.operation;\n    const doWork = async () => {\n      await accountsStore.checkStudyReachability(study.id);\n    };\n\n    swallowError(operation.run(doWork));\n  };\n\n  handleDismissPanel = () => {\n    this.connectionPanel.show = false;\n  };\n\n  render() {\n    const expanded = this.expanded;\n    const item = this.study;\n    const { id, category, folder, friendlyAccessType, state } = item;\n    const value = text => <span>{_.isEmpty(text) ? 'Not Provided' : text}</span>;\n    const iconName = expanded ? 'angle down' : 'angle right';\n\n    return (\n      <>\n        <Table.Row className=\"cursor-pointer\" onClick={this.handleExpandClick}>\n          <Table.Cell collapsing>\n            <Icon name={iconName} />\n          </Table.Cell>\n          <Table.Cell className=\"breakout\">{value(id)}</Table.Cell>\n          <Table.Cell className=\"breakout\">{value(folder)}</Table.Cell>\n          <Table.Cell className=\"nowrap\">{value(category)}</Table.Cell>\n          <Table.Cell className=\"nowrap\">{value(friendlyAccessType)}</Table.Cell>\n          <Table.Cell>{this.renderStatus(state)}</Table.Cell>\n        </Table.Row>\n        {expanded && (\n          <Table.Row className=\"animated fadeIn\">\n            <Table.Cell colSpan=\"6\">{this.renderExpanded()}</Table.Cell>\n          </Table.Row>\n        )}\n      </>\n    );\n  }\n\n  renderStatus(state, classnames) {\n    return (\n      <div className={classnames}>\n        <Label size=\"mini\" color={state.color}>\n          {state.display}\n        </Label>\n      </div>\n    );\n  }\n\n  renderExpanded() {\n    const store = this.studyStore;\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} className=\"p0\" />;\n    } else if (isStoreLoading(store)) {\n      content = <ProgressPlaceHolder segmentCount={1} />;\n    } else {\n      content = this.renderExpandedContent();\n    }\n\n    return content;\n  }\n\n  renderExpandedContent() {\n    const study = this.study;\n    const operation = this.connectionPanel.operation;\n    const showPanel = this.connectionPanel.show;\n\n    return (\n      <div className=\"mb2 animated fadeIn\">\n        <div className=\"clearfix\">\n          <Button size=\"mini\" floated=\"right\" basic color=\"brown\" onClick={this.handleCheckConnection}>\n            Test Connection\n          </Button>\n        </div>\n        {!study.reachableState && !showPanel && <StudyStatusMessage study={study} />}\n        {showPanel && <StudyConnectionPanel study={study} operation={operation} onCancel={this.handleDismissPanel} />}\n        <div className=\"p1\" style={{ height: '1px' }} />\n        <Grid stackable columns={2} className=\"block\">\n          <Grid.Column>{this.renderDetailTablePart1()}</Grid.Column>\n          <Grid.Column>{this.renderDetailTablePart2()}</Grid.Column>\n        </Grid>\n        {this.renderDetailTablePart3()}\n        {this.renderPermissionsTable()}\n      </div>\n    );\n  }\n\n  renderDetailTablePart1() {\n    const store = this.studyStore;\n    const study = store.study;\n    const { id, name, state, statusAt, folder } = study;\n    const naIfEmpty = value => (_.isEmpty(value) ? 'N/A' : value);\n    const renderRow = (key, value) => (\n      <Table.Row>\n        <Table.Cell width={2} className=\"nowrap\">\n          {key}\n        </Table.Cell>\n        <Table.Cell width={14} className=\"breakout\">\n          {value}\n        </Table.Cell>\n      </Table.Row>\n    );\n\n    return (\n      <Table definition>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell width={2} className=\"nowrap\">\n              Status\n            </Table.Cell>\n            <Table.Cell width={16} className=\"flex\">\n              {this.renderStatus(state, 'flex-auto mr1')}\n              <span className=\"fs-8 color-grey mr1\">\n                Status checked <TimeAgo date={statusAt} className=\"color-grey fs-8\" />\n              </span>\n            </Table.Cell>\n          </Table.Row>\n\n          {renderRow('ID', id)}\n          {renderRow('Name', naIfEmpty(name))}\n          {renderRow('Path', folder)}\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  renderDetailTablePart2() {\n    const store = this.studyStore;\n    const study = store.study;\n    const { category, friendlyAccessType, bucket, projectId, region } = study;\n    const naIfEmpty = value => (_.isEmpty(value) ? 'N/A' : value);\n    const renderRow = (key, value) => (\n      <Table.Row>\n        <Table.Cell width={2} className=\"nowrap\">\n          {key}\n        </Table.Cell>\n        <Table.Cell width={14} className=\"breakout\">\n          {value}\n        </Table.Cell>\n      </Table.Row>\n    );\n    const bucketRow = (\n      <Table.Row>\n        <Table.Cell width={2} className=\"nowrap\">\n          Bucket\n        </Table.Cell>\n        <Table.Cell width={16} className=\"breakout flex\">\n          <div className=\"breakout flex-auto mr1\">{bucket}</div>\n          <div className=\"fs-9 color-grey nowrap\">{region}</div>\n        </Table.Cell>\n      </Table.Row>\n    );\n\n    return (\n      <Table definition>\n        <Table.Body>\n          {renderRow('Project', naIfEmpty(projectId))}\n          {renderRow('Type', category)}\n          {renderRow('Access', friendlyAccessType)}\n          {bucketRow}\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  renderDetailTablePart3() {\n    const store = this.studyStore;\n    const study = store.study;\n    const { description, kmsScope, kmsArn } = study;\n    const naIfEmpty = value => (_.isEmpty(value) ? 'None' : value);\n    const kms = kmsScope === 'bucket' ? 'Use bucket default encryption' : kmsArn;\n    const renderRow = (key, value) => (\n      <Table.Row>\n        <Table.Cell width={2} className=\"nowrap\">\n          {key}\n        </Table.Cell>\n        <Table.Cell width={14} className=\"breakout\">\n          {value}\n        </Table.Cell>\n      </Table.Row>\n    );\n\n    return (\n      <Table definition>\n        <Table.Body>\n          {renderRow('KMS Arn', naIfEmpty(kms))}\n          {renderRow('Description', naIfEmpty(description))}\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  renderPermissionsTable() {\n    const store = this.studyStore;\n    const study = store.study;\n    const { accessType, myStudies } = study;\n    const { adminUsers = [], readonlyUsers = [], readwriteUsers = [] } = study.permissions || {};\n    const showReadonly = accessType === 'readonly' || accessType === 'readwrite';\n    const showReadwrite = accessType === 'readwrite';\n\n    return (\n      <Table definition>\n        <Table.Body>\n          {this.renderUsersRow('Admin', adminUsers)}\n          {showReadonly && !myStudies && this.renderUsersRow('Read Only', readonlyUsers)}\n          {showReadwrite && !myStudies && this.renderUsersRow('Read & Write', readwriteUsers)}\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  renderUsersRow(title, userIds = []) {\n    const userIdentifiers = _.map(userIds, uid => ({ uid }));\n    const users = this.usersStore.asUserObjects(userIdentifiers);\n\n    return (\n      <Table.Row>\n        <Table.Cell width={2} className=\"nowrap\">\n          {title}\n        </Table.Cell>\n        <Table.Cell width={14} className=\"breakout\">\n          {!_.isEmpty(userIds) && <UserLabels users={users} />}\n          {_.isEmpty(userIds) && <span>None</span>}\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(DataSourceStudyRow, {\n  accountsStore: computed,\n  study: computed,\n  studyStore: computed,\n  usersStore: computed,\n  handleExpandClick: action,\n  handleCheckConnection: action,\n  handleDismissPanel: action,\n  expanded: observable,\n  connectionPanel: observable,\n});\n\nexport default inject('dataSourceAccountsStore', 'usersStore')(withRouter(observer(DataSourceStudyRow)));\n"],"file":"DataSourceStudyRow.js"}