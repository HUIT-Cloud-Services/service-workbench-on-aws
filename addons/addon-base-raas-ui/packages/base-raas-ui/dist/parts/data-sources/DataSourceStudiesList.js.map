{"version":3,"sources":["../../../src/parts/data-sources/DataSourceStudiesList.js"],"names":["DataSourceStudiesList","store","getAccountStore","load","startHeartbeat","accountsStore","account","id","content","error","renderEmpty","renderMain","accountStore","list","studiesList","getStudyStore","study","_","map","item","props","dataSourceAccountsStore","React","Component","computed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { decorate, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Segment, Header, Icon, Table } from 'semantic-ui-react';\n\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport {\n  isStoreReady,\n  isStoreLoading,\n  isStoreEmpty,\n  isStoreNotEmpty,\n  isStoreError,\n  stopHeartbeat,\n} from '@aws-ee/base-ui/dist/models/BaseStore';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport ProgressPlaceHolder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\n\nimport DataSourceStudyRow from './DataSourceStudyRow';\n\n// expected props\n// - account (via prop)\n// - dataSourceAccountsStore (via injection)\nclass DataSourceStudiesList extends React.Component {\n  componentDidMount() {\n    const store = this.getAccountStore();\n    if (!isStoreReady(store)) {\n      swallowError(store.load());\n    }\n    store.startHeartbeat();\n  }\n\n  componentWillUnmount() {\n    const store = this.getAccountStore();\n    stopHeartbeat(store);\n  }\n\n  get account() {\n    return this.props.account;\n  }\n\n  get accountsStore() {\n    return this.props.dataSourceAccountsStore;\n  }\n\n  getAccountStore() {\n    const accountsStore = this.accountsStore;\n    const account = this.account || {};\n    return accountsStore.getAccountStore(account.id);\n  }\n\n  render() {\n    const store = this.getAccountStore();\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} className=\"p0\" />;\n    } else if (isStoreLoading(store)) {\n      content = <ProgressPlaceHolder segmentCount={1} />;\n    } else if (isStoreEmpty(store)) {\n      content = this.renderEmpty();\n    } else if (isStoreNotEmpty(store)) {\n      content = this.renderMain();\n    } else {\n      content = null;\n    }\n\n    return content;\n  }\n\n  renderMain() {\n    const account = this.account;\n    const accountStore = this.getAccountStore();\n    const list = account.studiesList;\n    const getStudyStore = study => accountStore.getStudyStore(study.id);\n\n    return (\n      <div className=\"animated fadeIn\">\n        <Table className=\"mt0\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell />\n              <Table.HeaderCell width={5}>Study Id</Table.HeaderCell>\n              <Table.HeaderCell width={7}>Path</Table.HeaderCell>\n              <Table.HeaderCell width={2}>Type</Table.HeaderCell>\n              <Table.HeaderCell width={1}>Access</Table.HeaderCell>\n              <Table.HeaderCell width={1}>Status</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {_.map(list, item => (\n              <DataSourceStudyRow key={item.id} study={item} store={getStudyStore(item)} />\n            ))}\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <Segment placeholder>\n        <Header icon className=\"color-grey\">\n          <Icon name=\"book\" />\n          No registered studies\n          <Header.Subheader>To add studies, click Register Studies.</Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(DataSourceStudiesList, {\n  accountsStore: computed,\n  account: computed,\n});\n\nexport default inject('dataSourceAccountsStore')(withRouter(observer(DataSourceStudiesList)));\n"],"file":"DataSourceStudiesList.js"}