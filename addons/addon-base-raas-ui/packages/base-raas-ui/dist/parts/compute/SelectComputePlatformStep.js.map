{"version":3,"sources":["../../../src/parts/compute/SelectComputePlatformStep.js"],"names":["SelectComputePlatformStep","props","handleSelectedComputeType","typeId","selectedPlatformId","handlePrevious","event","preventDefault","stopPropagation","_","isFunction","onPrevious","handleNext","onNext","processing","undefined","window","scrollTo","computePlatformsStore","load","pathname","goto","store","content","renderLoadingError","renderEmpty","renderContent","nextDisabled","isUndefined","renderCards","renderButtons","computeTypes","list","isSelected","type","id","getAttrs","attrs","color","onClick","map","title","__html","descHtml","error","userStore","React","Component","action","computed","observable"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { decorate, computed, runInAction, observable, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Icon, Header, Segment, Button, Card, Radio, Divider } from 'semantic-ui-react';\nimport c from 'classnames';\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { isStoreLoading, isStoreError, isStoreEmpty } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport BasicProgressPlaceholder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\n\n// expected props\n// - onPrevious (via props)\n// - onNext (via props) a function is called with the selected computeTypeId\n// - computePlatformsStore (via injection)\n// - userStore (via injection)\nclass SelectComputePlatformStep extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.selectedPlatformId = undefined;\n      this.processing = false;\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    swallowError(this.computePlatformsStore.load());\n  }\n\n  goto(pathname) {\n    const goto = gotoFn(this);\n    goto(pathname);\n  }\n\n  get userStore() {\n    return this.props.userStore;\n  }\n\n  get computePlatformsStore() {\n    return this.props.computePlatformsStore;\n  }\n\n  handleSelectedComputeType = typeId => {\n    this.selectedPlatformId = typeId;\n  };\n\n  handlePrevious = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (_.isFunction(this.props.onPrevious)) this.props.onPrevious();\n  };\n\n  handleNext = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (_.isFunction(this.props.onNext)) {\n      try {\n        this.processing = true;\n        await this.props.onNext(this.selectedPlatformId);\n      } catch (error) {\n        displayError(error);\n      } finally {\n        runInAction(() => {\n          this.processing = false;\n        });\n      }\n    }\n  };\n\n  render() {\n    const store = this.computePlatformsStore;\n    if (!store) return null;\n\n    let content;\n    if (isStoreError(store)) {\n      content = this.renderLoadingError();\n    } else if (isStoreLoading(store)) {\n      content = <BasicProgressPlaceholder className=\"mt2\" />;\n    } else if (isStoreEmpty(store)) {\n      content = this.renderEmpty();\n    } else {\n      content = this.renderContent();\n    }\n\n    return content;\n  }\n\n  renderContent() {\n    // Logic:\n    // - if external researcher and no aws creds configured yet, show a message\n    // - if guest (internal/external) show a message\n    // - if internal researcher and no project ids, show a message\n    // - else show compute types card\n    const nextDisabled = _.isUndefined(this.selectedPlatformId);\n\n    return (\n      <div className=\"mt2 animated fadeIn\">\n        {this.renderCards()}\n        {this.renderButtons({ nextDisabled })}\n      </div>\n    );\n  }\n\n  renderCards() {\n    const processing = this.processing;\n    const computeTypes = this.computePlatformsStore.list || [];\n    const isSelected = type => type.id === this.selectedPlatformId;\n    const getAttrs = type => {\n      const attrs = {};\n      if (isSelected(type)) attrs.color = 'blue';\n      if (!processing) attrs.onClick = () => this.handleSelectedComputeType(type.id);\n      return attrs;\n    };\n\n    return (\n      <Card.Group stackable itemsPerRow={3}>\n        {_.map(computeTypes, type => (\n          <Card key={type.id} raised className={c('mb3', { 'cursor-pointer': !processing })} {...getAttrs(type)}>\n            <Card.Content>\n              <Card.Header>\n                <Radio className=\"mr2\" checked={isSelected(type)} disabled={processing} />\n                {type.title}\n                <Divider />\n              </Card.Header>\n              <Card.Description>\n                <div className=\"mb3 pr1 pl1 pb1\">\n                  {/* Yes, we are doing dangerouslySetInnerHTML, the content was already sanitized by showdownjs */}\n                  {/* eslint-disable-next-line react/no-danger */}\n                  <div dangerouslySetInnerHTML={{ __html: type.descHtml }} />\n                </div>\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        ))}\n      </Card.Group>\n    );\n  }\n\n  renderLoadingError() {\n    const store = this.computePlatformsStore;\n    return (\n      <>\n        <ErrorBox error={store.error} className=\"p0 mt2 mb3\" />\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <>\n        <Segment placeholder className=\"mt2\">\n          <Header icon className=\"color-grey\">\n            <Icon name=\"server\" />\n            No compute platform\n            <Header.Subheader>\n              There are no compute platform to choose from. Your role might be restricted. Please contact your\n              administrator.\n            </Header.Subheader>\n          </Header>\n        </Segment>\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderButtons({ nextDisabled = true } = {}) {\n    const processing = this.processing;\n    return (\n      <div className=\"mt3\">\n        <Button\n          floated=\"right\"\n          icon=\"right arrow\"\n          labelPosition=\"right\"\n          className=\"ml2\"\n          primary\n          content=\"Next\"\n          loading={processing}\n          disabled={nextDisabled || processing}\n          onClick={this.handleNext}\n        />\n        <Button\n          floated=\"right\"\n          icon=\"left arrow\"\n          labelPosition=\"left\"\n          className=\"ml2\"\n          content=\"Previous\"\n          disabled={processing}\n          onClick={this.handlePrevious}\n        />\n      </div>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(SelectComputePlatformStep, {\n  handlePrevious: action,\n  handleNext: action,\n  handleSelectedComputeType: action,\n  userStore: computed,\n  computePlatformsStore: computed,\n  processing: observable,\n  selectedPlatformId: observable,\n});\n\nexport default inject('userStore', 'computePlatformsStore')(withRouter(observer(SelectComputePlatformStep)));\n"],"file":"SelectComputePlatformStep.js"}