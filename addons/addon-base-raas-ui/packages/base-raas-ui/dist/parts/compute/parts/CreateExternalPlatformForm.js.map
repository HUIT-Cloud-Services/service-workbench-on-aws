{"version":3,"sources":["../../../../src/parts/compute/parts/CreateExternalPlatformForm.js"],"names":["CreateExternalPlatformForm","props","handlePrevious","_","isFunction","onPrevious","handleNext","form","data","values","params","platformId","configuration","find","configurations","configurationId","forEach","keys","mutableParams","key","has","askForCredentials","user","userStore","credentials","pick","region","awsRegion","usersStore","setEncryptedCreds","pin","updateUser","adjustedData","omit","onNext","handleForgotPin","event","preventDefault","stopPropagation","addRequired","field","rules","startsWith","set","$","hasCredentials","cidr","defaultCidr","title","renderForm","askForCidr","isUndefined","processing","onCancel","React","Component","observable","computed","action"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { decorate, computed, runInAction, observable, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Segment, Button, Header } from 'semantic-ui-react';\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\nimport Input from '@aws-ee/base-ui/dist/parts/helpers/fields/Input';\nimport TextArea from '@aws-ee/base-ui/dist/parts/helpers/fields/TextArea';\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport { awsRegion } from '@aws-ee/base-ui/dist/helpers/settings';\n\nimport { getCreateExternalPlatformForm } from '../../../models/forms/CreateExternalPlatformForm';\nimport SelectConfigurationCards from './SelectConfigurationCards';\n\n// expected props\n// - onPrevious (via props)\n// - onNext (via props) a function is called with the form data\n// - platformId (via props)\n// - configurations (via props)\n// - title (via props)\n// - defaultCidr (via props)\n// - clientInformationStore (via injection)\n// - userStore (via injection)\n// - usersStore (via injection)\nclass CreateExternalPlatformForm extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.askForCredentials = !this.userStore.user.hasCredentials;\n      this.form = getCreateExternalPlatformForm({\n        askForCredentials: this.askForCredentials,\n        cidr: this.props.defaultCidr,\n      });\n    });\n  }\n\n  get platformId() {\n    return this.props.platformId;\n  }\n\n  get configurations() {\n    return this.props.configurations;\n  }\n\n  get userStore() {\n    return this.props.userStore;\n  }\n\n  get usersStore() {\n    return this.props.usersStore;\n  }\n\n  // eslint-disable-next-line consistent-return\n  handlePrevious = () => {\n    if (_.isFunction(this.props.onPrevious)) return this.props.onPrevious();\n  };\n\n  // eslint-disable-next-line consistent-return\n  handleNext = async form => {\n    const data = { ...form.values(), params: {}, platformId: this.platformId };\n\n    // We pick the mutable parameters and put them in params object\n    const configuration = _.find(this.configurations, ['id', data.configurationId]);\n    _.forEach(_.keys(configuration.mutableParams), key => {\n      if (!_.has(data, key)) return;\n      data.params[key] = data[key];\n      delete data[key];\n    });\n\n    // Next, we need to encrypt the credentials if they are provided\n    const askForCredentials = this.askForCredentials;\n    const user = this.userStore.user;\n    const props = ['accessKeyId', 'secretAccessKey'];\n\n    try {\n      if (askForCredentials) {\n        const credentials = _.pick(data, props);\n        credentials.region = awsRegion;\n        const usersStore = this.usersStore;\n        await user.setEncryptedCreds(credentials, data.pin);\n        await usersStore.updateUser(user);\n      }\n\n      // We remove any access key information from data\n      // but we keep pin in data, and the environment store will remove it\n      const adjustedData = _.omit(data, props);\n\n      await this.props.onNext(adjustedData);\n    } catch (error) {\n      displayError(error);\n    }\n  };\n\n  handleForgotPin = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const form = this.form;\n    const addRequired = field => {\n      const rules = field.rules;\n      if (_.startsWith('required')) return;\n      field.set('rules', `required|${rules}`);\n    };\n\n    addRequired(form.$('accessKeyId'));\n    addRequired(form.$('secretAccessKey'));\n    this.askForCredentials = true;\n  };\n\n  render() {\n    const title = this.props.title || '';\n    return (\n      <div className=\"mt2\">\n        <Header as=\"h3\" textAlign=\"center\">\n          {title}\n        </Header>\n        {this.renderForm()}\n      </div>\n    );\n  }\n\n  renderForm() {\n    const form = this.form;\n    const askForCidr = !_.isUndefined(this.props.defaultCidr);\n    const configurations = this.configurations;\n    const askForCredentials = this.askForCredentials;\n\n    return (\n      <Segment clearing className=\"p3 mb3\">\n        <Form form={form} onCancel={this.handlePrevious} onSuccess={this.handleNext}>\n          {({ processing, /* onSubmit, */ onCancel }) => (\n            <>\n              <Input field={form.$('name')} />\n              {askForCidr && <Input field={form.$('cidr')} />}\n              <SelectConfigurationCards configurations={configurations} formField={form.$('configurationId')} />\n              <TextArea field={form.$('description')} />\n              {askForCredentials && (\n                <>\n                  <Input field={form.$('accessKeyId')} />\n                  <Input field={form.$('secretAccessKey')} type=\"password\" />\n                </>\n              )}\n              <Input field={form.$('pin')} type=\"password\" icon=\"lock\" iconPosition=\"left\" />\n\n              {!askForCredentials && (\n                <Button floated=\"left\" disabled={processing} onClick={this.handleForgotPin}>\n                  Forgot PIN?\n                </Button>\n              )}\n\n              <Button\n                floated=\"right\"\n                className=\"ml2\"\n                primary\n                content=\"Create Research Workspace\"\n                disabled={processing}\n                type=\"submit\"\n              />\n\n              <Button\n                floated=\"right\"\n                icon=\"left arrow\"\n                labelPosition=\"left\"\n                className=\"ml2\"\n                content=\"Previous\"\n                disabled={processing}\n                onClick={onCancel}\n              />\n            </>\n          )}\n        </Form>\n      </Segment>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(CreateExternalPlatformForm, {\n  form: observable,\n  platformId: computed,\n  askForCredentials: observable,\n  configurations: computed,\n  userStore: computed,\n  usersStore: computed,\n  handlePrevious: action,\n  handleForgotPin: action,\n});\n\nexport default inject('userStore', 'usersStore', 'clientInformationStore')(observer(CreateExternalPlatformForm));\n"],"file":"CreateExternalPlatformForm.js"}