{"version":3,"sources":["../../../src/parts/compute/ComputePlatformSetup.js"],"names":["ComputePlatformSetup","props","setOnboarding","value","onboardingOpen","handleConfigureCredentials","event","preventDefault","stopPropagation","handleSelectComputePlatform","platformId","selectedPlatformId","platformsStore","computePlatformsStore","platformStore","getComputePlatformStore","load","clientInformationStore","window","scrollTo","currentStep","setStep","handlePrevious","step","onPrevious","handleCompleted","environment","onCompleted","undefined","store","content","renderLoadingError","renderEmpty","renderContent","studyIds","user","userStore","hasProjects","isExternalResearcher","canCreateWorkspace","capabilities","hasCredentials","renderMissingProjects","renderMissingCredentials","error","renderButtons","maxWidth","React","Component","action","computed","observable"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport { decorate, computed, runInAction, observable, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Icon, Header, Segment, Button } from 'semantic-ui-react';\nimport { isStoreLoading, isStoreError, isStoreEmpty } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport BasicProgressPlaceholder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\n\nimport UserOnboarding from '../users/UserOnboarding';\nimport SelectComputePlatformStep from './SelectComputePlatformStep';\nimport ConfigureComputePlatformStep from './ConfigureComputePlatformStep';\n\n// expected props\n// - onPrevious (via props)\n// - onCompleted (via props) a function is called after a call to create an environment is performed\n// - studyIds (via props) (optional) an array of the selected study ids\n// - currentStep (via props) an instance of the CurrentStep model\n// - computePlatformsStore (via injection)\n// - clientInformationStore (via injection)\nclass ComputePlatformSetup extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.selectedPlatformId = undefined;\n      this.onboardingOpen = false;\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    swallowError(this.computePlatformsStore.load());\n  }\n\n  get userStore() {\n    return this.props.userStore;\n  }\n\n  get computePlatformsStore() {\n    return this.props.computePlatformsStore;\n  }\n\n  get clientInformationStore() {\n    return this.props.clientInformationStore;\n  }\n\n  get currentStep() {\n    return this.props.currentStep;\n  }\n\n  setOnboarding = value => {\n    this.onboardingOpen = value;\n  };\n\n  handleConfigureCredentials = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.setOnboarding(true);\n  };\n\n  handleSelectComputePlatform = async platformId => {\n    this.selectedPlatformId = platformId;\n    const platformsStore = this.computePlatformsStore;\n    if (!platformsStore) return;\n\n    // We start the loading of the configurations for the selected platform\n    const platformStore = platformsStore.getComputePlatformStore(platformId);\n    await platformStore.load();\n\n    // We also try to figure out the ip address and if there is an error,\n    // then that is okay, we show an empty string for the cidr field\n    const clientInformationStore = this.clientInformationStore;\n    try {\n      await clientInformationStore.load();\n    } catch (error) {\n      // ignore intentionally\n    }\n\n    window.scrollTo(0, 0);\n    runInAction(() => {\n      this.currentStep.setStep('selectComputeConfiguration');\n    });\n  };\n\n  handlePrevious = () => {\n    const currentStep = this.currentStep;\n    if (currentStep.step === 'selectComputePlatform') {\n      this.props.onPrevious();\n      return;\n    }\n\n    this.currentStep.setStep('selectComputePlatform');\n  };\n\n  handleCompleted = async environment => {\n    return this.props.onCompleted(environment);\n  };\n\n  get studyIds() {\n    return this.props.studyIds;\n  }\n\n  render() {\n    const store = this.computePlatformsStore;\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = this.renderLoadingError();\n    } else if (isStoreLoading(store)) {\n      content = <BasicProgressPlaceholder className=\"mt2\" />;\n    } else if (isStoreEmpty(store)) {\n      content = this.renderEmpty();\n    } else {\n      content = this.renderContent();\n    }\n\n    return (\n      <>\n        {content} {this.onboardingOpen && <UserOnboarding onclose={() => this.setOnboarding(false)} />}\n      </>\n    );\n  }\n\n  renderContent() {\n    const step = this.currentStep.step;\n    const platformId = this.selectedPlatformId;\n    const studyIds = this.studyIds;\n    const user = this.userStore.user;\n    const hasProjects = user.hasProjects;\n    const isExternalResearcher = user.isExternalResearcher;\n    const canCreateWorkspace = user.capabilities.canCreateWorkspace;\n    const hasCredentials = user.hasCredentials;\n    let content = null;\n\n    if (!canCreateWorkspace) {\n      return this.renderEmpty();\n    }\n\n    if (!isExternalResearcher && !hasProjects) {\n      return this.renderMissingProjects();\n    }\n\n    // Check if external and no credentials\n    if (isExternalResearcher && !hasCredentials) {\n      return this.renderMissingCredentials();\n    }\n\n    if (step === 'selectComputePlatform') {\n      content = (\n        <SelectComputePlatformStep onPrevious={this.handlePrevious} onNext={this.handleSelectComputePlatform} />\n      );\n    } else if (step === 'selectComputeConfiguration') {\n      content = (\n        <ConfigureComputePlatformStep\n          platformId={platformId}\n          studyIds={studyIds}\n          onPrevious={this.handlePrevious}\n          onCompleted={this.handleCompleted}\n        />\n      );\n    }\n\n    return content;\n  }\n\n  renderLoadingError() {\n    const store = this.computePlatformsStore;\n    return (\n      <>\n        <ErrorBox error={store.error} className=\"p0 mt2 mb3\" />\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <>\n        <Segment placeholder className=\"mt2\">\n          <Header icon className=\"color-grey\">\n            <Icon name=\"server\" />\n            No compute platform\n            <Header.Subheader>\n              There are no compute platform to choose from. Your role might be restricted. Please contact your\n              administrator.\n            </Header.Subheader>\n          </Header>\n        </Segment>\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderMissingProjects() {\n    return (\n      <>\n        <Segment placeholder className=\"mt2\">\n          <Header icon className=\"color-grey\">\n            <Icon name=\"lock\" />\n            Missing association with projects\n            <Header.Subheader>\n              You currently do not have permissions to use any projects for the workspace. please contact your\n              administrator.\n            </Header.Subheader>\n          </Header>\n        </Segment>\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderMissingCredentials() {\n    return (\n      <>\n        <Segment placeholder className=\"mt2\">\n          <Header icon className=\"color-grey\">\n            <Icon name=\"key\" />\n            No AWS credentials\n            <Header.Subheader>To manage research workspaces, click Configure AWS Credentials.</Header.Subheader>\n          </Header>\n          <div>\n            <Button\n              color=\"orange\"\n              size=\"medium\"\n              basic\n              onClick={this.handleConfigureCredentials}\n              style={{ maxWidth: '100%' }}\n            >\n              Configure AWS Credentials\n            </Button>\n          </div>\n        </Segment>\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderButtons() {\n    return (\n      <div className=\"mt3\">\n        <Button\n          floated=\"right\"\n          icon=\"right arrow\"\n          labelPosition=\"right\"\n          className=\"ml2\"\n          primary\n          content=\"Next\"\n          disabled\n        />\n        <Button\n          floated=\"right\"\n          icon=\"left arrow\"\n          labelPosition=\"left\"\n          className=\"ml2\"\n          content=\"Previous\"\n          onClick={this.handlePrevious}\n        />\n      </div>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ComputePlatformSetup, {\n  handleSelectComputePlatform: action,\n  handlePrevious: action,\n  handleCompleted: action,\n  setOnboarding: action,\n  studyIds: computed,\n  userStore: computed,\n  computePlatformsStore: computed,\n  clientInformationStore: computed,\n  currentStep: computed,\n  selectedPlatformId: observable,\n  onboardingOpen: observable,\n});\n\nexport default inject('userStore', 'computePlatformsStore', 'clientInformationStore')(observer(ComputePlatformSetup));\n"],"file":"ComputePlatformSetup.js"}