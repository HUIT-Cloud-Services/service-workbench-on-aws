{"version":3,"sources":["../../../src/parts/environments-builtin/EnvironmentCard.js"],"names":["UPDATE_INTERVAL_MS","EnvironmentCard","props","checkExternalUpdate","environment","user","pin","storage","getItem","localStorageKeys","pinToken","isExternal","isPending","isExternalUser","clearInterval","intervalId","_","isEmpty","getStore","updateExternalEnvironment","handleTerminateEnvironment","event","preventDefault","stopPropagation","cleanTerminationState","shouldShowTerminateDialog","terminationInProgress","store","deleteEnvironment","getEnvironment","handleStopEnvironment","stopEnvironment","handleStartEnvironment","startEnvironment","showTerminateDialog","hideTerminateDialog","setFetchingUrl","setInterval","name","progress","environmentsStore","userDisplayName","type","sagemakerNotebookIcon","emrIcon","rstudioIcon","ec2Icon","item","renderLeftCard","renderRightCard","renderTerminateDialog","env","description","createdAt","createdBy","fetchingUrl","status","instanceInfo","getIcon","maxHeight","maxWidth","border","Label","getCostInPastDay","costs","costInfo","costsForLatestDate","length","cost","total","forEach","service","amount","toFixed","getUserDisplayName","sharedWithUsers","sharedWithUsernames","map","uid","getDisplayName","getLongDisplayName","join","projectId","renderStopButton","renderStartButton","renderTerminateButton","terminateButton","isCompleted","isStopped","id","stopButton","validEnvTypes","isAdmin","includes","startButton","React","Component","action","observable"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport _ from 'lodash';\nimport { observer, inject } from 'mobx-react';\nimport { decorate, action, observable, runInAction } from 'mobx';\nimport { withRouter } from 'react-router-dom';\nimport TimeAgo from 'react-timeago';\nimport { Header, Icon, Label, Image, Modal, Button } from 'semantic-ui-react';\nimport Dotdotdot from 'react-dotdotdot';\n\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport { storage } from '@aws-ee/base-ui/dist/helpers/utils';\n\nimport EnvironmentStatusIcon from './EnvironmentStatusIcon';\nimport By from '../helpers/By';\nimport EnvironmentConnectButton from './EnvironmentConnectButton';\nimport localStorageKeys from '../../models/constants/local-storage-keys';\nimport sagemakerNotebookIcon from '../../../images/marketplace/sagemaker-notebook-icon.svg';\nimport emrIcon from '../../../images/marketplace/emr-icon.svg';\nimport ec2Icon from '../../../images/marketplace/ec2-icon.svg';\nimport rstudioIcon from '../../../images/marketplace/rstudio-icon.svg';\n\nconst UPDATE_INTERVAL_MS = 20000;\n\n// expected props\n// - environment - a Environment model instance (via props)\n// - environmentsStore - MobX environmentsStore model\n// - user - Current user\n// - userDisplayName (via injection)\n// - location (from react router)\nclass EnvironmentCard extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.shouldShowTerminateDialog = false;\n      this.terminationInProgress = false;\n    });\n  }\n\n  componentDidMount() {\n    const environment = this.getEnvironment();\n\n    environment.setFetchingUrl(false);\n    if (environment.isExternal && environment.isPending && this.props.user.isExternalUser) {\n      // TODO abstract this workflow to be used elsewhere\n      // Call checkExternalUpdate every minute\n      this.intervalId = setInterval(this.checkExternalUpdate, UPDATE_INTERVAL_MS, environment, this.props.user);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  checkExternalUpdate = (environment, user) => {\n    const pin = storage.getItem(localStorageKeys.pinToken);\n    // Confirm if the stack still needs to be checked\n    if (!(environment.isExternal && environment.isPending && user.isExternalUser)) {\n      clearInterval(this.intervalId);\n      return;\n    }\n    if (!_.isEmpty(pin)) {\n      this.getStore().updateExternalEnvironment(environment, user, pin);\n    }\n  };\n\n  handleTerminateEnvironment = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const cleanTerminationState = () => {\n      runInAction(() => {\n        this.shouldShowTerminateDialog = false;\n        this.terminationInProgress = false;\n      });\n    };\n\n    try {\n      runInAction(() => {\n        this.terminationInProgress = true;\n      });\n      const store = this.getStore();\n      await store.deleteEnvironment(this.getEnvironment(), this.props.user, storage.getItem(localStorageKeys.pinToken));\n      cleanTerminationState();\n    } catch (error) {\n      cleanTerminationState();\n      displayError(error);\n    }\n  };\n\n  renderTerminateDialog(environment) {\n    const shouldShowTerminateDialog = this.shouldShowTerminateDialog;\n    const { name } = environment;\n    const progress = this.terminationInProgress;\n\n    return (\n      <Modal\n        open={shouldShowTerminateDialog}\n        size=\"tiny\"\n        onClose={this.hideTerminateDialog}\n        closeOnDimmerClick={!progress}\n      >\n        <Header content=\"Terminate Environment\" />\n        <Modal.Content>\n          <p>Are you sure you want to terminate environment &quot;{name}&quot; ?</p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button disabled={progress} onClick={this.hideTerminateDialog}>\n            Cancel\n          </Button>\n          <Button loading={progress} disabled={progress} color=\"red\" onClick={this.handleTerminateEnvironment}>\n            <Icon name=\"remove\" /> Terminate\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n\n  handleStopEnvironment = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    try {\n      const store = this.getStore();\n      await store.stopEnvironment(this.getEnvironment());\n    } catch (error) {\n      displayError(error);\n    }\n  };\n\n  handleStartEnvironment = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    try {\n      const store = this.getStore();\n      await store.startEnvironment(this.getEnvironment());\n    } catch (error) {\n      displayError(error);\n    }\n  };\n\n  showTerminateDialog = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.shouldShowTerminateDialog = true;\n    this.terminationInProgress = false;\n  };\n\n  hideTerminateDialog = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (this.terminationInProgress) return;\n    this.shouldShowTerminateDialog = false;\n  };\n\n  getEnvironment() {\n    return this.props.environment;\n  }\n\n  getStore() {\n    return this.props.environmentsStore;\n  }\n\n  getUserDisplayName() {\n    return this.props.userDisplayName;\n  }\n\n  getIcon(type) {\n    switch (type) {\n      case 'sagemaker':\n        return sagemakerNotebookIcon;\n      case 'emr':\n        return emrIcon;\n      case 'ec2-rstudio':\n        return rstudioIcon;\n      case 'ec2-linux':\n      case 'ec2-windows':\n        return ec2Icon;\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const item = this.getEnvironment();\n    return (\n      <div className=\"flex\">\n        {this.renderLeftCard(item)}\n        {this.renderRightCard(item)}\n        {this.renderTerminateDialog(item)}\n      </div>\n    );\n  }\n\n  renderLeftCard(env) {\n    const { name, description, createdAt, createdBy, fetchingUrl, status, instanceInfo } = env;\n    return (\n      <div className=\"flex-auto\">\n        <div className=\"flex\">\n          <Image\n            src={this.getIcon(instanceInfo.type)}\n            className=\"mt0 mr1\"\n            style={{ maxHeight: '24px', maxWidth: '24px' }}\n          />\n          <Header as=\"h3\" color=\"grey\" className=\"mt0 flex-auto\">\n            {name}\n          </Header>\n          <div className=\"flex\">\n            <Label className=\"flex-auto basic\" style={{ border: 0 }}>\n              {status === 'COMPLETED' &&\n                (instanceInfo.type === 'ec2-rstudio' ||\n                  instanceInfo.type === 'sagemaker' ||\n                  instanceInfo.type === 'emr') && (\n                  <EnvironmentConnectButton\n                    as={Label}\n                    user={this.props.user}\n                    environment={env}\n                    size=\"mini\"\n                    color=\"green\"\n                  >\n                    {fetchingUrl ? (\n                      <>\n                        Connecting\n                        <Icon loading name=\"spinner\" size=\"small\" className=\"ml1 mr1\" />\n                      </>\n                    ) : (\n                      <>Connect</>\n                    )}\n                  </EnvironmentConnectButton>\n                )}\n            </Label>\n            <Label className=\"flex-auto basic\" style={{ border: 0 }}>\n              <EnvironmentStatusIcon environment={env} />\n            </Label>\n          </div>\n        </div>\n        <div className=\"ml3 mb2 mt2 breakout\">\n          created <TimeAgo date={createdAt} /> <By uid={createdBy} />\n        </div>\n        <div className=\"ml3 mb2 mt2 breakout\">\n          <Dotdotdot clamp={3}>{description}</Dotdotdot>\n        </div>\n        <div className=\"ml3 mb2 mt2 breakout bold\">\n          Yesterday&apos;s Research Workspace Cost: ${this.getCostInPastDay(env.costs)}\n        </div>\n      </div>\n    );\n  }\n\n  getCostInPastDay(costInfo) {\n    if (_.isEmpty(costInfo)) {\n      return 0;\n    }\n    const costsForLatestDate = costInfo[costInfo.length - 1].cost;\n    let total = 0;\n    costsForLatestDate.forEach(service => {\n      total += service.amount;\n    });\n    return total.toFixed(2);\n  }\n\n  renderRightCard(environment) {\n    const userDisplayName = this.getUserDisplayName();\n    const sharedWithUsers = environment.sharedWithUsers; // array of uid\n    const sharedWithUsernames = _.map(sharedWithUsers, uid => userDisplayName.getDisplayName({ uid }));\n    return (\n      <div className=\"border-left border-grey pl2 ml2\">\n        <div className=\"mt1 fs-9\">\n          <span className=\"bold  inline-block\">Research Workspace Owners</span>{' '}\n          <Label circular size=\"mini\" color=\"blue\">\n            {1}\n          </Label>\n        </div>\n        <div className=\"fs-9\">\n          <Dotdotdot clamp={1}>{userDisplayName.getLongDisplayName({ uid: environment.createdBy })}</Dotdotdot>\n        </div>\n        <div className=\"mt3 fs-9\">\n          <span className=\"bold  inline-block\">Research Workspace Shared Users</span>{' '}\n          <Label circular size=\"mini\">\n            {sharedWithUsernames.length}\n          </Label>\n        </div>\n        <div className=\"fs-9\">\n          <Dotdotdot clamp={1}>{sharedWithUsernames.join(', ')}</Dotdotdot>\n        </div>\n\n        <div className=\"mt3 fs-9\">\n          <span className=\"bold  inline-block\">Project</span>{' '}\n        </div>\n        <div className=\"fs-9 mb2\">\n          <Dotdotdot clamp={1}>{environment.projectId}</Dotdotdot>\n        </div>\n        <div className=\"mb1 mt5 breakout flex-auto\">\n          {this.renderStopButton(environment)}\n          {this.renderStartButton(environment)}\n          {this.renderTerminateButton(environment)}\n        </div>\n      </div>\n    );\n  }\n\n  renderTerminateButton(environment) {\n    let terminateButton;\n    if (environment.isCompleted || environment.isStopped) {\n      terminateButton = (\n        <Label color=\"red\" className=\"cursor-pointer\" data-id={environment.id} onClick={this.showTerminateDialog}>\n          <Icon name=\"minus circle\" />\n          Terminate\n        </Label>\n      );\n    }\n\n    return <>{terminateButton}</>;\n  }\n\n  renderStopButton(environment) {\n    let stopButton;\n    // Only the environment types listed here currently have the start/stop functionality\n    const validEnvTypes = ['ec2-windows', 'ec2-linux', 'ec2-rstudio', 'sagemaker'];\n    // Render button if Environment can be stopped AND prevent admins from attempting to terminate external envs\n    if (\n      environment.isCompleted &&\n      !(this.props.user.isAdmin && environment.isExternal) &&\n      _.includes(validEnvTypes, environment.instanceInfo.type)\n    ) {\n      stopButton = (\n        <Label color=\"orange\" className=\"cursor-pointer\" data-id={environment.id} onClick={this.handleStopEnvironment}>\n          <Icon name=\"power\" />\n          Stop\n        </Label>\n      );\n    }\n\n    return <>{stopButton}</>;\n  }\n\n  renderStartButton(environment) {\n    let startButton;\n    // Render button if Environment can be stpped AND prevent admins from attempting to terminate external envs\n    if (environment.isStopped && !(this.props.user.isAdmin && environment.isExternal)) {\n      startButton = (\n        <Label color=\"green\" className=\"cursor-pointer\" data-id={environment.id} onClick={this.handleStartEnvironment}>\n          <Icon name=\"power\" />\n          Start\n        </Label>\n      );\n    }\n\n    return <>{startButton}</>;\n  }\n}\n\n// Using MobX-4 to decorate here\ndecorate(EnvironmentCard, {\n  showTerminateDialog: action,\n  hideTerminateDialog: action,\n  handleStartEnvironment: action,\n  handleStopEnvironment: action,\n  shouldShowTerminateDialog: observable,\n  terminationInProgress: observable,\n});\n\nexport default inject('userDisplayName')(withRouter(observer(EnvironmentCard)));\n"],"file":"EnvironmentCard.js"}