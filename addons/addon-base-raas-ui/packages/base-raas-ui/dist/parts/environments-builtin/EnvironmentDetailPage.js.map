{"version":3,"sources":["../../../src/parts/environments-builtin/EnvironmentDetailPage.js"],"names":["ErrorInfo","environment","React","useState","visible","setVisible","error","s","EnvironmentDetailPage","props","handleSharedWithUsersSelection","e","value","updateSharedWithUsers","map","item","JSON","parse","handleSubmitSharedWithUsersClick","event","preventDefault","stopPropagation","getEnvironment","formProcessing","updateEnvironment","id","sharedWithUsers","environmentsStore","handleKeyPairRequest","getKeyPair","keyPair","downloadLink","document","createElement","setAttribute","encodeURIComponent","privateKey","click","handleWindowsPasswordRequest","windowsPassword","getWindowsPassword","passwordData","password","crypto","privateDecrypt","key","padding","constants","RSA_PKCS1_PADDING","Buffer","from","toString","store","getInstanceStore","load","startHeartbeat","stopHeartbeat","instanceId","getInstanceId","getEnvironmentStore","userStore","getUserStore","user","match","params","content","renderMain","renderBreadcrumb","goto","instance","name","updatedAt","updatedBy","renderTabs","isCompleted","renderCompletedTabs","isStopped","renderStoppedTabs","isError","isTerminated","renderTerminateInfo","renderPendingInfo","menuItem","render","renderInstanceDetails","panes","instanceInfo","type","renderRStudioSecurity","renderEc2LinuxSecurity","renderEc2WindowsSecurity","renderSagemakerSecurity","renderEmrSecurity","renderCostDetailsTabPane","renderUserShareTabPane","secondary","pointing","renderCostInfo","renderCostTable","uid","createdBy","sharedWithUsersDropDownOptions","usersStore","asDropDownOptions","filter","stringify","costHeadings","rows","costs","forEach","costItemGivenADate","cost","headings","Object","keys","push","rowValues","date","startDate","total","heading","amount","toFixed","_","flatten","uniq","header","row","get","createdAt","text","cursor","Ec2WorkspaceDnsName","passRevealDisabled","passRevealStyle","width","height","renderCopyToClipboard","renderConnectBtn","msg","Button","fetchingUrl","Component","observable","action"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { observer, inject, Observer } from 'mobx-react';\nimport { decorate, observable, action, runInAction } from 'mobx';\nimport { withRouter } from 'react-router-dom';\nimport TimeAgo from 'react-timeago';\nimport {\n  Accordion,\n  Breadcrumb,\n  Button,\n  Container,\n  Dropdown,\n  Header,\n  Icon,\n  Label,\n  Popup,\n  Reveal,\n  Segment,\n  Tab,\n  Table,\n} from 'semantic-ui-react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport crypto from 'crypto';\n\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport { isStoreLoading, isStoreReady, isStoreError } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport ProgressPlaceHolder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\n\nimport EnvironmentStatusIcon from './EnvironmentStatusIcon';\nimport By from '../helpers/By';\nimport EnvironmentConnectButton from './EnvironmentConnectButton';\n\nconst ErrorInfo = ({ environment }) => {\n  const [visible, setVisible] = React.useState(() => false);\n  // if (!environment.error) {\n  //   environment.getEnvironmentError();\n  // }\n\n  return (\n    <Segment>\n      This research workspace encountered an {environment.error ? 'error' : 'unknown error'}.\n      {environment.error ? (\n        <Accordion>\n          <Accordion.Title active={visible} index={0} onClick={() => setVisible(s => !s)}>\n            <Icon name=\"dropdown\" />\n            Detailed error information\n          </Accordion.Title>\n          <Accordion.Content active={visible}>\n            <p>{environment.error}</p>\n          </Accordion.Content>\n        </Accordion>\n      ) : null}\n    </Segment>\n  );\n};\n\n// expected props\n// - environmentsStore (via injection)\n// - userStore (via injection)\n// - location (from react router)\nclass EnvironmentDetailPage extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.updateSharedWithUsers = [];\n      this.formProcessing = false;\n    });\n  }\n\n  componentDidMount() {\n    const store = this.getInstanceStore();\n    swallowError(store.load());\n    store.startHeartbeat();\n  }\n\n  componentWillUnmount() {\n    const store = this.getInstanceStore();\n    store.stopHeartbeat();\n  }\n\n  getInstanceStore() {\n    const instanceId = this.getInstanceId();\n    return this.props.environmentsStore.getEnvironmentStore(instanceId);\n  }\n\n  getUserStore() {\n    return this.props.userStore;\n  }\n\n  getUser() {\n    const store = this.getUserStore();\n    if (!isStoreReady(store)) return {};\n    return store.user;\n  }\n\n  getInstanceId() {\n    return (this.props.match.params || {}).instanceId;\n  }\n\n  getEnvironment() {\n    const store = this.getInstanceStore();\n    if (!isStoreReady(store)) return {};\n    return store.environment;\n  }\n\n  render() {\n    const store = this.getInstanceStore();\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} className=\"p0\" />;\n    } else if (isStoreLoading(store)) {\n      content = <ProgressPlaceHolder />;\n    } else if (isStoreReady(store)) {\n      content = this.renderMain();\n    } else {\n      content = null;\n    }\n\n    return (\n      <Container className=\"mt3\">\n        {this.renderBreadcrumb()}\n        {content}\n      </Container>\n    );\n  }\n\n  renderBreadcrumb() {\n    const instanceId = this.getInstanceId();\n    const goto = gotoFn(this);\n\n    return (\n      <Breadcrumb className=\"block mb3\">\n        <Breadcrumb.Section link onClick={() => goto('/workspaces')}>\n          Research Workspaces\n        </Breadcrumb.Section>\n        <Breadcrumb.Divider icon=\"right angle\" />\n        <Breadcrumb.Section active>{instanceId}</Breadcrumb.Section>\n      </Breadcrumb>\n    );\n  }\n\n  renderMain() {\n    const instance = this.getEnvironment();\n    const { id, name, updatedAt, updatedBy } = instance;\n\n    return (\n      <>\n        <div className=\"flex mb2\">\n          <Header as=\"h3\" color=\"grey\" className=\"mt0 flex-auto ellipsis\">\n            <span className=\"flex justify-between\">\n              <div>\n                <Label color=\"blue\" className=\"ml0 mr1\">\n                  Research Workspace\n                </Label>\n                {name} - {id}\n              </div>\n              <div>\n                <EnvironmentStatusIcon environment={instance} />\n              </div>\n            </span>\n            <Header.Subheader className=\"fs-9 color-grey mt1\">\n              <div>\n                updated <TimeAgo date={updatedAt} /> <By uid={updatedBy} />\n              </div>\n            </Header.Subheader>\n          </Header>\n        </div>\n        <div className=\"mb3\">{this.renderTabs()}</div>\n      </>\n    );\n  }\n\n  renderTabs() {\n    const environment = this.getEnvironment();\n    if (environment.isCompleted) {\n      return this.renderCompletedTabs();\n    }\n    if (environment.isStopped) {\n      return this.renderStoppedTabs();\n    }\n    if (environment.isError) {\n      return <ErrorInfo environment={environment} />;\n    }\n    if (environment.isTerminated) {\n      return this.renderTerminateInfo();\n    }\n    return this.renderPendingInfo();\n  }\n\n  renderCostDetailsTabPane() {\n    return {\n      menuItem: 'Research Workspace Details',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Observer>{() => this.renderInstanceDetails()}</Observer>\n        </Tab.Pane>\n      ),\n    };\n  }\n\n  renderCompletedTabs() {\n    const environment = this.getEnvironment();\n\n    const panes = [\n      {\n        menuItem: 'Security',\n        render: () => (\n          <Tab.Pane attached={false}>\n            <Observer>\n              {() => {\n                switch (environment.instanceInfo.type) {\n                  case 'ec2-rstudio':\n                    return this.renderRStudioSecurity();\n                  case 'ec2-linux':\n                    return this.renderEc2LinuxSecurity();\n                  case 'ec2-windows':\n                    return this.renderEc2WindowsSecurity();\n                  case 'sagemaker':\n                    return this.renderSagemakerSecurity();\n                  case 'emr':\n                    return this.renderEmrSecurity();\n                  default:\n                    return (\n                      <Segment placeholder>\n                        <Header icon className=\"color-grey\">\n                          <Icon name=\"hdd\" />\n                          Security\n                        </Header>\n                      </Segment>\n                    );\n                }\n              }}\n            </Observer>\n          </Tab.Pane>\n        ),\n      },\n      this.renderCostDetailsTabPane(),\n      this.renderUserShareTabPane(),\n    ];\n\n    return <Tab menu={{ secondary: true, pointing: true }} panes={panes} />;\n  }\n\n  renderInstanceDetails() {\n    return this.renderCostInfo();\n  }\n\n  renderCostInfo() {\n    return (\n      <Segment>\n        <h2 className=\"center\"> Daily Costs</h2>\n        {this.renderCostTable()}\n      </Segment>\n    );\n  }\n\n  renderUserShareTabPane() {\n    const environment = this.getEnvironment();\n    const uid = environment.createdBy;\n    const sharedWithUsersDropDownOptions = this.props.usersStore.asDropDownOptions().filter(item => {\n      return !(item.value === uid);\n    });\n\n    return {\n      menuItem: 'Sharing',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Observer>\n            {() => {\n              return (\n                <Segment>\n                  <h2 className=\"center\">Share with Users</h2>\n                  <Dropdown\n                    options={sharedWithUsersDropDownOptions}\n                    defaultValue={environment.sharedWithUsers.map(item => item.id)}\n                    fluid\n                    multiple\n                    selection\n                    search\n                    placeholder=\"Select other users you want to share this environment\"\n                    disabled={this.formProcessing}\n                    onChange={this.handleSharedWithUsersSelection}\n                  />\n                  <div className=\"mb2\" />\n                  <Button color=\"blue\" disabled={this.formProcessing} onClick={this.handleSubmitSharedWithUsersClick}>\n                    Update\n                  </Button>\n                </Segment>\n              );\n            }}\n          </Observer>\n        </Tab.Pane>\n      ),\n    };\n  }\n\n  renderStoppedTabs() {\n    const panes = [this.renderUserShareTabPane(), this.renderCostDetailsTabPane()];\n\n    return <Tab menu={{ secondary: true, pointing: true }} panes={panes} />;\n  }\n\n  handleSharedWithUsersSelection = (e, { value }) => {\n    this.updateSharedWithUsers = value.map(item => JSON.parse(item));\n  };\n\n  handleSubmitSharedWithUsersClick = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const environment = this.getEnvironment();\n\n    runInAction(() => {\n      this.formProcessing = true;\n    });\n\n    const updateEnvironment = {\n      id: environment.id,\n      sharedWithUsers: this.updateSharedWithUsers,\n    };\n\n    try {\n      await this.props.environmentsStore.updateEnvironment(updateEnvironment);\n    } catch (error) {\n      runInAction(() => {\n        this.formProcessing = false;\n      });\n      displayError(error);\n    }\n    runInAction(() => {\n      this.formProcessing = false;\n    });\n  };\n\n  renderCostTable() {\n    // Convert from mobx obj to normal obj\n    const environment = JSON.parse(JSON.stringify(this.getEnvironment()));\n\n    let costHeadings = [];\n    const rows = [];\n    environment.costs.forEach(costItemGivenADate => {\n      const cost = costItemGivenADate.cost;\n      const headings = Object.keys(cost);\n      costHeadings.push(headings);\n      const rowValues = {};\n      rowValues.date = costItemGivenADate.startDate;\n      let total = 0;\n      headings.forEach(heading => {\n        const amount = cost[heading].amount;\n        rowValues[heading] = amount.toFixed(2);\n        total += amount;\n      });\n      rowValues.total = total.toFixed(2);\n      rows.push(rowValues);\n    });\n\n    costHeadings = _.flatten(costHeadings);\n    costHeadings = _.uniq(costHeadings);\n\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n            {costHeadings.map(header => {\n              return <Table.HeaderCell key={header}>{header}</Table.HeaderCell>;\n            })}\n            <Table.HeaderCell>Total</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {rows.map(row => {\n            return (\n              <Table.Row key={row.date}>\n                <Table.Cell>{row.date}</Table.Cell>\n                {costHeadings.map(header => {\n                  return <Table.Cell key={row}>${_.get(row, header, 0)}</Table.Cell>;\n                })}\n                <Table.Cell>${row.total}</Table.Cell>\n              </Table.Row>\n            );\n          })}\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  renderTerminateInfo() {\n    const environment = this.getEnvironment();\n    return (\n      <>\n        <Segment>\n          This research workspace was terminated <TimeAgo date={environment.updatedAt} />{' '}\n          <By uid={environment.updatedBy} />.\n        </Segment>\n        {this.renderCostInfo()}\n      </>\n    );\n  }\n\n  renderPendingInfo() {\n    const environment = this.getEnvironment();\n    return (\n      <>\n        <Segment>\n          This research workspace was started <TimeAgo date={environment.createdAt} />{' '}\n          <By uid={environment.createdBy} />.\n        </Segment>\n      </>\n    );\n  }\n\n  renderCopyToClipboard(text) {\n    return (\n      <Popup\n        content=\"Copy\"\n        trigger={\n          // <CopyToClipboard text={text} style={{ 'margin-left': '4px', cursor: 'pointer' }}>\n          <CopyToClipboard className=\"ml1 mr0\" text={text} style={{ cursor: 'pointer' }}>\n            <Icon name=\"copy\" />\n          </CopyToClipboard>\n        }\n      />\n    );\n  }\n\n  handleKeyPairRequest = async event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const environment = this.getEnvironment();\n    const keyPair = await environment.getKeyPair();\n\n    const downloadLink = document.createElement('a');\n    downloadLink.setAttribute('href', `data:application/octet-stream,${encodeURIComponent(keyPair.privateKey)}`);\n    downloadLink.setAttribute('download', `${environment.id}.pem`);\n    downloadLink.click();\n  };\n\n  handleWindowsPasswordRequest = async event => {\n    event.preventDefault();\n    runInAction(() => {\n      this.windowsPassword = 'loading';\n    });\n\n    const environment = this.getEnvironment();\n    const [{ privateKey }, { passwordData }] = await environment.getWindowsPassword();\n\n    const password = crypto\n      .privateDecrypt(\n        { key: privateKey, padding: crypto.constants.RSA_PKCS1_PADDING },\n        Buffer.from(passwordData, 'base64'),\n      )\n      .toString('utf8');\n\n    runInAction(() => {\n      this.windowsPassword = password;\n    });\n  };\n\n  renderEc2LinuxSecurity() {\n    const environment = this.getEnvironment();\n    return (\n      <div>\n        You&apos;ll need two pieces of information to connect to this research workspace.\n        <ol>\n          <li>\n            The IP Address or DNS of the instance, for this research workspace it is{' '}\n            {environment.instanceInfo.Ec2WorkspaceDnsName}\n          </li>\n          <li>The ssh key</li>\n        </ol>\n        Connecting to your research workspace depends on the operating system you are connecting from.\n        <ul>\n          <li>\n            <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/putty.html\">\n              Connecting from Windows via Putty\n            </a>\n          </li>\n          <li>\n            <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AccessingInstancesLinux.html\">\n              Connecting from MacOS or Linux via SSH\n            </a>\n          </li>\n        </ul>\n        Example:\n        <Segment>{`ssh -i ${environment.id}.pem ec2-user@${environment.instanceInfo.Ec2WorkspaceDnsName}`}</Segment>\n        <Button color=\"blue\" onClick={this.handleKeyPairRequest}>\n          Download SSH Key\n        </Button>\n      </div>\n    );\n  }\n\n  renderEc2WindowsSecurity() {\n    const environment = this.getEnvironment();\n    const passRevealDisabled = !this.windowsPassword || this.windowsPassword === 'loading';\n    const passRevealStyle = {\n      width: '27em',\n      height: '5em',\n    };\n\n    return (\n      <>\n        <p>\n          Your Windows workspace can be accessed via an RDP client by using the DNS host name and credentials defined\n          defined below.\n        </p>\n\n        <Label className=\"mx1\">\n          Host <Label.Detail>{environment.instanceInfo.Ec2WorkspaceDnsName}</Label.Detail>\n          {this.renderCopyToClipboard(environment.instanceInfo.Ec2WorkspaceDnsName)}\n        </Label>\n\n        <Reveal className=\"mt1\" animated=\"move\" disabled={passRevealDisabled}>\n          <Reveal.Content visible>\n            <Button\n              color=\"blue\"\n              onClick={this.handleWindowsPasswordRequest}\n              loading={this.windowsPassword === 'loading'}\n              style={passRevealStyle}\n            >\n              <Icon name={passRevealDisabled ? 'lock' : 'unlock'} />\n              {passRevealDisabled ? 'Get ' : 'Show '} Windows Credentials\n            </Button>\n          </Reveal.Content>\n          <Reveal.Content hidden>\n            <Segment className=\"px1 py1\" style={passRevealStyle}>\n              <Label>\n                Username <Label.Detail>Administrator</Label.Detail>\n              </Label>\n              <br />\n              <Label className=\"mx0\">\n                Password\n                <Label.Detail>{this.windowsPassword}</Label.Detail>\n                {this.renderCopyToClipboard(this.windowsPassword)}\n              </Label>\n            </Segment>\n          </Reveal.Content>\n        </Reveal>\n\n        <p className=\"mt2\">\n          Additional information about connecting via RDP can be found in the documentation below:\n          <ul>\n            <li>\n              <a\n                href=\"https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/connecting_to_windows_instance.html#connect-rdp\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Connect to Your Windows Instance\n              </a>\n            </li>\n          </ul>\n        </p>\n      </>\n    );\n  }\n\n  renderRStudioSecurity() {\n    return this.renderConnectBtn('To connect to this RStudio Server instance simply click the launch button below.');\n  }\n\n  renderEmrSecurity() {\n    return this.renderConnectBtn(\n      'To connect to this EMR Jupyter notebook instance simply click the launch button below.',\n    );\n  }\n\n  renderSagemakerSecurity() {\n    return this.renderConnectBtn(\n      'To connect to this SageMaker notebook instance simply click the launch button below.',\n    );\n  }\n\n  renderConnectBtn(msg) {\n    const environment = this.getEnvironment();\n\n    return (\n      <div>\n        <p>{msg}</p>\n        <EnvironmentConnectButton as={Button} environment={environment} color=\"green\">\n          {environment.fetchingUrl ? (\n            <>\n              Connecting\n              <Icon loading name=\"spinner\" size=\"small\" className=\"ml1 mr1\" />\n            </>\n          ) : (\n            <>Connect</>\n          )}\n        </EnvironmentConnectButton>\n      </div>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(EnvironmentDetailPage, {\n  windowsPassword: observable,\n  updateSharedWithUsers: observable,\n  formProcessing: observable,\n  handleSharedWithUsersSelection: action,\n});\n\nexport default inject('environmentsStore', 'userStore', 'usersStore')(withRouter(observer(EnvironmentDetailPage)));\n"],"file":"EnvironmentDetailPage.js"}