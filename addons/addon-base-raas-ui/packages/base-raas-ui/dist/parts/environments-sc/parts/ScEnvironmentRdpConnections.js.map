{"version":3,"sources":["../../../../src/parts/environments-sc/parts/ScEnvironmentRdpConnections.js"],"names":["ScEnvironmentRdpConnections","env","environment","state","canConnect","empty","_","isEmpty","connections","content","renderEmpty","renderConnections","map","item","id","props","scEnvironment","getConnections","scheme","React","Component","computed"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;IACMA,2B;;;;;;;;;;;;;6BAaK;AACP,UAAMC,GAAG,GAAG,KAAKC,WAAjB;AACA,UAAMC,KAAK,GAAGF,GAAG,CAACE,KAAlB;AACA,UAAMC,UAAU,GAAGD,KAAK,CAACC,UAAzB;;AACA,UAAMC,KAAK,GAAGC,mBAAEC,OAAF,CAAU,KAAKC,WAAf,CAAd;;AAEA,UAAI,CAACJ,UAAL,EAAiB,OAAO,IAAP;AACjB,UAAIK,OAAO,GAAG,IAAd;;AAEA,UAAIJ,KAAJ,EAAW;AACTI,QAAAA,OAAO,GAAG,KAAKC,WAAL,EAAV;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,GAAG,KAAKE,iBAAL,EAAV;AACD;;AAED,0BAAO;AAAK,QAAA,SAAS,EAAC;AAAf,SAAkCF,OAAlC,CAAP;AACD;;;wCAEmB;AAClB,UAAMR,GAAG,GAAG,KAAKC,WAAjB;AACA,UAAMM,WAAW,GAAG,KAAKA,WAAzB;AAEA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,gCAAC,sBAAD;AAAO,QAAA,MAAM;AAAb,sBACE,gCAAC,sBAAD,CAAO,MAAP,qBACE,gCAAC,sBAAD,CAAO,GAAP,qBACE,gCAAC,sBAAD,CAAO,UAAP;AAAkB,QAAA,OAAO,EAAC;AAA1B,2BADF,CADF,CADF,eAME,gCAAC,sBAAD,CAAO,IAAP,QACGF,mBAAEM,GAAF,CAAMJ,WAAN,EAAmB,UAAAK,IAAI;AAAA,4BACtB,gCAAC,yCAAD;AAA+B,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAzC;AAA6C,UAAA,aAAa,EAAEb,GAA5D;AAAiE,UAAA,YAAY,EAAEY,IAAI,CAACC;AAApF,UADsB;AAAA,OAAvB,CADH,CANF,CADF,CADF;AAgBD;;;kCAEa;AACZ,0BACE,gCAAC,wBAAD;AAAS,QAAA,WAAW,MAApB;AAAqB,QAAA,SAAS,EAAC;AAA/B,sBACE,gCAAC,uBAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,SAAS,EAAC;AAAvB,sBACE,gCAAC,qBAAD;AAAM,QAAA,IAAI,EAAC;AAAX,QADF,qCAGE,gCAAC,uBAAD,CAAQ,SAAR,oEAHF,CADF,CADF;AASD;;;wBA9DiB;AAChB,aAAO,KAAKC,KAAL,CAAWC,aAAlB;AACD,K,CAED;AACA;;;;wBACkB;AAChB,UAAMR,WAAW,GAAG,KAAKN,WAAL,CAAiBe,cAAjB,CAAgC,UAAAJ,IAAI;AAAA,eAAIA,IAAI,CAACK,MAAL,KAAgB,KAApB;AAAA,OAApC,CAApB;AAEA,aAAOV,WAAP;AACD;;;;EAXuCW,kBAAMC,S,GAkEhD;;;AACA,oBAASpB,2BAAT,EAAsC;AACpCE,EAAAA,WAAW,EAAEmB,cADuB;AAEpCb,EAAAA,WAAW,EAAEa;AAFuB,CAAtC;;eAKe,yBAAS,gCAAW,yBAASrB,2BAAT,CAAX,CAAT,C","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport { decorate, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Segment, Icon, Header, Table } from 'semantic-ui-react';\n\nimport ScEnvironmentRdpConnectionRow from './ScEnvironmentRdpConnectionRow';\n\n// expected props\n// - environment (via prop)\nclass ScEnvironmentRdpConnections extends React.Component {\n  get environment() {\n    return this.props.scEnvironment;\n  }\n\n  // Returns only the connections that scheme = 'rdp'\n  // [ {id, name: <string>(optional), instanceId: <string>, scheme: 'rdp'}, ... ]\n  get connections() {\n    const connections = this.environment.getConnections(item => item.scheme === 'rdp');\n\n    return connections;\n  }\n\n  render() {\n    const env = this.environment;\n    const state = env.state;\n    const canConnect = state.canConnect;\n    const empty = _.isEmpty(this.connections);\n\n    if (!canConnect) return null;\n    let content = null;\n\n    if (empty) {\n      content = this.renderEmpty();\n    } else {\n      content = this.renderConnections();\n    }\n\n    return <div className=\"fadeIn animated\">{content}</div>;\n  }\n\n  renderConnections() {\n    const env = this.environment;\n    const connections = this.connections;\n\n    return (\n      <div className=\"mt2 mb2 fadeIn animated\">\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"1\">RDP Connections</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {_.map(connections, item => (\n              <ScEnvironmentRdpConnectionRow key={item.id} scEnvironment={env} connectionId={item.id} />\n            ))}\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <Segment placeholder className=\"mt2 mb2\">\n        <Header icon className=\"color-grey\">\n          <Icon name=\"linkify\" />\n          No RDP Connections\n          <Header.Subheader>This workspace does not have any defined RDP connections.</Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ScEnvironmentRdpConnections, {\n  environment: computed,\n  connections: computed,\n});\n\nexport default inject()(withRouter(observer(ScEnvironmentRdpConnections)));\n"],"file":"ScEnvironmentRdpConnections.js"}