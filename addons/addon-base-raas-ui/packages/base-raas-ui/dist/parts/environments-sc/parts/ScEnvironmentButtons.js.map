{"version":3,"sources":["../../../../src/parts/environments-sc/parts/ScEnvironmentButtons.js"],"names":["ScEnvironmentButtons","props","handleViewDetail","goto","environment","id","handleTerminate","handleAction","store","envsStore","terminateScEnvironment","handleStop","stopScEnvironment","handleStart","startScEnvironment","fn","processing","handleToggle","connectionsButtonActive","canChangeState","env","state","showDetailButton","canConnect","canStart","canStop","minHeight","canTerminate","key","content","negative","onClick","scEnvironment","scEnvironmentsStore","React","Component","computed","observable","action"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { decorate, computed, action, observable, runInAction } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Modal } from 'semantic-ui-react';\n\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\n\nimport ScEnvironmentConnections from './ScEnvironmentConnections';\n\n// expected props\n// - scEnvironment (via prop)\n// - showDetailButton (via prop)\n// - scEnvironmentsStore (via injection)\nclass ScEnvironmentButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      // A flag to indicate if we are processing the call to trigger the terminate action\n      this.processing = false;\n      // A flag to indicate if the connections button is active\n      this.connectionsButtonActive = false;\n    });\n  }\n\n  get environment() {\n    return this.props.scEnvironment;\n  }\n\n  get envsStore() {\n    return this.props.scEnvironmentsStore;\n  }\n\n  handleViewDetail = () => {\n    const goto = gotoFn(this);\n    goto(`/workspaces/id/${this.environment.id}`);\n  };\n\n  handleTerminate = async () => {\n    await this.handleAction(async () => {\n      const store = this.envsStore;\n      await store.terminateScEnvironment(this.environment.id);\n    });\n  };\n\n  handleStop = async () => {\n    await this.handleAction(async () => {\n      const store = this.envsStore;\n      await store.stopScEnvironment(this.environment.id);\n    });\n  };\n\n  handleStart = async () => {\n    await this.handleAction(async () => {\n      const store = this.envsStore;\n      await store.startScEnvironment(this.environment.id);\n    });\n  };\n\n  canChangeState() {\n    return this.envsStore.canChangeState(this.environment.id);\n  }\n\n  handleAction = async fn => {\n    this.processing = true;\n    try {\n      await fn();\n    } catch (error) {\n      displayError(error);\n    } finally {\n      runInAction(() => {\n        this.processing = false;\n      });\n    }\n  };\n\n  handleToggle = () => {\n    this.connectionsButtonActive = !this.connectionsButtonActive;\n  };\n\n  render() {\n    const env = this.environment;\n    const state = env.state;\n    const processing = this.processing;\n    const showDetailButton = this.props.showDetailButton;\n    const connectionsButtonActive = this.connectionsButtonActive;\n    const canConnect = state.canConnect;\n    const canStart = state.canStart && this.canChangeState();\n    const canStop = state.canStop && this.canChangeState();\n\n    return (\n      <>\n        <div className=\"clearfix\" style={{ minHeight: '42px' }}>\n          {state.canTerminate && (\n            <Modal\n              trigger={\n                <Button\n                  data-testid=\"sc-env-terminate\"\n                  floated=\"right\"\n                  basic\n                  color=\"red\"\n                  size=\"mini\"\n                  className=\"mt1 mb1\"\n                  loading={processing}\n                >\n                  Terminate\n                </Button>\n              }\n              header=\"Are you sure?\"\n              content=\"This action can not be reverted.\"\n              actions={[\n                'Cancel',\n                { key: 'terminate', content: 'Terminate', negative: true, onClick: this.handleTerminate },\n              ]}\n              size=\"mini\"\n            />\n          )}\n          {canStart && (\n            <Button\n              data-testid=\"sc-env-start\"\n              floated=\"right\"\n              basic\n              color=\"green\"\n              size=\"mini\"\n              className=\"mt1 mb1 ml2\"\n              onClick={this.handleStart}\n              loading={processing}\n            >\n              Start\n            </Button>\n          )}\n          {canStop && (\n            <Button\n              data-testid=\"sc-env-stop\"\n              floated=\"right\"\n              basic\n              color=\"green\"\n              size=\"mini\"\n              className=\"mt1 mb1 ml2\"\n              onClick={this.handleStop}\n              loading={processing}\n            >\n              Stop\n            </Button>\n          )}\n\n          {canConnect && (\n            <Button\n              floated=\"left\"\n              basic\n              size=\"mini\"\n              className=\"mt1 mb1\"\n              toggle\n              active={connectionsButtonActive}\n              onClick={this.handleToggle}\n            >\n              Connections\n            </Button>\n          )}\n          {showDetailButton && (\n            <Button floated=\"left\" basic size=\"mini\" className=\"mt1 mb1 ml2\" onClick={this.handleViewDetail}>\n              View Detail\n            </Button>\n          )}\n        </div>\n        {canConnect && connectionsButtonActive && <ScEnvironmentConnections scEnvironment={env} />}\n      </>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ScEnvironmentButtons, {\n  envsStore: computed,\n  environment: computed,\n  processing: observable,\n  connectionsButtonActive: observable,\n  handleViewDetail: action,\n  handleAction: action,\n  handleToggle: action,\n});\n\nexport default inject('scEnvironmentsStore')(withRouter(observer(ScEnvironmentButtons)));\n"],"file":"ScEnvironmentButtons.js"}