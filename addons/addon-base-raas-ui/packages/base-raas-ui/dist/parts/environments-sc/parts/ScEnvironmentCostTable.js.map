{"version":3,"sources":["../../../../src/parts/environments-sc/parts/ScEnvironmentCostTable.js"],"names":["ScEnvironmentCostTable","costStore","getEnvCostStore","load","startHeartbeat","stopHeartbeat","costsStore","envId","getScEnvironmentCostStore","store","content","error","renderMain","cost","scEnvironmentCost","list","isEmpty","_","renderRow","index","key","value","map","item","date","amount","props","scEnvironmentCostsStore","React","Component","computed"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport { decorate, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Table, Message } from 'semantic-ui-react';\n\nimport { isStoreLoading, isStoreError, isStoreReady } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport { swallowError, nicePrice } from '@aws-ee/base-ui/dist/helpers/utils';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport ProgressPlaceHolder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\n\n// expected props\n// - envId (via prop)\n// - scEnvironmentCostsStore  (via injection)\nclass ScEnvironmentCostTable extends React.Component {\n  componentDidMount() {\n    const costStore = this.getEnvCostStore();\n    if (!isStoreReady(costStore) && !isStoreError(costStore)) {\n      swallowError(costStore.load());\n    }\n\n    costStore.startHeartbeat();\n  }\n\n  componentWillUnmount() {\n    const costStore = this.getEnvCostStore();\n    costStore.stopHeartbeat();\n  }\n\n  get costsStore() {\n    return this.props.scEnvironmentCostsStore;\n  }\n\n  get envId() {\n    return this.props.envId;\n  }\n\n  getEnvCostStore() {\n    const costsStore = this.costsStore;\n    const envId = this.envId;\n    return costsStore.getScEnvironmentCostStore(envId);\n  }\n\n  render() {\n    const store = this.getEnvCostStore();\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} className=\"p0\" />;\n    } else if (isStoreLoading(store)) {\n      content = <ProgressPlaceHolder />;\n    } else if (isStoreReady(store)) {\n      content = this.renderMain();\n    } else {\n      content = null;\n    }\n\n    return <>{content}</>;\n  }\n\n  renderMain() {\n    const costStore = this.getEnvCostStore();\n    const cost = costStore.scEnvironmentCost;\n    const list = cost.list;\n    const isEmpty = _.isEmpty(list);\n    const renderRow = (index, key, value) => (\n      <Table.Row key={index}>\n        <Table.Cell width={5}>{key}</Table.Cell>\n        <Table.Cell width={11} className=\"breakout\">\n          ${nicePrice(value)}\n        </Table.Cell>\n      </Table.Row>\n    );\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table definition className=\"mt3\">\n            <Table.Body>{_.map(list, (item, index) => renderRow(index, item.date, item.amount))}</Table.Body>\n          </Table>\n        )}\n        {isEmpty && <Message className=\"mt3\" content=\"None is available\" />}\n      </>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ScEnvironmentCostTable, {\n  costsStore: computed,\n  envId: computed,\n});\n\nexport default inject('scEnvironmentCostsStore')(withRouter(observer(ScEnvironmentCostTable)));\n"],"file":"ScEnvironmentCostTable.js"}