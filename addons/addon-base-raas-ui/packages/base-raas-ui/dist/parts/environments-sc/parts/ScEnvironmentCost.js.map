{"version":3,"sources":["../../../../src/parts/environments-sc/parts/ScEnvironmentCost.js"],"names":["ScEnvironmentCost","costStore","getEnvCostStore","load","costsStore","envId","getScEnvironmentCostStore","envCost","isLoading","_","isUndefined","isError","isEmpty","error","previousCost","previousDayCost","renderErrorPopup","props","scEnvironmentCostsStore","getScEnvironmentCost","React","Component","computed"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;IACMA,iB;;;;;;;;;;;;;wCACgB;AAClB,UAAMC,SAAS,GAAG,KAAKC,eAAL,EAAlB;;AACA,UAAI,CAAC,6BAAaD,SAAb,CAAD,IAA4B,CAAC,6BAAaA,SAAb,CAAjC,EAA0D;AACxD,iCAAaA,SAAS,CAACE,IAAV,EAAb;AACD;AACF;;;sCAeiB;AAChB,UAAMC,UAAU,GAAG,KAAKA,UAAxB;AACA,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACA,aAAOD,UAAU,CAACE,yBAAX,CAAqCD,KAArC,CAAP;AACD;;;6BAEQ;AACP,UAAME,OAAO,GAAG,KAAKA,OAArB;;AACA,UAAMC,SAAS,GAAGC,mBAAEC,WAAF,CAAcH,OAAd,CAAlB;;AACA,UAAMI,OAAO,GAAG,CAACH,SAAD,IAAc,CAACC,mBAAEG,OAAF,CAAUL,OAAO,CAACM,KAAlB,CAA/B;AACA,UAAMC,YAAY,GAAG,CAACN,SAAD,IAAc,CAACG,OAAf,GAAyBJ,OAAO,CAACQ,eAAjC,GAAmD,CAAxE;;AAEA,UAAIP,SAAJ,EAAe;AACb,4BACE,gCAAC,4BAAD,qBACE,gCAAC,4BAAD,CAAa,IAAb;AAAkB,UAAA,MAAM,EAAC;AAAzB,UADF,eAEE,gCAAC,4BAAD,CAAa,IAAb;AAAkB,UAAA,MAAM,EAAC;AAAzB,UAFF,CADF;AAMD;;AAED,0BACE,+EACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,gCAAC,0BAAD;AAAW,QAAA,KAAK,EAAEG,OAAO,GAAG,KAAH,GAAW,OAApC;AAA6C,QAAA,IAAI,EAAC;AAAlD,sBACE,gCAAC,0BAAD,CAAW,KAAX,QAAkBA,OAAO,GAAG,KAAH,cAAe,sBAAUG,YAAV,CAAf,CAAzB,CADF,eAEE,gCAAC,0BAAD,CAAW,KAAX,2BAFF,CADF,CADF,EAOGH,OAAO,IAAI,KAAKK,gBAAL,CAAsBT,OAAO,CAACM,KAA9B,CAPd,CADF;AAWD;;;qCAEgBA,K,EAAO;AACtB,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,gCAAC,sBAAD;AACE,QAAA,OAAO,eACL,gCAAC,sBAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,MAAxB;AAAyB,UAAA,KAAK,EAAC;AAA/B,wBAFJ;AAME,QAAA,KAAK;AANP,sBAQE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,sGADF,eAEE,uLAFF,eAME,qFANF,eAOE,2CAAIA,KAAJ,CAPF,CARF,CADF,CADF;AAsBD;;;wBAtEgB;AACf,aAAO,KAAKI,KAAL,CAAWC,uBAAlB;AACD;;;wBAEW;AACV,aAAO,KAAKD,KAAL,CAAWZ,KAAlB;AACD;;;wBAEa;AACZ,UAAMA,KAAK,GAAG,KAAKA,KAAnB;AACA,aAAO,KAAKD,UAAL,CAAgBe,oBAAhB,CAAqCd,KAArC,CAAP;AACD;;;;EAnB6Be,kBAAMC,S,GAiFtC;;;AACA,oBAASrB,iBAAT,EAA4B;AAC1BI,EAAAA,UAAU,EAAEkB,cADc;AAE1BjB,EAAAA,KAAK,EAAEiB;AAFmB,CAA5B;;eAKe,uBAAO,yBAAP,EAAkC,gCAAW,yBAAStB,iBAAT,CAAX,CAAlC,C","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport { decorate, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Label, Popup, Statistic, Placeholder } from 'semantic-ui-react';\n\nimport { isStoreError, isStoreReady } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport { swallowError, nicePrice } from '@aws-ee/base-ui/dist/helpers/utils';\n\n// expected props\n// - envId (via prop)\n// - scEnvironmentCostsStore  (via injection)\nclass ScEnvironmentCost extends React.Component {\n  componentDidMount() {\n    const costStore = this.getEnvCostStore();\n    if (!isStoreReady(costStore) && !isStoreError(costStore)) {\n      swallowError(costStore.load());\n    }\n  }\n\n  get costsStore() {\n    return this.props.scEnvironmentCostsStore;\n  }\n\n  get envId() {\n    return this.props.envId;\n  }\n\n  get envCost() {\n    const envId = this.envId;\n    return this.costsStore.getScEnvironmentCost(envId);\n  }\n\n  getEnvCostStore() {\n    const costsStore = this.costsStore;\n    const envId = this.envId;\n    return costsStore.getScEnvironmentCostStore(envId);\n  }\n\n  render() {\n    const envCost = this.envCost;\n    const isLoading = _.isUndefined(envCost);\n    const isError = !isLoading && !_.isEmpty(envCost.error);\n    const previousCost = !isLoading && !isError ? envCost.previousDayCost : 0;\n\n    if (isLoading) {\n      return (\n        <Placeholder>\n          <Placeholder.Line length=\"full\" />\n          <Placeholder.Line length=\"full\" />\n        </Placeholder>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"center breakout\">\n          <Statistic color={isError ? 'red' : 'black'} size=\"mini\">\n            <Statistic.Value>{isError ? 'N/A' : `$${nicePrice(previousCost)}`}</Statistic.Value>\n            <Statistic.Label>Yesterday&apos;s Cost</Statistic.Label>\n          </Statistic>\n        </div>\n        {isError && this.renderErrorPopup(envCost.error)}\n      </>\n    );\n  }\n\n  renderErrorPopup(error) {\n    return (\n      <div className=\"mt2 center\">\n        <Popup\n          trigger={\n            <Label size=\"mini\" basic color=\"red\">\n              Show Error\n            </Label>\n          }\n          basic\n        >\n          <div className=\"color-red\">\n            <p>An error occurred while retrieving the cost information.</p>\n            <p>\n              If this workspace is provisioned in a new account, verify with your administer that the cost explorer\n              feature is enabled for the account.\n            </p>\n            <p>The system returned this error message:</p>\n            <p>{error}</p>\n          </div>\n        </Popup>\n      </div>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ScEnvironmentCost, {\n  costsStore: computed,\n  envId: computed,\n});\n\nexport default inject('scEnvironmentCostsStore')(withRouter(observer(ScEnvironmentCost)));\n"],"file":"ScEnvironmentCost.js"}