{"version":3,"sources":["../../../src/parts/environments-sc/ScEnvironmentsList.js"],"names":["ScEnvironmentsList","props","handleCreateEnvironment","event","preventDefault","stopPropagation","goto","handleSelectedFilter","name","selectedFilter","key","storageKeys","workspacesFilterName","storage","setItem","getItem","filterNames","ALL","window","scrollTo","store","envsStore","load","startHeartbeat","typesStore","envTypesStore","stopHeartbeat","content","error","renderEmpty","renderMain","renderTitle","list","filtered","isEmpty","_","map","item","id","renderTotal","total","scEnvironmentsStore","React","Component","observable","computed","action"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAOA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;IACMA,kB;;;;;AACJ,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAmCnBC,uBAnCmB,GAmCO,UAAAC,KAAK,EAAI;AACjCA,MAAAA,KAAK,CAACC,cAAN;AACAD,MAAAA,KAAK,CAACE,eAAN;;AAEA,UAAMC,KAAI,GAAG,mDAAb;;AACAA,MAAAA,KAAI,sBAAJ;AACD,KAzCkB;;AAAA,UA2CnBC,oBA3CmB,GA2CI,UAAAC,IAAI,EAAI;AAC7B,YAAKC,cAAL,GAAsBD,IAAtB;AACA,UAAME,GAAG,GAAGC,6BAAYC,oBAAxB;;AACAC,qBAAQC,OAAR,CAAgBJ,GAAhB,EAAqBF,IAArB;AACD,KA/CkB;;AAEjB,2BAAY,YAAM;AAChB,UAAME,GAAG,GAAGC,6BAAYC,oBAAxB;;AACA,UAAMJ,IAAI,GAAGK,eAAQE,OAAR,CAAgBL,GAAhB,KAAwBM,iCAAYC,GAAjD;;AACAJ,qBAAQC,OAAR,CAAgBJ,GAAhB,EAAqBF,IAArB;;AACA,YAAKC,cAAL,GAAsBD,IAAtB;AACD,KALD;AAFiB;AAQlB;;;;wCAEmB;AAClBU,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,UAAMC,KAAK,GAAG,KAAKC,SAAnB;AACA,+BAAaD,KAAK,CAACE,IAAN,EAAb;AACAF,MAAAA,KAAK,CAACG,cAAN;AAEA,UAAMC,UAAU,GAAG,KAAKC,aAAxB;;AACA,UAAI,CAAC,6BAAaD,UAAb,CAAL,EAA+B;AAC7B,iCAAaA,UAAU,CAACF,IAAX,EAAb;AACD;AACF;;;2CAEsB;AACrB,UAAMF,KAAK,GAAG,KAAKC,SAAnB;AACAD,MAAAA,KAAK,CAACM,aAAN;AACD;;;6BAwBQ;AACP,UAAMN,KAAK,GAAG,KAAKC,SAAnB;AACA,UAAIM,OAAO,GAAG,IAAd;;AAEA,UAAI,6BAAaP,KAAb,CAAJ,EAAyB;AACvBO,QAAAA,OAAO,gBAAG,gCAAC,oBAAD;AAAU,UAAA,KAAK,EAAEP,KAAK,CAACQ,KAAvB;AAA8B,UAAA,SAAS,EAAC;AAAxC,UAAV;AACD,OAFD,MAEO,IAAI,+BAAeR,KAAf,CAAJ,EAA2B;AAChCO,QAAAA,OAAO,gBAAG,gCAAC,oCAAD;AAAqB,UAAA,YAAY,EAAE;AAAnC,UAAV;AACD,OAFM,MAEA,IAAI,6BAAaP,KAAb,CAAJ,EAAyB;AAC9BO,QAAAA,OAAO,GAAG,KAAKE,WAAL,EAAV;AACD,OAFM,MAEA,IAAI,gCAAgBT,KAAhB,CAAJ,EAA4B;AACjCO,QAAAA,OAAO,GAAG,KAAKG,UAAL,EAAV;AACD,OAFM,MAEA;AACLH,QAAAA,OAAO,GAAG,IAAV;AACD;;AAED,0BACE,gCAAC,0BAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACG,KAAKI,WAAL,EADH,EAEGJ,OAFH,CADF;AAMD;;;iCAEY;AACX,UAAMP,KAAK,GAAG,KAAKC,SAAnB;AACA,UAAMZ,cAAc,GAAG,KAAKA,cAA5B;AACA,UAAMuB,IAAI,GAAGZ,KAAK,CAACa,QAAN,CAAexB,cAAf,CAAb;;AACA,UAAMyB,OAAO,GAAGC,mBAAED,OAAF,CAAUF,IAAV,CAAhB;;AAEA,0BACE;AAAK,uBAAY;AAAjB,sBACE,gCAAC,uCAAD;AACE,QAAA,cAAc,EAAEvB,cADlB;AAEE,QAAA,gBAAgB,EAAE,KAAKF,oBAFzB;AAGE,QAAA,SAAS,EAAC;AAHZ,QADF,EAMG,CAAC2B,OAAD,IACCC,mBAAEC,GAAF,CAAMJ,IAAN,EAAY,UAAAK,IAAI;AAAA,4BACd,gCAAC,wBAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,QAAQ,MAApC;AAAqC,UAAA,GAAG,EAAEA,IAAI,CAACC;AAA/C,wBACE,gCAAC,6BAAD;AAAmB,UAAA,aAAa,EAAED;AAAlC,UADF,CADc;AAAA,OAAhB,CAPJ,EAYGH,OAAO,iBACN,gCAAC,wBAAD;AAAS,QAAA,WAAW;AAApB,sBACE,gCAAC,uBAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,SAAS,EAAC;AAAvB,sBACE,gCAAC,qBAAD;AAAM,QAAA,IAAI,EAAC;AAAX,QADF,uEAGE,gCAAC,uBAAD,CAAQ,SAAR,kDAHF,CADF,CAbJ,CADF;AAwBD;;;kCAEa;AACZ,0BACE,gCAAC,wBAAD;AAAS,uBAAY,YAArB;AAAkC,QAAA,WAAW;AAA7C,sBACE,gCAAC,uBAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,SAAS,EAAC;AAAvB,sBACE,gCAAC,qBAAD;AAAM,QAAA,IAAI,EAAC;AAAX,QADF,yCAGE,gCAAC,uBAAD,CAAQ,SAAR,2EAHF,CADF,CADF;AASD;;;kCAEa;AACZ,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,gCAAC,uBAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,SAAS,EAAC;AAA1B,sBACE,gCAAC,qBAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,SAAS,EAAC;AAA9B,QADF,eAEE,gCAAC,uBAAD,CAAQ,OAAR;AAAgB,QAAA,SAAS,EAAC;AAA1B,iCAA4D,KAAKK,WAAL,EAA5D,CAFF,CADF,eAKE,0DACE,gCAAC,uBAAD;AACE,uBAAY,kBADd;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,KAAK,MAJP;AAKE,QAAA,OAAO,EAAE,KAAKrC;AALhB,qCADF,CALF,CADF;AAmBD;;;kCAEa;AACZ,UAAMkB,KAAK,GAAG,KAAKC,SAAnB;AACA,UAAI,6BAAaD,KAAb,KAAuB,+BAAeA,KAAf,CAA3B,EAAkD,OAAO,IAAP;AAElD,0BAAO,gCAAC,sBAAD;AAAO,QAAA,QAAQ;AAAf,SAAiBA,KAAK,CAACoB,KAAvB,CAAP;AACD;;;wBArHmB;AAClB,aAAO,KAAKvC,KAAL,CAAWwB,aAAlB;AACD;;;wBAEe;AACd,aAAO,KAAKxB,KAAL,CAAWwC,mBAAlB;AACD;;;;EAlC8BC,kBAAMC,S,GAoJvC;;;AACA,oBAAS3C,kBAAT,EAA6B;AAC3BS,EAAAA,cAAc,EAAEmC,gBADW;AAE3BvB,EAAAA,SAAS,EAAEwB,cAFgB;AAG3BpB,EAAAA,aAAa,EAAEoB,cAHY;AAI3B3C,EAAAA,uBAAuB,EAAE4C,YAJE;AAK3BvC,EAAAA,oBAAoB,EAAEuC;AALK,CAA7B;;eAQe,uBAAO,qBAAP,EAA8B,eAA9B,EAA+C,gCAAW,yBAAS9C,kBAAT,CAAX,CAA/C,C","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport { decorate, computed, action, observable, runInAction } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Container, Segment, Header, Icon, Button, Label } from 'semantic-ui-react';\n\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport { swallowError, storage } from '@aws-ee/base-ui/dist/helpers/utils';\nimport storageKeys from '@aws-ee/base-ui/dist/models/constants/local-storage-keys';\nimport {\n  isStoreLoading,\n  isStoreEmpty,\n  isStoreNotEmpty,\n  isStoreError,\n  isStoreReady,\n} from '@aws-ee/base-ui/dist/models/BaseStore';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport ProgressPlaceHolder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\n\nimport { filterNames } from '../../models/environments-sc/ScEnvironmentsStore';\nimport ScEnvironmentCard from './ScEnvironmentCard';\nimport ScEnvironmentsFilterButtons from './parts/ScEnvironmentsFilterButtons';\n\n// expected props\n// - scEnvironmentsStore (via injection)\n// - envTypesStore (via injection)\nclass ScEnvironmentsList extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      const key = storageKeys.workspacesFilterName;\n      const name = storage.getItem(key) || filterNames.ALL;\n      storage.setItem(key, name);\n      this.selectedFilter = name;\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    const store = this.envsStore;\n    swallowError(store.load());\n    store.startHeartbeat();\n\n    const typesStore = this.envTypesStore;\n    if (!isStoreReady(typesStore)) {\n      swallowError(typesStore.load());\n    }\n  }\n\n  componentWillUnmount() {\n    const store = this.envsStore;\n    store.stopHeartbeat();\n  }\n\n  get envTypesStore() {\n    return this.props.envTypesStore;\n  }\n\n  get envsStore() {\n    return this.props.scEnvironmentsStore;\n  }\n\n  handleCreateEnvironment = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const goto = gotoFn(this);\n    goto(`/workspaces/create`);\n  };\n\n  handleSelectedFilter = name => {\n    this.selectedFilter = name;\n    const key = storageKeys.workspacesFilterName;\n    storage.setItem(key, name);\n  };\n\n  render() {\n    const store = this.envsStore;\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} className=\"p0\" />;\n    } else if (isStoreLoading(store)) {\n      content = <ProgressPlaceHolder segmentCount={3} />;\n    } else if (isStoreEmpty(store)) {\n      content = this.renderEmpty();\n    } else if (isStoreNotEmpty(store)) {\n      content = this.renderMain();\n    } else {\n      content = null;\n    }\n\n    return (\n      <Container className=\"mt3 animated fadeIn\">\n        {this.renderTitle()}\n        {content}\n      </Container>\n    );\n  }\n\n  renderMain() {\n    const store = this.envsStore;\n    const selectedFilter = this.selectedFilter;\n    const list = store.filtered(selectedFilter);\n    const isEmpty = _.isEmpty(list);\n\n    return (\n      <div data-testid=\"workspaces\">\n        <ScEnvironmentsFilterButtons\n          selectedFilter={selectedFilter}\n          onSelectedFilter={this.handleSelectedFilter}\n          className=\"mb3\"\n        />\n        {!isEmpty &&\n          _.map(list, item => (\n            <Segment className=\"p3 mb4\" clearing key={item.id}>\n              <ScEnvironmentCard scEnvironment={item} />\n            </Segment>\n          ))}\n        {isEmpty && (\n          <Segment placeholder>\n            <Header icon className=\"color-grey\">\n              <Icon name=\"server\" />\n              No research workspaces matching the selected filter.\n              <Header.Subheader>Select &apos;All&apos; to view all the workspaces</Header.Subheader>\n            </Header>\n          </Segment>\n        )}\n      </div>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <Segment data-testid=\"workspaces\" placeholder>\n        <Header icon className=\"color-grey\">\n          <Icon name=\"server\" />\n          No research workspaces\n          <Header.Subheader>To create a research workspace, click Create Research Workspace.</Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n\n  renderTitle() {\n    return (\n      <div className=\"mb3 flex\">\n        <Header as=\"h3\" className=\"color-grey mt1 mb0 flex-auto\">\n          <Icon name=\"server\" className=\"align-top\" />\n          <Header.Content className=\"left-align\">Research Workspaces {this.renderTotal()}</Header.Content>\n        </Header>\n        <div>\n          <Button\n            data-testid=\"create-workspace\"\n            color=\"blue\"\n            size=\"medium\"\n            basic\n            onClick={this.handleCreateEnvironment}\n          >\n            Create Research Workspace\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  renderTotal() {\n    const store = this.envsStore;\n    if (isStoreError(store) || isStoreLoading(store)) return null;\n\n    return <Label circular>{store.total}</Label>;\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ScEnvironmentsList, {\n  selectedFilter: observable,\n  envsStore: computed,\n  envTypesStore: computed,\n  handleCreateEnvironment: action,\n  handleSelectedFilter: action,\n});\n\nexport default inject('scEnvironmentsStore', 'envTypesStore')(withRouter(observer(ScEnvironmentsList)));\n"],"file":"ScEnvironmentsList.js"}