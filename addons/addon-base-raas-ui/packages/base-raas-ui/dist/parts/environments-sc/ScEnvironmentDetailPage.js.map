{"version":3,"sources":["../../../src/parts/environments-sc/ScEnvironmentDetailPage.js"],"names":["TabPaneWrapper","props","children","React","Component","ScEnvironmentDetailPage","window","scrollTo","store","getEnvStore","load","startHeartbeat","stopHeartbeat","envsStore","envId","instanceId","getScEnvironmentStore","scEnvironment","content","error","renderMain","renderBreadcrumb","goto","env","getEnv","renderTitle","renderError","renderButtons","description","renderDetailTable","id","renderTabs","studyIds","_","get","studyCount","size","renderRow","key","value","renderStatus","createdBy","join","isEmpty","projectId","cidr","envTypeId","name","createdAt","state","cursor","color","spinner","display","tip","panes","menuItem","render","renderCfnOutput","secondary","pointing","outputs","index","desc","map","item","OutputKey","OutputValue","Description","scEnvironmentsStore","match","params","computed"],"mappings":"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","sourcesContent":["/* eslint-disable max-classes-per-file */\nimport React from 'react';\nimport _ from 'lodash';\nimport { decorate, computed } from 'mobx';\nimport { observer, inject, Observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Container,\n  Breadcrumb,\n  Divider,\n  Grid,\n  Segment,\n  Table,\n  Header,\n  Message,\n  Popup,\n  Label,\n  Icon,\n  Tab,\n} from 'semantic-ui-react';\nimport TimeAgo from 'react-timeago';\n\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { isStoreLoading, isStoreError, isStoreReady } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport ProgressPlaceHolder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\n\nimport By from '../helpers/By';\nimport ScEnvironmentButtons from './parts/ScEnvironmentButtons';\nimport ScEnvironmentCost from './parts/ScEnvironmentCost';\nimport ScEnvironmentTypeName from './parts/ScEnvironmentTypeName';\nimport ScEnvironmentCostTable from './parts/ScEnvironmentCostTable';\n\n// This component is used with the TabPane to replace the default Segment wrapper since\n// we don't want to display the border.\n// eslint-disable-next-line react/prefer-stateless-function\nclass TabPaneWrapper extends React.Component {\n  render() {\n    return <>{this.props.children}</>;\n  }\n}\n\n// expected props\n// - scEnvironmentsStore (via injection)\nclass ScEnvironmentDetailPage extends React.Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    const store = this.getEnvStore();\n    if (store) {\n      swallowError(store.load());\n      store.startHeartbeat();\n    }\n  }\n\n  componentWillUnmount() {\n    const store = this.getEnvStore();\n    if (store) {\n      store.stopHeartbeat();\n    }\n  }\n\n  get envsStore() {\n    return this.props.scEnvironmentsStore;\n  }\n\n  get instanceId() {\n    return (this.props.match.params || {}).instanceId;\n  }\n\n  getEnvStore() {\n    const envsStore = this.envsStore;\n    const envId = this.instanceId;\n    return envsStore.getScEnvironmentStore(envId);\n  }\n\n  getEnv() {\n    const store = this.getEnvStore();\n    if (!store) return {};\n    if (!isStoreReady(store)) return {};\n    return store.scEnvironment;\n  }\n\n  render() {\n    const store = this.getEnvStore();\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} className=\"p0\" />;\n    } else if (isStoreLoading(store)) {\n      content = <ProgressPlaceHolder />;\n    } else if (isStoreReady(store)) {\n      content = this.renderMain();\n    } else {\n      content = null;\n    }\n\n    return (\n      <Container className=\"mt3\">\n        {this.renderBreadcrumb()}\n        {content}\n      </Container>\n    );\n  }\n\n  renderBreadcrumb() {\n    const envId = this.instanceId;\n    const goto = gotoFn(this);\n\n    return (\n      <Breadcrumb className=\"block mb3\">\n        <Breadcrumb.Section link onClick={() => goto('/workspaces')}>\n          Research Workspaces\n        </Breadcrumb.Section>\n        <Breadcrumb.Divider icon=\"right angle\" />\n        <Breadcrumb.Section active>Workspace # {envId}</Breadcrumb.Section>\n      </Breadcrumb>\n    );\n  }\n\n  renderMain() {\n    const env = this.getEnv();\n\n    return (\n      <>\n        {this.renderTitle(env)}\n        {this.renderError(env)}\n        <Divider className=\"mt1 mb1\" />\n        {this.renderButtons(env)}\n        <Divider className=\"mt1\" />\n        {env.description || 'Not description for this workspace was provided.'}\n        <Grid columns={2} stackable className=\"mt2\">\n          <Grid.Row stretched>\n            <Grid.Column width={12}>{this.renderDetailTable(env)}</Grid.Column>\n            <Grid.Column width={4}>\n              <Segment className=\"flex items-center\">\n                <div className=\"w-100 overflow-hidden\">\n                  <ScEnvironmentCost envId={env.id} />\n                </div>\n              </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        {this.renderTabs(env)}\n      </>\n    );\n  }\n\n  renderDetailTable(env) {\n    const studyIds = _.get(env, 'studyIds', []);\n    const studyCount = _.size(studyIds);\n    const renderRow = (key, value) => (\n      <Table.Row>\n        <Table.Cell width={5}>{key}</Table.Cell>\n        <Table.Cell width={11} className=\"breakout\">\n          {value}\n        </Table.Cell>\n      </Table.Row>\n    );\n\n    return (\n      <Table definition>\n        <Table.Body>\n          {renderRow('Status', this.renderStatus(env))}\n          {renderRow('Owner', <By uid={env.createdBy} skipPrefix />)}\n          {renderRow('Studies', studyCount === 0 ? 'No studies linked to this workspace' : studyIds.join(', '))}\n          {renderRow('Project', _.isEmpty(env.projectId) ? 'N/A' : env.projectId)}\n          {renderRow('Restricted CIDR', _.isEmpty(env.cidr) ? 'N/A' : env.cidr)}\n          {renderRow('Workspace Type', <ScEnvironmentTypeName envTypeId={env.envTypeId} />)}\n        </Table.Body>\n      </Table>\n    );\n  }\n\n  renderButtons(env) {\n    return <ScEnvironmentButtons scEnvironment={env} />;\n  }\n\n  renderTitle(env) {\n    return (\n      <Header as=\"h3\" className=\"mt1\">\n        <Icon name=\"server\" className=\"align-top\" />\n        <Header.Content className=\"left-align\">{env.name}</Header.Content>\n        <Header.Subheader>\n          <span className=\"fs-8 color-grey\">\n            Created <TimeAgo date={env.createdAt} className=\"mr2\" /> <By uid={env.createdBy} className=\"mr2\" />\n          </span>\n          <span className=\"fs-8 color-grey mr2\"> {env.id}</span>\n        </Header.Subheader>\n      </Header>\n    );\n  }\n\n  renderStatus(env) {\n    const state = env.state;\n    return (\n      <div style={{ cursor: 'default' }}>\n        <Popup\n          trigger={\n            <Label size=\"mini\" color={state.color}>\n              {state.spinner && <Icon name=\"spinner\" loading />}\n              {state.display}\n            </Label>\n          }\n        >\n          {state.tip}\n        </Popup>\n      </div>\n    );\n  }\n\n  renderError(env) {\n    if (_.isEmpty(env.error)) return null;\n\n    return (\n      <Message negative>\n        <p>{env.error}</p>\n      </Message>\n    );\n  }\n\n  renderTabs(env) {\n    const panes = [\n      {\n        menuItem: 'Cost',\n        render: () => (\n          <Tab.Pane attached={false} key=\"cost\" as={TabPaneWrapper}>\n            <Observer>{() => <ScEnvironmentCostTable envId={env.id} />}</Observer>\n          </Tab.Pane>\n        ),\n      },\n      {\n        menuItem: 'CloudFormation Output',\n        render: () => (\n          <Tab.Pane attached={false} key=\"cfn-outputs\" as={TabPaneWrapper}>\n            <Observer>{() => this.renderCfnOutput(env)}</Observer>\n          </Tab.Pane>\n        ),\n      },\n    ];\n\n    return <Tab className=\"mt4\" menu={{ secondary: true, pointing: true }} renderActiveOnly panes={panes} />;\n  }\n\n  renderCfnOutput(env) {\n    const outputs = env.outputs;\n    const isEmpty = _.isEmpty(outputs);\n    const renderRow = (index, key, value, desc) => (\n      <Table.Row key={index}>\n        <Table.Cell width={5}>{key}</Table.Cell>\n        <Table.Cell width={11} className=\"breakout\">\n          {value}\n          <div className=\"fs-7\">{desc}</div>\n        </Table.Cell>\n      </Table.Row>\n    );\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table definition className=\"mt3\">\n            <Table.Body>\n              {_.map(outputs, (item, index) => renderRow(index, item.OutputKey, item.OutputValue, item.Description))}\n            </Table.Body>\n          </Table>\n        )}\n        {isEmpty && <Message className=\"mt3\" content=\"None is available\" />}\n      </>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ScEnvironmentDetailPage, {\n  instanceId: computed,\n  envsStore: computed,\n});\n\nexport default inject('scEnvironmentsStore')(withRouter(observer(ScEnvironmentDetailPage)));\n"],"file":"ScEnvironmentDetailPage.js"}