{"version":3,"sources":["../../../../src/parts/environments-sc/setup/CreateInternalEnvForm.js"],"names":["CreateInternalEnvForm","props","handlePrevious","_","isFunction","onPrevious","handleNext","form","data","values","envTypeId","onNext","projectIdOptions","cidr","defaultCidr","title","renderForm","askForCidr","isUndefined","configurations","processing","onCancel","$","store","userStore","projectIdDropdown","React","Component","observable","computed","action"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,qB;;;;;AACJ,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UA4BnBC,cA5BmB,GA4BF,YAAM;AACrB,UAAIC,mBAAEC,UAAF,CAAa,MAAKH,KAAL,CAAWI,UAAxB,CAAJ,EAAyC,OAAO,MAAKJ,KAAL,CAAWI,UAAX,EAAP;AAC1C,KA9BkB;;AAAA,UAiCnBC,UAjCmB;AAAA,yEAiCN,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,gBAAAA,IADK,qBACOD,IAAI,CAACE,MAAL,EADP;AACsBC,kBAAAA,SAAS,EAAE,MAAKA;AADtC;AAAA;AAAA;AAAA,uBAIH,MAAKT,KAAL,CAAWU,MAAX,CAAkBH,IAAlB,CAJG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMT;;AANS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAjCM;;AAAA;AAAA;AAAA;AAAA;;AAEjB,2BAAY,YAAM;AAChB,YAAKD,IAAL,GAAY,qDAAyB;AACnCK,QAAAA,gBAAgB,EAAE,MAAKA,gBADY;AAEnCC,QAAAA,IAAI,EAAE,MAAKZ,KAAL,CAAWa;AAFkB,OAAzB,CAAZ;AAID,KALD;AAFiB;AAQlB;;;;6BAmCQ;AACP,UAAMC,KAAK,GAAG,KAAKd,KAAL,CAAWc,KAAX,IAAoB,EAAlC;AACA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,gCAAC,uBAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,SAAS,EAAC;AAA1B,SACGA,KADH,CADF,EAIG,KAAKC,UAAL,EAJH,CADF;AAQD;;;iCAEY;AACX,UAAMT,IAAI,GAAG,KAAKA,IAAlB;AACA,UAAMU,UAAU,GAAG,CAACd,mBAAEe,WAAF,CAAc,KAAKjB,KAAL,CAAWa,WAAzB,CAApB;AACA,UAAMK,cAAc,GAAG,KAAKA,cAA5B;AAEA,0BACE,gCAAC,wBAAD;AAAS,QAAA,QAAQ,MAAjB;AAAkB,QAAA,SAAS,EAAC;AAA5B,sBACE,gCAAC,gBAAD;AAAM,QAAA,IAAI,EAAEZ,IAAZ;AAAkB,QAAA,QAAQ,EAAE,KAAKL,cAAjC;AAAiD,QAAA,SAAS,EAAE,KAAKI;AAAjE,SACG;AAAA,YAAGc,UAAH,SAAGA,UAAH;AAAA,YAA+BC,QAA/B,SAA+BA,QAA/B;AAAA,4BACC,+EACE,gCAAC,iBAAD;AAAO,UAAA,UAAU,EAAC,gBAAlB;AAAmC,UAAA,KAAK,EAAEd,IAAI,CAACe,CAAL,CAAO,MAAP;AAA1C,UADF,EAEGL,UAAU,iBAAI,gCAAC,iBAAD;AAAO,UAAA,KAAK,EAAEV,IAAI,CAACe,CAAL,CAAO,MAAP;AAAd,UAFjB,eAGE,gCAAC,oBAAD;AAAU,UAAA,UAAU,EAAC,YAArB;AAAkC,UAAA,KAAK,EAAEf,IAAI,CAACe,CAAL,CAAO,WAAP,CAAzC;AAA8D,UAAA,KAAK,MAAnE;AAAoE,UAAA,SAAS;AAA7E,UAHF,eAIE,gCAAC,oCAAD;AAA0B,UAAA,cAAc,EAAEH,cAA1C;AAA0D,UAAA,SAAS,EAAEZ,IAAI,CAACe,CAAL,CAAO,iBAAP;AAArE,UAJF,eAKE,gCAAC,oBAAD;AAAU,UAAA,UAAU,EAAC,uBAArB;AAA6C,UAAA,KAAK,EAAEf,IAAI,CAACe,CAAL,CAAO,aAAP;AAApD,UALF,eAOE,gCAAC,uBAAD;AACE,UAAA,OAAO,EAAC,OADV;AAEE,UAAA,SAAS,EAAC,KAFZ;AAGE,UAAA,OAAO,MAHT;AAIE,UAAA,OAAO,EAAC,2BAJV;AAKE,UAAA,QAAQ,EAAEF,UALZ;AAME,UAAA,IAAI,EAAC;AANP,UAPF,eAgBE,gCAAC,uBAAD;AACE,UAAA,OAAO,EAAC,OADV;AAEE,UAAA,IAAI,EAAC,YAFP;AAGE,UAAA,aAAa,EAAC,MAHhB;AAIE,UAAA,SAAS,EAAC,KAJZ;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,QAAQ,EAAEA,UANZ;AAOE,UAAA,OAAO,EAAEC;AAPX,UAhBF,CADD;AAAA,OADH,CADF,CADF;AAkCD;;;wBApFsB;AACrB,UAAME,KAAK,GAAG,KAAKC,SAAnB;AACA,aAAOD,KAAK,CAACE,iBAAb;AACD;;;wBAEe;AACd,aAAO,KAAKxB,KAAL,CAAWS,SAAlB;AACD;;;wBAEoB;AACnB,aAAO,KAAKT,KAAL,CAAWkB,cAAlB;AACD;;;wBAEe;AACd,aAAO,KAAKlB,KAAL,CAAWuB,SAAlB;AACD,K,CAED;;;;;EA5BkCE,kBAAMC,S,GAkG1C;;;AACA,oBAAS3B,qBAAT,EAAgC;AAC9BO,EAAAA,IAAI,EAAEqB,gBADwB;AAE9BlB,EAAAA,SAAS,EAAEmB,cAFmB;AAG9BV,EAAAA,cAAc,EAAEU,cAHc;AAI9BL,EAAAA,SAAS,EAAEK,cAJmB;AAK9BjB,EAAAA,gBAAgB,EAAEiB,cALY;AAM9B3B,EAAAA,cAAc,EAAE4B;AANc,CAAhC;;eASe,uBAAO,WAAP,EAAoB,wBAApB,EAA8C,yBAAS9B,qBAAT,CAA9C,C","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport { decorate, computed, runInAction, observable, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Segment, Button, Header } from 'semantic-ui-react';\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport Dropdown from '@aws-ee/base-ui/dist/parts/helpers/fields/DropDown';\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\nimport Input from '@aws-ee/base-ui/dist/parts/helpers/fields/Input';\nimport TextArea from '@aws-ee/base-ui/dist/parts/helpers/fields/TextArea';\n\nimport { getCreateInternalEnvForm } from '../../../models/forms/CreateInternalEnvForm';\nimport SelectConfigurationCards from './SelectConfigurationCards';\n\n// expected props\n// - onPrevious (via props)\n// - onNext (via props) a function is called with the form data\n// - envTypeId (via props)\n// - configurations (via props)\n// - title (via props)\n// - defaultCidr (via props)\n// - clientInformationStore (via injection)\n// - userStore (via injection)\nclass CreateInternalEnvForm extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.form = getCreateInternalEnvForm({\n        projectIdOptions: this.projectIdOptions,\n        cidr: this.props.defaultCidr,\n      });\n    });\n  }\n\n  get projectIdOptions() {\n    const store = this.userStore;\n    return store.projectIdDropdown;\n  }\n\n  get envTypeId() {\n    return this.props.envTypeId;\n  }\n\n  get configurations() {\n    return this.props.configurations;\n  }\n\n  get userStore() {\n    return this.props.userStore;\n  }\n\n  // eslint-disable-next-line consistent-return\n  handlePrevious = () => {\n    if (_.isFunction(this.props.onPrevious)) return this.props.onPrevious();\n  };\n\n  // eslint-disable-next-line consistent-return\n  handleNext = async form => {\n    const data = { ...form.values(), envTypeId: this.envTypeId };\n\n    try {\n      await this.props.onNext(data);\n    } catch (error) {\n      displayError(error);\n    }\n  };\n\n  render() {\n    const title = this.props.title || '';\n    return (\n      <div className=\"mt2\">\n        <Header as=\"h3\" textAlign=\"center\">\n          {title}\n        </Header>\n        {this.renderForm()}\n      </div>\n    );\n  }\n\n  renderForm() {\n    const form = this.form;\n    const askForCidr = !_.isUndefined(this.props.defaultCidr);\n    const configurations = this.configurations;\n\n    return (\n      <Segment clearing className=\"p3 mb3\">\n        <Form form={form} onCancel={this.handlePrevious} onSuccess={this.handleNext}>\n          {({ processing, /* onSubmit, */ onCancel }) => (\n            <>\n              <Input dataTestId=\"workspace-name\" field={form.$('name')} />\n              {askForCidr && <Input field={form.$('cidr')} />}\n              <Dropdown dataTestId=\"project-id\" field={form.$('projectId')} fluid selection />\n              <SelectConfigurationCards configurations={configurations} formField={form.$('envTypeConfigId')} />\n              <TextArea dataTestId=\"description-text-area\" field={form.$('description')} />\n\n              <Button\n                floated=\"right\"\n                className=\"ml2\"\n                primary\n                content=\"Create Research Workspace\"\n                disabled={processing}\n                type=\"submit\"\n              />\n\n              <Button\n                floated=\"right\"\n                icon=\"left arrow\"\n                labelPosition=\"left\"\n                className=\"ml2\"\n                content=\"Previous\"\n                disabled={processing}\n                onClick={onCancel}\n              />\n            </>\n          )}\n        </Form>\n      </Segment>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(CreateInternalEnvForm, {\n  form: observable,\n  envTypeId: computed,\n  configurations: computed,\n  userStore: computed,\n  projectIdOptions: computed,\n  handlePrevious: action,\n});\n\nexport default inject('userStore', 'clientInformationStore')(observer(CreateInternalEnvForm));\n"],"file":"CreateInternalEnvForm.js"}