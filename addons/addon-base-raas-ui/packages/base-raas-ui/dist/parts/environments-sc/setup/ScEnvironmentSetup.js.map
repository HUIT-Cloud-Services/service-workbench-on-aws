{"version":3,"sources":["../../../../src/parts/environments-sc/setup/ScEnvironmentSetup.js"],"names":["ScEnvironmentSetup","props","setOnboarding","value","onboardingOpen","handleConfigureCredentials","event","preventDefault","stopPropagation","handleSelectEnvType","envTypeId","selectedTypeId","envTypesStore","configurationStore","getEnvTypeConfigsStore","load","window","scrollTo","currentStep","setStep","handlePrevious","step","envTypeImmutable","onPrevious","handleCompleted","environment","onCompleted","stores","Stores","clientInformationStore","pathname","goto","store","content","renderLoadingError","renderEmpty","renderContent","typeId","studyIds","user","userStore","hasProjects","isExternalResearcher","canCreateWorkspace","capabilities","hasCredentials","renderMissingProjects","renderMissingCredentials","error","renderButtons","maxWidth","React","Component","action","computed","observable"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { decorate, computed, runInAction, observable, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Icon, Header, Segment, Button } from 'semantic-ui-react';\nimport { isStoreLoading, isStoreError, isStoreEmpty } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport BasicProgressPlaceholder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport Stores from '@aws-ee/base-ui/dist/models/Stores';\n\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport UserOnboarding from '../../users/UserOnboarding';\nimport SelectEnvTypeStep from './SelectEnvTypeStep';\nimport ConfigureEnvTypeStep from './ConfigureEnvTypeStep';\n\n// expected props\n// - onPrevious (via props)\n// - onCompleted (via props) a function is called after a call to create an environment is performed\n// - studyIds (via props) (optional) an array of the selected study ids\n// - envTypeId (via props) (optional) id of the env type\n// - envTypeImmutable (via props) (optional) flag indicating if env type is immutable and env type selection should be disallowed\n// - currentStep (via props) an instance of the CurrentStep model\n// - envTypesStore (via injection)\n// - clientInformationStore (via injection)\nclass ScEnvironmentSetup extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.stores = new Stores([this.envTypesStore, this.clientInformationStore]);\n      this.selectedTypeId = props.envTypeId;\n    });\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    swallowError(this.stores.load());\n  }\n\n  get userStore() {\n    return this.props.userStore;\n  }\n\n  get envTypesStore() {\n    return this.props.envTypesStore;\n  }\n\n  get clientInformationStore() {\n    return this.props.clientInformationStore;\n  }\n\n  get currentStep() {\n    return this.props.currentStep;\n  }\n\n  setOnboarding = value => {\n    this.onboardingOpen = value;\n  };\n\n  handleConfigureCredentials = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    this.setOnboarding(true);\n  };\n\n  handleSelectEnvType = async envTypeId => {\n    this.selectedTypeId = envTypeId;\n    const envTypesStore = this.envTypesStore;\n    if (!envTypesStore) return;\n\n    // We start the loading of the configurations for the selected type\n    const configurationStore = this.envTypesStore.getEnvTypeConfigsStore(envTypeId);\n    await configurationStore.load();\n\n    window.scrollTo(0, 0);\n    runInAction(() => {\n      this.currentStep.setStep('selectEnvConfig');\n    });\n  };\n\n  goto(pathname) {\n    const goto = gotoFn(this);\n    goto(pathname);\n  }\n\n  handlePrevious = () => {\n    const currentStep = this.currentStep;\n    if (currentStep.step === 'selectEnvType' || this.props.envTypeImmutable) {\n      this.props.onPrevious();\n    } else {\n      this.currentStep.setStep('selectEnvType');\n    }\n  };\n\n  handleCompleted = async environment => {\n    return this.props.onCompleted(environment);\n  };\n\n  get studyIds() {\n    return this.props.studyIds;\n  }\n\n  render() {\n    const store = this.envTypesStore;\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = this.renderLoadingError();\n    } else if (isStoreLoading(store)) {\n      content = <BasicProgressPlaceholder className=\"mt2\" />;\n    } else if (isStoreEmpty(store)) {\n      content = this.renderEmpty();\n    } else {\n      content = this.renderContent();\n    }\n\n    return (\n      <>\n        {content} {this.onboardingOpen && <UserOnboarding onclose={() => this.setOnboarding(false)} />}\n      </>\n    );\n  }\n\n  renderContent() {\n    const step = this.currentStep.step;\n    const typeId = this.selectedTypeId;\n    const studyIds = this.studyIds;\n    const user = this.userStore.user;\n    const hasProjects = user.hasProjects;\n    const isExternalResearcher = user.isExternalResearcher;\n    const canCreateWorkspace = user.capabilities.canCreateWorkspace;\n    const hasCredentials = user.hasCredentials;\n    let content = null;\n\n    if (!canCreateWorkspace) {\n      return this.renderEmpty();\n    }\n\n    if (!isExternalResearcher && !hasProjects) {\n      return this.renderMissingProjects();\n    }\n\n    // Check if external and no credentials\n    // TODO - service catalog (sc) workspaces don't support external researchers\n    if (isExternalResearcher && !hasCredentials) {\n      return this.renderMissingCredentials();\n    }\n\n    if (step === 'selectEnvType') {\n      content = <SelectEnvTypeStep onPrevious={this.handlePrevious} onNext={this.handleSelectEnvType} />;\n    } else if (step === 'selectEnvConfig') {\n      content = (\n        <ConfigureEnvTypeStep\n          envTypeId={typeId}\n          studyIds={studyIds}\n          onPrevious={this.handlePrevious}\n          onCompleted={this.handleCompleted}\n        />\n      );\n    }\n\n    return content;\n  }\n\n  renderLoadingError() {\n    const store = this.envTypesStore;\n    return (\n      <>\n        <ErrorBox error={store.error} className=\"p0 mt2 mb3\" />\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <>\n        <Segment placeholder className=\"mt2\">\n          <Header icon className=\"color-grey\">\n            <Icon name=\"server\" />\n            No workspace types\n            <Header.Subheader>\n              There are no workspace types to choose from. Your role might be restricted. Please contact your\n              administrator.\n            </Header.Subheader>\n          </Header>\n        </Segment>\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderMissingProjects() {\n    return (\n      <>\n        <Segment placeholder className=\"mt2\">\n          <Header icon className=\"color-grey\">\n            <Icon name=\"lock\" />\n            Missing association with projects\n            <Header.Subheader>\n              You currently do not have permissions to use any projects for the workspace. please contact your\n              administrator.\n            </Header.Subheader>\n          </Header>\n        </Segment>\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderMissingCredentials() {\n    // IMPORTANT: service catalog workspaces do not support external researchers. This code\n    // is here to help make a decision if we keep it or remove it.\n    return (\n      <>\n        <Segment placeholder className=\"mt2\">\n          <Header icon className=\"color-grey\">\n            <Icon name=\"key\" />\n            No AWS credentials\n            <Header.Subheader>To manage research workspaces, click Configure AWS Credentials.</Header.Subheader>\n          </Header>\n          <div>\n            <Button\n              color=\"orange\"\n              size=\"medium\"\n              basic\n              onClick={this.handleConfigureCredentials}\n              style={{ maxWidth: '100%' }}\n            >\n              Configure AWS Credentials\n            </Button>\n          </div>\n        </Segment>\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderButtons() {\n    return (\n      <div className=\"mt3\">\n        <Button\n          floated=\"right\"\n          icon=\"right arrow\"\n          labelPosition=\"right\"\n          className=\"ml2\"\n          primary\n          content=\"Next\"\n          disabled\n        />\n        <Button\n          floated=\"right\"\n          icon=\"left arrow\"\n          labelPosition=\"left\"\n          className=\"ml2\"\n          content=\"Previous\"\n          onClick={this.handlePrevious}\n        />\n      </div>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ScEnvironmentSetup, {\n  handleSelectEnvType: action,\n  handlePrevious: action,\n  handleCompleted: action,\n  setOnboarding: action,\n  studyIds: computed,\n  userStore: computed,\n  envTypesStore: computed,\n  clientInformationStore: computed,\n  currentStep: computed,\n  selectedTypeId: observable,\n  onboardingOpen: observable,\n});\n\nexport default inject('userStore', 'envTypesStore', 'clientInformationStore')(withRouter(observer(ScEnvironmentSetup)));\n"],"file":"ScEnvironmentSetup.js"}