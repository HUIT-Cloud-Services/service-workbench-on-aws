{"version":3,"sources":["../../../../src/parts/environments-sc/setup/ConfigureEnvTypeStep.js"],"names":["ConfigureEnvTypeStep","handlePrevious","_","isFunction","props","onPrevious","handleCreate","data","studyIds","store","scEnvironmentsStore","createScEnvironment","environment","onCompleted","window","scrollTo","envTypeConfigsStore","load","content","renderLoadingError","renderEmpty","renderContent","error","renderButtons","envTypeId","configurations","title","envTypeTitle","defaultCidr","isExternal","userStore","user","isExternalUser","renderExternalNotSupported","nextDisabled","get","envTypesStore","getEnvType","clientInformationStore","getEnvTypeConfigsStore","list","isEmpty","ipAddress","React","Component","action","computed"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport { decorate, computed, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { Icon, Header, Segment, Button } from 'semantic-ui-react';\n\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { isStoreEmpty, isStoreError, isStoreLoading } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport BasicProgressPlaceholder from '@aws-ee/base-ui/dist/parts/helpers/BasicProgressPlaceholder';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport CreateInternalEnvForm from './CreateInternalEnvForm';\n\n// expected props\n// - onPrevious (via props)\n// - onCompleted (via props) a function is called after a call to create a workspace is performed\n// - envTypeId (via props)\n// - studyIds (via props)\n// - envTypesStore (via injection)\n// - clientInformationStore (via injection)\n// - userStore (via injection)\n// - scEnvironmentsStore (via injection)\nclass ConfigureEnvTypeStep extends React.Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    swallowError(this.envTypeConfigsStore.load());\n  }\n\n  get envTypeId() {\n    return this.props.envTypeId;\n  }\n\n  get envTypeTitle() {\n    return _.get(this.envTypesStore.getEnvType(this.envTypeId), 'name');\n  }\n\n  get userStore() {\n    return this.props.userStore;\n  }\n\n  get clientInformationStore() {\n    return this.props.clientInformationStore;\n  }\n\n  get envTypesStore() {\n    return this.props.envTypesStore;\n  }\n\n  get scEnvironmentsStore() {\n    return this.props.scEnvironmentsStore;\n  }\n\n  get envTypeConfigsStore() {\n    return this.envTypesStore.getEnvTypeConfigsStore(this.envTypeId);\n  }\n\n  get configurations() {\n    return this.envTypeConfigsStore.list;\n  }\n\n  get defaultCidr() {\n    if (_.isEmpty(this.clientInformationStore.ipAddress)) return '';\n\n    return `${this.clientInformationStore.ipAddress}/32`;\n  }\n\n  get studyIds() {\n    return this.props.studyIds;\n  }\n\n  handlePrevious = () => {\n    if (_.isFunction(this.props.onPrevious)) this.props.onPrevious();\n  };\n\n  // eslint-disable-next-line consistent-return\n  handleCreate = async data => {\n    const studyIds = this.studyIds || [];\n    const store = this.scEnvironmentsStore;\n    const environment = await store.createScEnvironment({ ...data, studyIds });\n    return this.props.onCompleted(environment);\n  };\n\n  render() {\n    const store = this.envTypeConfigsStore;\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = this.renderLoadingError();\n    } else if (isStoreLoading(store)) {\n      content = <BasicProgressPlaceholder className=\"mt2\" />;\n    } else if (isStoreEmpty(store)) {\n      content = this.renderEmpty();\n    } else {\n      content = this.renderContent();\n    }\n\n    return content;\n  }\n\n  renderLoadingError() {\n    const store = this.envTypeConfigsStore;\n    return (\n      <>\n        <ErrorBox error={store.error} className=\"p0 mt2 mb3\" />\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderContent() {\n    const envTypeId = this.envTypeId;\n    const configurations = this.configurations;\n    const title = this.envTypeTitle;\n    const defaultCidr = this.defaultCidr;\n    const isExternal = this.userStore.user.isExternalUser;\n\n    return (\n      <div className=\"mt2 animated fadeIn\">\n        {!isExternal && (\n          <CreateInternalEnvForm\n            envTypeId={envTypeId}\n            configurations={configurations}\n            title={title}\n            defaultCidr={defaultCidr}\n            onPrevious={this.handlePrevious}\n            onNext={this.handleCreate}\n          />\n        )}\n        {isExternal && this.renderExternalNotSupported()}\n        {/* {isExternal && (\n          <CreateExternalEnvForm\n            envTypeId={envTypeId}\n            configurations={configurations}\n            title={title}\n            defaultCidr={defaultCidr}\n            onPrevious={this.handlePrevious}\n            onNext={this.handleCreate}\n          />\n        )} */}\n      </div>\n    );\n  }\n\n  renderExternalNotSupported() {\n    return (\n      <>\n        <Segment placeholder className=\"mt2\">\n          <Header icon className=\"color-grey\">\n            <Icon name=\"server\" />\n            No support for external researchers\n            <Header.Subheader>\n              There are no workspace configurations to choose from. Your role is restricted. Please contact your\n              administrator.\n            </Header.Subheader>\n          </Header>\n        </Segment>\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderEmpty() {\n    const title = this.envTypeTitle;\n    return (\n      <>\n        <Header as=\"h3\" textAlign=\"center\" className=\"mt2\">\n          {title}\n        </Header>\n        <Segment placeholder className=\"mt2\">\n          <Header icon className=\"color-grey\">\n            <Icon name=\"server\" />\n            No workspace configurations\n            <Header.Subheader>\n              There are no workspace configurations to choose from. Your role might be restricted. Please contact your\n              administrator.\n            </Header.Subheader>\n          </Header>\n        </Segment>\n        {this.renderButtons()}\n      </>\n    );\n  }\n\n  renderButtons({ nextDisabled = true } = {}) {\n    return (\n      <div className=\"mt3\">\n        <Button floated=\"right\" className=\"ml2\" primary content=\"Create Research Workspace\" disabled={nextDisabled} />\n        <Button\n          floated=\"right\"\n          icon=\"left arrow\"\n          labelPosition=\"left\"\n          className=\"ml2\"\n          content=\"Previous\"\n          onClick={this.handlePrevious}\n        />\n      </div>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(ConfigureEnvTypeStep, {\n  handlePrevious: action,\n  handleCreate: action,\n  userStore: computed,\n  envTypesStore: computed,\n  clientInformationStore: computed,\n  envTypeId: computed,\n  defaultCidr: computed,\n  envTypeTitle: computed,\n  scEnvironmentsStore: computed,\n  configurations: computed,\n  studyIds: computed,\n});\n\nexport default inject(\n  'userStore',\n  'envTypesStore',\n  'scEnvironmentsStore',\n  'clientInformationStore',\n)(observer(ConfigureEnvTypeStep));\n"],"file":"ConfigureEnvTypeStep.js"}