{"version":3,"sources":["../../src/helpers/externalVpcService.js"],"names":["EC2","require","SageMakerService","accessKeyId","secretAccessKey","region","ec2","sslEnabled","describeVpcs","Filters","Name","Values","promise","vpcs","Vpcs","find","IsDefault","vpcId","VpcId","describeSubnets","subnets","Subnets","publicSubnets","filter","MapPublicIpOnLaunch","reduce","result","subnet","AvailableIpAddressCount","subnetId","SubnetId"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAnB;;IAEqBC,gB;AACnB,kCAAoE;AAAA,QAAtDC,WAAsD,QAAtDA,WAAsD;AAAA,QAAzCC,eAAyC,QAAzCA,eAAyC;AAAA,2BAAxBC,MAAwB;AAAA,QAAxBA,MAAwB,4BAAf,WAAe;;AAAA;;AAClE,QAAIF,WAAJ,EAAiB;AACf,WAAKG,GAAL,GAAW,IAAIN,GAAJ,CAAQ;AACjBG,QAAAA,WAAW,EAAXA,WADiB;AAEjBC,QAAAA,eAAe,EAAfA,eAFiB;AAGjBC,QAAAA,MAAM,EAANA,MAHiB;AAIjBE,QAAAA,UAAU,EAAE;AAJK,OAAR,CAAX;AAMD,KAPD,MAOO;AACL,WAAKD,GAAL,GAAW,IAAIN,GAAJ,CAAQ;AACjBO,QAAAA,UAAU,EAAE;AADK,OAAR,CAAX;AAGD;AACF;;;;;;;;;;;;;uBAG8B,KAAKD,GAAL,CAC1BE,YAD0B,CACb;AACZC,kBAAAA,OAAO,EAAE,CACP;AACEC,oBAAAA,IAAI,EAAE,WADR;AAEEC,oBAAAA,MAAM,EAAE,CAAC,MAAD;AAFV,mBADO;AADG,iBADa,EAS1BC,OAT0B,E;;;;AAAfC,gBAAAA,I,yBAANC,I;6BAUiBD,IAAI,CAACE,IAAL,CAAU;AAAA,sBAAGC,SAAH,SAAGA,SAAH;AAAA,yBAAmBA,SAAnB;AAAA,iBAAV,C,EAAVC,K,cAAPC,K;;uBAE2B,KAAKZ,GAAL,CAChCa,eADgC,CAChB;AACfV,kBAAAA,OAAO,EAAE,CACP;AACEC,oBAAAA,IAAI,EAAE,QADR;AAEEC,oBAAAA,MAAM,EAAE,CAACM,KAAD;AAFV,mBADO;AADM,iBADgB,EAShCL,OATgC,E;;;;AAAlBQ,gBAAAA,O,0BAATC,O;AAWR;AACMC,gBAAAA,a,GAAgBF,OAAO,CAACG,MAAR,CAAe;AAAA,sBAAGC,mBAAH,SAAGA,mBAAH;AAAA,yBAA6BA,mBAA7B;AAAA,iBAAf,C;wCACSF,aAAa,CAACG,MAAd,CAAqB,UAACC,MAAD,EAASC,MAAT;AAAA,yBAClDA,MAAM,CAACC,uBAAP,GAAiCF,MAAM,CAACE,uBAAxC,GAAkED,MAAlE,GAA2ED,MADzB;AAAA,iBAArB,C,EAAbG,Q,yBAAVC,Q;iDAGD;AAAEb,kBAAAA,KAAK,EAALA,KAAF;AAASY,kBAAAA,QAAQ,EAARA;AAAT,iB","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nconst EC2 = require('aws-sdk/clients/ec2');\n\nexport default class SageMakerService {\n  constructor({ accessKeyId, secretAccessKey, region = 'us-east-1' }) {\n    if (accessKeyId) {\n      this.ec2 = new EC2({\n        accessKeyId,\n        secretAccessKey,\n        region,\n        sslEnabled: true,\n      });\n    } else {\n      this.ec2 = new EC2({\n        sslEnabled: true,\n      });\n    }\n  }\n\n  async defaultVPCInfo() {\n    const { Vpcs: vpcs } = await this.ec2\n      .describeVpcs({\n        Filters: [\n          {\n            Name: 'isDefault',\n            Values: ['true'],\n          },\n        ],\n      })\n      .promise();\n    const { VpcId: vpcId } = vpcs.find(({ IsDefault }) => IsDefault);\n\n    const { Subnets: subnets } = await this.ec2\n      .describeSubnets({\n        Filters: [\n          {\n            Name: 'vpc-id',\n            Values: [vpcId],\n          },\n        ],\n      })\n      .promise();\n\n    // Default subnets should be public, but just make sure\n    const publicSubnets = subnets.filter(({ MapPublicIpOnLaunch }) => MapPublicIpOnLaunch);\n    const { SubnetId: subnetId } = publicSubnets.reduce((result, subnet) =>\n      subnet.AvailableIpAddressCount > result.AvailableIpAddressCount ? subnet : result,\n    );\n    return { vpcId, subnetId };\n  }\n}\n"],"file":"externalVpcService.js"}