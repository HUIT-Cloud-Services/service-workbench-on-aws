{"version":3,"sources":["../../src/helpers/sage-maker-service.js"],"names":["SageMaker","require","SageMakerService","accessKeyId","secretAccessKey","region","sm","sslEnabled","notebookInstanceName","params","NotebookInstanceName","createPresignedNotebookInstanceUrl","promise"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,2BAAD,CAAzB;;IAEqBC,gB;AACnB,4BAAYC,WAAZ,EAAyBC,eAAzB,EAAgE;AAAA,QAAtBC,MAAsB,uEAAb,WAAa;;AAAA;;AAC9D,QAAIF,WAAJ,EAAiB;AACf,WAAKG,EAAL,GAAU,IAAIN,SAAJ,CAAc;AACtBG,QAAAA,WAAW,EAAXA,WADsB;AAEtBC,QAAAA,eAAe,EAAfA,eAFsB;AAGtBC,QAAAA,MAAM,EAANA,MAHsB;AAItBE,QAAAA,UAAU,EAAE;AAJU,OAAd,CAAV;AAMD,KAPD,MAOO;AACL,WAAKD,EAAL,GAAU,IAAIN,SAAJ,CAAc;AACtBO,QAAAA,UAAU,EAAE;AADU,OAAd,CAAV;AAGD;AACF;;;;;sHAEqCC,oB;;;;;;AAC9BC,gBAAAA,M,GAAS;AACbC,kBAAAA,oBAAoB,EAAEF;AADT,iB;iDAGR,KAAKF,EAAL,CAAQK,kCAAR,CAA2CF,MAA3C,EAAmDG,OAAnD,E","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nconst SageMaker = require('aws-sdk/clients/sagemaker');\n\nexport default class SageMakerService {\n  constructor(accessKeyId, secretAccessKey, region = 'us-east-1') {\n    if (accessKeyId) {\n      this.sm = new SageMaker({\n        accessKeyId,\n        secretAccessKey,\n        region,\n        sslEnabled: true,\n      });\n    } else {\n      this.sm = new SageMaker({\n        sslEnabled: true,\n      });\n    }\n  }\n\n  async getPresignedNotebookInstanceUrl(notebookInstanceName) {\n    const params = {\n      NotebookInstanceName: notebookInstanceName,\n    };\n    return this.sm.createPresignedNotebookInstanceUrl(params).promise();\n  }\n}\n"],"file":"sage-maker-service.js"}