{"version":3,"sources":["../../src/helpers/externalCostUtil.js"],"names":["getEstimatedCost","env","numberOfDaysToGetCostInfo","envConfig","EnvironmentConfigurationsStore","create","load","allEnvConfigs","list","config","_","find","conf","instanceInfo","type","spotBidPrice","size","label","includes","cost","amount","totalPrice","unit","allCost","i","day","Date","now","toISOString","split","costForDay","startDate","push"],"mappings":";;;;;;;AAeA;;AACA;;;;;;;;AAEA,IAAMA,gBAAgB;AAAA,qEAAG,iBAAOC,GAAP,EAAYC,yBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,SADiB,GACLC,+DAA+BC,MAA/B,EADK;AAAA;AAAA,mBAEjBF,SAAS,CAACG,IAAV,EAFiB;;AAAA;AAGjBC,YAAAA,aAHiB,GAGDJ,SAAS,CAACK,IAHT;AAIjBC,YAAAA,MAJiB,GAIRC,mBAAEC,IAAF,CAAOJ,aAAP,EAAsB,UAAAK,IAAI,EAAI;AAC3C;AACA,kBAAIX,GAAG,CAACY,YAAJ,CAAiBC,IAAjB,KAA0B,KAA9B,EAAqC;AACnC,oBAAIb,GAAG,CAACY,YAAJ,CAAiBJ,MAAjB,CAAwBM,YAA5B,EAA0C;AACxC,yBACEH,IAAI,CAACE,IAAL,KAAcb,GAAG,CAACY,YAAJ,CAAiBC,IAA/B,IAAuCF,IAAI,CAACI,IAAL,KAAcf,GAAG,CAACY,YAAJ,CAAiBG,IAAtE,IAA8EJ,IAAI,CAACK,KAAL,CAAWC,QAAX,CAAoB,MAApB,CADhF;AAGD;;AACD,uBACEN,IAAI,CAACE,IAAL,KAAcb,GAAG,CAACY,YAAJ,CAAiBC,IAA/B,IAAuCF,IAAI,CAACI,IAAL,KAAcf,GAAG,CAACY,YAAJ,CAAiBG,IAAtE,IAA8EJ,IAAI,CAACK,KAAL,CAAWC,QAAX,CAAoB,WAApB,CADhF;AAGD;;AACD,qBAAON,IAAI,CAACE,IAAL,KAAcb,GAAG,CAACY,YAAJ,CAAiBC,IAA/B,IAAuCF,IAAI,CAACI,IAAL,KAAcf,GAAG,CAACY,YAAJ,CAAiBG,IAA7E;AACD,aAbc,CAJQ;AAkBjBG,YAAAA,IAlBiB,GAkBV,EAlBU;AAmBvBA,YAAAA,IAAI,CAACV,MAAM,CAACK,IAAR,CAAJ,GAAoB;AAClBM,cAAAA,MAAM,EAAEX,MAAM,CAACY,UADG;AAElBC,cAAAA,IAAI,EAAE;AAFY,aAApB;AAKMC,YAAAA,OAxBiB,GAwBP,EAxBO;;AAyBvB,iBAASC,CAAT,GAAatB,yBAAb,EAAwCsB,CAAC,GAAG,CAA5C,EAA+CA,CAAC,EAAhD,EAAoD;AAC5CC,cAAAA,GAD4C,GACtC,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAaH,CAAC,GAAG,EAAJ,GAAS,EAAT,GAAc,EAAd,GAAmB,IAAzC,EAA+CI,WAA/C,GAA6DC,KAA7D,CAAmE,GAAnE,EAAwE,CAAxE,CADsC;AAE5CC,cAAAA,UAF4C,GAE/B;AACjBC,gBAAAA,SAAS,EAAEN,GADM;AAEjBN,gBAAAA,IAAI,EAAJA;AAFiB,eAF+B;AAMlDI,cAAAA,OAAO,CAACS,IAAR,CAAaF,UAAb;AACD;;AAhCsB,6CAiChBP,OAjCgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBvB,gBAAgB;AAAA;AAAA;AAAA,GAAtB,C,CAoCA","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { EnvironmentConfigurationsStore } from '../models/environments/EnvironmentConfigurationsStore';\n\nconst getEstimatedCost = async (env, numberOfDaysToGetCostInfo) => {\n  const envConfig = EnvironmentConfigurationsStore.create();\n  await envConfig.load();\n  const allEnvConfigs = envConfig.list;\n  const config = _.find(allEnvConfigs, conf => {\n    // Hail EMR has spot pricing and on demand price. o we need to pick the correct EMR env config\n    if (env.instanceInfo.type === 'emr') {\n      if (env.instanceInfo.config.spotBidPrice) {\n        return (\n          conf.type === env.instanceInfo.type && conf.size === env.instanceInfo.size && conf.label.includes('Spot')\n        );\n      }\n      return (\n        conf.type === env.instanceInfo.type && conf.size === env.instanceInfo.size && conf.label.includes('On Demand')\n      );\n    }\n    return conf.type === env.instanceInfo.type && conf.size === env.instanceInfo.size;\n  });\n  const cost = {};\n  cost[config.type] = {\n    amount: config.totalPrice,\n    unit: 'USD',\n  };\n\n  const allCost = [];\n  for (let i = numberOfDaysToGetCostInfo; i > 0; i--) {\n    const day = new Date(Date.now() - i * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n    const costForDay = {\n      startDate: day,\n      cost,\n    };\n    allCost.push(costForDay);\n  }\n  return allCost;\n};\n\n// eslint-disable-next-line import/prefer-default-export\nexport { getEstimatedCost };\n"],"file":"externalCostUtil.js"}