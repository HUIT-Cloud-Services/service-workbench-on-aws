{"version":3,"sources":["../../../src/models/environments/EnvironmentConfigurationsStore.js"],"names":["EnvironmentConfigurationsStore","BaseStore","named","props","configurations","types","map","EnvironmentConfiguration","heartbeatInterval","actions","self","doLoad","getEnvironmentConfigurations","environmentConfigurations","runInAction","exiting","newItem","setEnvironmentConfiguration","views","empty","size","total","list","result","forEach","configuration","push","_","sortBy","getConfiguration","id","get","registerContextItems","appContext","environmentConfigurationsStore","create"],"mappings":";;;;;;;;AAeA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;AAEA,IAAMA,8BAA8B,GAAGC,qBAAUC,KAAV,CAAgB,gCAAhB,EACpCC,KADoC,CAC9B;AACLC,EAAAA,cAAc,EAAEC,qBAAMC,GAAN,CAAUC,kDAAV,CADX;AAELC,EAAAA,iBAAiB,EAAE,CAAC;AAFf,CAD8B,EAKpCC,OALoC,CAK5B,UAAAC,IAAI,EAAI;AACf,SAAO;AACCC,IAAAA,MADD,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAC2BC,4BAA4B,EADvD;;AAAA;AACPC,gBAAAA,yBADO;AAGbH,gBAAAA,IAAI,CAACI,WAAL,CAAiB,YAAM;AACrB,+CAAiBJ,IAAI,CAACN,cAAtB,EAAsCS,yBAAtC,EAAiE,UAACE,OAAD,EAAUC,OAAV,EAAsB;AACrFD,oBAAAA,OAAO,CAACE,2BAAR,CAAoCD,OAApC;AACD,mBAFD;AAGD,iBAJD;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQd;AATI,GAAP;AAWD,CAjBoC,EAmBpCE,KAnBoC,CAmB9B,UAAAR,IAAI;AAAA,SAAK;AACd,QAAIS,KAAJ,GAAY;AACV,aAAOT,IAAI,CAACN,cAAL,CAAoBgB,IAApB,KAA6B,CAApC;AACD,KAHa;;AAKd,QAAIC,KAAJ,GAAY;AACV,aAAOX,IAAI,CAACN,cAAL,CAAoBgB,IAA3B;AACD,KAPa;;AASd,QAAIE,IAAJ,GAAW;AACT,UAAMC,MAAM,GAAG,EAAf;AACAb,MAAAA,IAAI,CAACN,cAAL,CAAoBoB,OAApB,CAA4B,UAAAC,aAAa;AAAA,eAAIF,MAAM,CAACG,IAAP,CAAYD,aAAZ,CAAJ;AAAA,OAAzC;AAEA,aAAOE,mBAAEC,MAAF,CAASL,MAAT,EAAiB,CAAC,IAAD,CAAjB,CAAP;AACD,KAda;;AAgBdM,IAAAA,gBAhBc,4BAgBGC,EAhBH,EAgBO;AACnB,aAAOpB,IAAI,CAACN,cAAL,CAAoB2B,GAApB,CAAwBD,EAAxB,CAAP;AACD;AAlBa,GAAL;AAAA,CAnB0B,CAAvC;;;;SAwCelB,4B;;;;;0FAAf;AAAA;AAAA;AAAA;AAAA;AAAA,8CACS,EADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAIA,SAASoB,oBAAT,CAA8BC,UAA9B,EAA0C;AACxCA,EAAAA,UAAU,CAACC,8BAAX,GAA4ClC,8BAA8B,CAACmC,MAA/B,CAAsC,EAAtC,EAA0CF,UAA1C,CAA5C;AACD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport { consolidateToMap } from '@aws-ee/base-ui/dist/helpers/utils';\n\nimport { EnvironmentConfiguration } from './EnvironmentConfiguration';\n\nconst EnvironmentConfigurationsStore = BaseStore.named('EnvironmentConfigurationsStore')\n  .props({\n    configurations: types.map(EnvironmentConfiguration),\n    heartbeatInterval: -1,\n  })\n  .actions(self => {\n    return {\n      async doLoad() {\n        const environmentConfigurations = await getEnvironmentConfigurations();\n\n        self.runInAction(() => {\n          consolidateToMap(self.configurations, environmentConfigurations, (exiting, newItem) => {\n            exiting.setEnvironmentConfiguration(newItem);\n          });\n        });\n      },\n    };\n  })\n\n  .views(self => ({\n    get empty() {\n      return self.configurations.size === 0;\n    },\n\n    get total() {\n      return self.configurations.size;\n    },\n\n    get list() {\n      const result = [];\n      self.configurations.forEach(configuration => result.push(configuration));\n\n      return _.sortBy(result, ['id']);\n    },\n\n    getConfiguration(id) {\n      return self.configurations.get(id);\n    },\n  }));\n\nasync function getEnvironmentConfigurations() {\n  return [];\n}\n\nfunction registerContextItems(appContext) {\n  appContext.environmentConfigurationsStore = EnvironmentConfigurationsStore.create({}, appContext);\n}\n\nexport { EnvironmentConfigurationsStore, registerContextItems };\n"],"file":"EnvironmentConfigurationsStore.js"}