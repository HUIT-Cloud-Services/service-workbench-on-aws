{"version":3,"sources":["../../../src/models/environments/Environment.js"],"names":["serviceCost","types","model","amount","number","unit","string","environmentCost","startDate","cost","map","Environment","id","identifier","rev","maybe","description","instanceInfo","optional","InstanceInfo","name","status","indexId","projectId","createdAt","createdBy","updatedAt","updatedBy","costs","array","fetchingUrl","error","maybeNull","isExternal","stackId","sharedWithUsers","actions","self","setEnvironment","rawEnvironment","getEnvironmentUrl","user","_","isEmpty","storage","getItem","localStorageKeys","pinToken","unencryptedCreds","creds","sm","SageMakerService","accessKeyId","secretAccessKey","region","getPresignedNotebookInstanceUrl","NotebookInstanceName","Error","setFetchingUrl","value","markAsTerminating","markAsStopping","markAsStarting","getKeyPair","getWindowsPassword","Promise","all","views","isTerminated","includes","isCompleted","isStopped","isPending","isError","registerContextItems","appContext","uiEventBus","listenTo","listener","event"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types, applySnapshot } from 'mobx-state-tree';\nimport { uiEventBus } from '@aws-ee/base-ui/dist/models/SessionStore';\nimport { storage } from '@aws-ee/base-ui/dist/helpers/utils';\n\nimport { InstanceInfo } from './InstanceInfo';\nimport { getEnvironmentKeypair, getEnvironmentUrl, getEnvironmentPasswordData } from '../../helpers/api';\nimport SageMakerService from '../../helpers/sage-maker-service';\nimport localStorageKeys from '../constants/local-storage-keys';\n\n// ==================================================================\n// Environment\n// ==================================================================\nconst serviceCost = types.model({\n  amount: types.number,\n  unit: types.string,\n});\n\nconst environmentCost = types.model({\n  startDate: types.string,\n  cost: types.map(serviceCost),\n});\n\nconst Environment = types\n  .model('Environment', {\n    id: types.identifier,\n    rev: types.maybe(types.number),\n    description: '',\n    instanceInfo: types.optional(InstanceInfo, {}),\n    name: '',\n    status: '',\n    indexId: '',\n    projectId: '',\n    createdAt: '',\n    createdBy: '',\n    updatedAt: '',\n    updatedBy: '',\n    costs: types.optional(types.array(environmentCost), []),\n    fetchingUrl: types.optional(types.boolean, false),\n    error: types.maybeNull(types.string),\n    isExternal: types.optional(types.boolean, false),\n    stackId: types.maybeNull(types.string),\n    sharedWithUsers: types.optional(types.array(types.string), []),\n  })\n  .actions(self => ({\n    setEnvironment(rawEnvironment) {\n      // Note: if you have partial data vs full data, you need to replace the applySnapshot() with\n      // the appropriate logic\n\n      // Preserve the value of the fetchingUrl\n      const fetchingUrl = self.fetchingUrl;\n      applySnapshot(self, rawEnvironment);\n      self.fetchingUrl = fetchingUrl;\n    },\n\n    async getEnvironmentUrl(user) {\n      if (self.isExternal) {\n        if (!_.isEmpty(storage.getItem(localStorageKeys.pinToken))) {\n          const creds = await user.unencryptedCreds(storage.getItem(localStorageKeys.pinToken));\n          const sm = new SageMakerService(creds.accessKeyId, creds.secretAccessKey, creds.region);\n          return sm.getPresignedNotebookInstanceUrl(self.instanceInfo.NotebookInstanceName);\n        }\n        throw new Error('No PIN to decrypt User credientials');\n      } else {\n        self.setFetchingUrl(true);\n        return getEnvironmentUrl(self.id);\n      }\n    },\n\n    setFetchingUrl(value) {\n      self.fetchingUrl = value;\n    },\n\n    markAsTerminating() {\n      self.status = 'TERMINATING';\n    },\n\n    markAsStopping() {\n      self.status = 'STOPPING';\n    },\n\n    markAsStarting() {\n      self.status = 'STARTING';\n    },\n\n    async getKeyPair() {\n      return getEnvironmentKeypair(self.id, `${self.id}.pem`);\n    },\n\n    async getWindowsPassword() {\n      return Promise.all([self.getKeyPair(), getEnvironmentPasswordData(self.id)]);\n    },\n  }))\n\n  // eslint-disable-next-line no-unused-vars\n  .views(self => ({\n    // add view methods here\n    get isTerminated() {\n      return _.includes(['TERMINATING', 'TERMINATED', 'TERMINATING_FAILED'], this.status);\n    },\n\n    get isCompleted() {\n      return _.includes(['COMPLETED'], this.status);\n    },\n\n    get isStopped() {\n      return _.includes(['STOPPED'], this.status);\n    },\n\n    get isPending() {\n      return _.includes(['PENDING'], this.status);\n    },\n\n    get isError() {\n      return _.includes(['FAILED'], this.status);\n    },\n  }));\n\n// eslint-disable-next-line no-unused-vars\nfunction registerContextItems(appContext) {\n  uiEventBus.listenTo('environmentDeleted', {\n    id: 'Environment',\n    listener: async event => {\n      // event will be the environment object\n      event.markAsTerminating();\n    },\n  });\n  uiEventBus.listenTo('environmentStopping', {\n    id: 'Environment',\n    listener: async event => {\n      // event will be the environment object\n      event.markAsStopping();\n    },\n  });\n  uiEventBus.listenTo('environmentStarting', {\n    id: 'Environment',\n    listener: async event => {\n      // event will be the environment object\n      event.markAsStarting();\n    },\n  });\n}\n\nexport { Environment, registerContextItems };\n"],"file":"Environment.js"}