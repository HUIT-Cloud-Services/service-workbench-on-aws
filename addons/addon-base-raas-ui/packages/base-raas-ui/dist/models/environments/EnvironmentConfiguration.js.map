{"version":3,"sources":["../../../src/models/environments/EnvironmentConfiguration.js"],"names":["SpotPriceHistoryItem","types","model","availabilityZone","spotPrice","number","EnvironmentConfiguration","id","identifier","type","size","label","price","description","defaultCidr","properties","frozen","spotBidMultiplier","optional","spotPriceHistory","array","emrConfiguration","actions","self","setEnvironmentConfiguration","configuration","fetchingSpotPriceHistory","getSpotPriceHistory","spotInstance","isEmrCluster","workerInstanceSize","prices","setSpotPriceHistory","views","isOnDemandPricing","hasSpotPriceHistory","length","averageSpotPriceHistory","reduce","result","spotBidPrice","isLoadingPrice","totalPrice","workerInstanceOnDemandPrice","workerInstanceCount"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { applySnapshot, types } from 'mobx-state-tree';\nimport { getEnvironmentSpotPriceHistory } from '../../helpers/api';\n\nconst SpotPriceHistoryItem = types.model('SpotPriceHistoryItem', {\n  availabilityZone: '',\n  spotPrice: types.number,\n});\n\nconst EnvironmentConfiguration = types\n  .model('EnvironmentConfiguration', {\n    id: types.identifier,\n    type: '',\n    size: '',\n    label: '',\n    price: types.number,\n    description: '',\n    defaultCidr: '',\n    properties: types.frozen(),\n    spotBidMultiplier: types.optional(types.number, 0),\n    spotPriceHistory: types.optional(types.array(SpotPriceHistoryItem), []),\n    emrConfiguration: types.frozen(),\n  })\n  .actions(self => ({\n    setEnvironmentConfiguration(configuration) {\n      // Note: if you have partial data vs full data, you need to replace the applySnapshot() with\n      // the appropriate logic\n      const fetchingSpotPriceHistory = self.fetchingSpotPriceHistory;\n      applySnapshot(self, configuration);\n      self.fetchingSpotPriceHistory = fetchingSpotPriceHistory;\n    },\n\n    async getSpotPriceHistory() {\n      const spotInstance = self.isEmrCluster ? self.emrConfiguration.workerInstanceSize : self.size;\n      const prices = await getEnvironmentSpotPriceHistory(spotInstance);\n\n      self.setSpotPriceHistory(prices);\n    },\n\n    setSpotPriceHistory(prices) {\n      self.spotPriceHistory = prices;\n    },\n  }))\n  .views(self => ({\n    get isOnDemandPricing() {\n      return !self.spotBidMultiplier;\n    },\n\n    get isEmrCluster() {\n      return !!self.emrConfiguration;\n    },\n\n    get hasSpotPriceHistory() {\n      return self.spotPriceHistory.length > 0;\n    },\n\n    get averageSpotPriceHistory() {\n      if (self.hasSpotPriceHistory) {\n        return self.spotPriceHistory.reduce(\n          (result, { spotPrice }) => result + spotPrice / self.spotPriceHistory.length,\n          0,\n        );\n      }\n      self.getSpotPriceHistory();\n      return 0;\n    },\n\n    get spotBidPrice() {\n      return self.averageSpotPriceHistory * self.spotBidMultiplier;\n    },\n\n    get isLoadingPrice() {\n      return this.isOnDemandPricing ? false : self.averageSpotPriceHistory === 0;\n    },\n\n    get totalPrice() {\n      if (self.isOnDemandPricing && !self.isEmrCluster) {\n        return self.price * 24;\n      }\n      if (self.isOnDemandPricing && self.isEmrCluster) {\n        const { workerInstanceOnDemandPrice, workerInstanceCount } = self.emrConfiguration;\n        return (self.price + workerInstanceOnDemandPrice * workerInstanceCount) * 24;\n      }\n      // this is now a spot bid below the onDemand cost\n      if (self.isEmrCluster) {\n        const { workerInstanceCount } = self.emrConfiguration;\n        return (self.price + self.spotBidPrice * workerInstanceCount) * 24;\n      }\n      // last option is spot single node\n      return self.spotBidPrice * 24;\n    },\n  }));\n\n// eslint-disable-next-line import/prefer-default-export\nexport { EnvironmentConfiguration };\n"],"file":"EnvironmentConfiguration.js"}