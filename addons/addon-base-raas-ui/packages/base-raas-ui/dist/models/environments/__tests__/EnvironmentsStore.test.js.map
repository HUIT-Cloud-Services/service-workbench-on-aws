{"version":3,"sources":["../../../../src/models/environments/__tests__/EnvironmentsStore.test.js"],"names":["jest","mock","describe","internalStore","internalAppContext","userStore","user","username","isExternalResearcher","uiEventBus","fireEvent","fn","exampleCost","startDate","cost","amount","unit","newEnv","beforeEach","environmentsStore","id","rev","description","name","status","indexId","projectId","createdAt","updatedAt","costs","sharedWithUsers","isExternal","it","getEnvironments","mockResolvedValueOnce","createEnvironment","load","pin","retVal","expect","toMatchObject","objectContaining","list","length","toEqual","getEnvironmentCost","toBe","deleteEnvironment","toHaveBeenCalledWith"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { registerContextItems as registerEnvironmentsStore } from '../EnvironmentsStore';\nimport { getEnvironments, deleteEnvironment, createEnvironment, getEnvironmentCost } from '../../../helpers/api';\n\njest.mock('../../../helpers/api');\n\ndescribe('EnvironmentsStore', () => {\n  let internalStore = null;\n  const internalAppContext = {\n    userStore: {\n      user: {\n        username: 'd.grayson',\n        isExternalResearcher: false,\n      },\n    },\n    uiEventBus: {\n      fireEvent: jest.fn(),\n    },\n  };\n\n  const exampleCost = {\n    startDate: '01-01-1900',\n    cost: {\n      exampleCost: {\n        amount: 10,\n        unit: '$200',\n      },\n    },\n  };\n\n  let newEnv = null;\n\n  beforeEach(async () => {\n    registerEnvironmentsStore(internalAppContext);\n    internalStore = internalAppContext.environmentsStore;\n    newEnv = {\n      id: 'gotham_city',\n      rev: 1,\n      description: 'city of the (in)famous hero',\n      name: '',\n      status: 'COMPLETED',\n      indexId: 'env-id',\n      projectId: 'civic_city',\n      createdAt: '1941',\n      updatedAt: '2019',\n      costs: [exampleCost],\n      sharedWithUsers: [],\n      isExternal: false,\n    };\n  });\n\n  describe('createEnvironment', () => {\n    it('should successfully add the internal environment', async () => {\n      // BUILD\n\n      getEnvironments.mockResolvedValueOnce([]);\n      createEnvironment.mockResolvedValueOnce(newEnv);\n      await internalStore.load();\n\n      // OPERATE\n      const retVal = await internalStore.createEnvironment({ pin: '1581963' });\n\n      // CHECK\n      expect(retVal).toMatchObject(\n        expect.objectContaining({\n          id: newEnv.id,\n          description: newEnv.description,\n          projectId: newEnv.projectId,\n        }),\n      );\n\n      expect(internalStore.list.length).toEqual(1);\n    });\n    it('should not create a new internal environment since it already exists', async () => {\n      // BUILD\n      getEnvironments.mockResolvedValueOnce([newEnv]);\n      createEnvironment.mockResolvedValueOnce(newEnv);\n      getEnvironmentCost.mockResolvedValueOnce([exampleCost]);\n      await internalStore.load();\n\n      // OPERATE\n      const retVal = await internalStore.createEnvironment({ pin: '1581963' });\n\n      // CHECK\n      expect(retVal).toMatchObject(\n        expect.objectContaining({\n          id: newEnv.id,\n          description: newEnv.description,\n          projectId: newEnv.projectId,\n        }),\n      );\n      expect(internalStore.list.length).toBe(1);\n    });\n  });\n\n  describe('deleteEnvironment', () => {\n    it('should try to delete the environment', async () => {\n      // BUILD\n      getEnvironments.mockResolvedValueOnce([newEnv]);\n      getEnvironmentCost.mockResolvedValueOnce([exampleCost]);\n      await internalStore.load();\n\n      // OPERATE\n      internalStore.deleteEnvironment(newEnv, internalAppContext.userStore.user, '123456');\n\n      // CHECK\n      expect(deleteEnvironment).toHaveBeenCalledWith(internalStore.list[0].id);\n    });\n  });\n});\n"],"file":"EnvironmentsStore.test.js"}