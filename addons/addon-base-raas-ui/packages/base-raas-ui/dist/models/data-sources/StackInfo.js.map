{"version":3,"sources":["../../../src/models/data-sources/StackInfo.js"],"names":["StackInfo","types","model","id","name","region","accountId","stackId","template","optional","frozen","signedUrl","createStackUrl","updateStackUrl","cfnConsoleUrl","urlExpiry","actions","self","setStackInfo","raw","_","forEach","value","key","views","formattedTemplate","JSON","stringify","hasUpdateStackUrl","isEmpty","expired","now","Date"],"mappings":";;;;;;;AAeA;;AACA;;;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA,IAAMA,SAAS,GAAGC,qBACfC,KADe,CACT,WADS,EACI;AAClBC,EAAAA,EAAE,EAAE,EADc;AAElBC,EAAAA,IAAI,EAAE,EAFY;AAGlBC,EAAAA,MAAM,EAAE,EAHU;AAIlBC,EAAAA,SAAS,EAAE,EAJO;AAKlBC,EAAAA,OAAO,EAAE,EALS;AAMlBC,EAAAA,QAAQ,EAAEP,qBAAMQ,QAAN,CAAeR,qBAAMS,MAAN,EAAf,EAA+B,EAA/B,CANQ;AAOlBC,EAAAA,SAAS,EAAE,EAPO;AAQlBC,EAAAA,cAAc,EAAE,EARE;AASlBC,EAAAA,cAAc,EAAE,EATE;AAUlBC,EAAAA,aAAa,EAAE,EAVG;AAWlBC,EAAAA,SAAS,EAAE;AAXO,CADJ,EAcfC,OAde,CAcP,UAAAC,IAAI;AAAA,SAAK;AAChBC,IAAAA,YADgB,0BACO;AAAA,UAAVC,GAAU,uEAAJ,EAAI;;AACrBC,yBAAEC,OAAF,CAAUF,GAAV,EAAe,UAACG,KAAD,EAAQC,GAAR,EAAgB;AAC7BN,QAAAA,IAAI,CAACM,GAAD,CAAJ,GAAYD,KAAZ;AACD,OAFD;AAGD;AALe,GAAL;AAAA,CAdG,EAsBhB;AAtBgB,CAuBfE,KAvBe,CAuBT,UAAAP,IAAI;AAAA,SAAK;AACd,QAAIQ,iBAAJ,GAAwB;AACtB,aAAOC,IAAI,CAACC,SAAL,CAAeV,IAAI,CAACT,QAApB,EAA8B,IAA9B,EAAoC,CAApC,CAAP;AACD,KAHa;;AAKd,QAAIoB,iBAAJ,GAAwB;AACtB,aAAO,CAACR,mBAAES,OAAF,CAAUZ,IAAI,CAACJ,cAAf,CAAR;AACD,KAPa;;AASd,QAAIiB,OAAJ,GAAc;AACZ,UAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AAEA,aAAOd,IAAI,CAACF,SAAL,GAAiBgB,GAAG,GAAG,OAAO,EAArC,CAHY,CAG6B;AAC1C;;AAba,GAAL;AAAA,CAvBK,CAAlB,C,CAuCsB","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\n\n// ==================================================================\n// StackInfo\n// ==================================================================\nconst StackInfo = types\n  .model('StackInfo', {\n    id: '',\n    name: '',\n    region: '',\n    accountId: '',\n    stackId: '',\n    template: types.optional(types.frozen(), {}),\n    signedUrl: '',\n    createStackUrl: '',\n    updateStackUrl: '',\n    cfnConsoleUrl: '',\n    urlExpiry: 0,\n  })\n  .actions(self => ({\n    setStackInfo(raw = {}) {\n      _.forEach(raw, (value, key) => {\n        self[key] = value;\n      });\n    },\n  }))\n\n  // eslint-disable-next-line no-unused-vars\n  .views(self => ({\n    get formattedTemplate() {\n      return JSON.stringify(self.template, null, 2);\n    },\n\n    get hasUpdateStackUrl() {\n      return !_.isEmpty(self.updateStackUrl);\n    },\n\n    get expired() {\n      const now = Date.now();\n\n      return self.urlExpiry < now + 1000 * 60; // lets buffer 1 minute\n    },\n  }));\n\nexport { StackInfo }; // eslint-disable-line import/prefer-default-export\n"],"file":"StackInfo.js"}