{"version":3,"sources":["../../../../../src/models/data-sources/register/operations/PrepareCfn.js"],"names":["PrepareCfnOperation","accountId","accountsStore","name","stackInfo","load","account","getAccount","setStackInfo","setMessage","Operation","doRun","action"],"mappings":";;;;;;;;;AAeA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,mB;;;;;AACJ,qCAA0C;AAAA;;AAAA,QAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,QAAjBC,aAAiB,QAAjBA,aAAiB;;AAAA;;AACxC;AACA,UAAKD,SAAL,GAAiBA,SAAjB;AACA,UAAKE,IAAL,8DAAgEF,SAAhE;AACA,UAAKC,aAAL,GAAqBA,aAArB;AAJwC;AAKzC;;;;;;;;;;;AAGOA,gBAAAA,a,GAAgB,KAAKA,a;;uBACH,qCAA2B,KAAKD,SAAhC,C;;;AAAlBG,gBAAAA,S;;uBAEA,kBAAM,GAAN,C;;;;uBACAF,aAAa,CAACG,IAAd,E;;;AAEAC,gBAAAA,O,GAAUJ,aAAa,CAACK,UAAd,CAAyB,KAAKN,SAA9B,C;AAChBK,gBAAAA,OAAO,CAACE,YAAR,CAAqBJ,SAArB;AAEA,qBAAKK,UAAL,6DAAqE,KAAKR,SAA1E;;;;;;;;;;;;;;;;;;;EAlB8BS,sB,GAsBlC;;;AACA,oBAASV,mBAAT,EAA8B;AAC5BW,EAAAA,KAAK,EAAEC;AADqB,CAA9B;eAIeZ,mB","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { decorate, action } from 'mobx';\n\nimport { delay } from '@aws-ee/base-ui/dist/helpers/utils';\n\nimport { generateAccountCfnTemplate } from '../../../../helpers/api';\nimport Operation from '../../../operations/Operation';\n\nclass PrepareCfnOperation extends Operation {\n  constructor({ accountId, accountsStore }) {\n    super();\n    this.accountId = accountId;\n    this.name = `Preparing the latest CloudFormation for account #${accountId}`;\n    this.accountsStore = accountsStore;\n  }\n\n  async doRun() {\n    const accountsStore = this.accountsStore;\n    const stackInfo = await generateAccountCfnTemplate(this.accountId);\n\n    await delay(0.5); // We don't have strong read when we load the accounts, therefore we have this delay in place\n    await accountsStore.load();\n\n    const account = accountsStore.getAccount(this.accountId);\n    account.setStackInfo(stackInfo);\n\n    this.setMessage(`Successfully prepared CloudFormation for account #${this.accountId}`);\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(PrepareCfnOperation, {\n  doRun: action,\n});\n\nexport default PrepareCfnOperation;\n"],"file":"PrepareCfn.js"}