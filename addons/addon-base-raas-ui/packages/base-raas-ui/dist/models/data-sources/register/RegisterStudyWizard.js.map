{"version":3,"sources":["../../../../src/models/data-sources/register/RegisterStudyWizard.js"],"names":["RegisterStudyWizard","types","model","step","accountId","_self","operations","undefined","actions","runInAction","fn","self","afterCreate","Operations","submit","formData","providedAccount","account","providedBucket","bucket","studies","ops","accountsStore","existingAccount","getAccount","id","existingBucket","getBucket","name","clear","_","isEmpty","add","RegisterAccountOperation","RegisterBucketOperation","forEach","providedStudy","study","sse","kmsArn","kmsScope","isArray","adminUsers","RegisterStudyOperation","removeEmpty","PrepareCfnOperation","run","retry","rerun","reset","cleanup","advanceToNextStep","views","isStartStep","isInputStep","isSubmitStep","isCfnStep","dropdownAccountOptions","dataSourceAccountsStore","dropdownOptions","processedAccount","bucketName","find","buckets","getBucketRegion","region","getDropdownBucketOptions","map","key","value","text","obj","result","keys","registerContextItems","appContext","registerStudyWizard","create"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types, getEnv } from 'mobx-state-tree';\n\nimport Operations from '../../operations/Operations';\nimport RegisterAccountOperation from './operations/RegisterAccount';\nimport RegisterBucketOperation from './operations/RegisterBucket';\nimport RegisterStudyOperation from './operations/RegisterStudy';\nimport PrepareCfnOperation from './operations/PrepareCfn';\n\n// ==================================================================\n// RegisterStudyWizard\n// ==================================================================\nconst RegisterStudyWizard = types\n  .model('RegisterStudyWizard', {\n    step: '',\n    accountId: '',\n  })\n\n  .volatile(_self => ({\n    operations: undefined,\n  }))\n\n  .actions(() => ({\n    // I had issues using runInAction from mobx\n    // the issue is discussed here https://github.com/mobxjs/mobx-state-tree/issues/915\n    runInAction(fn) {\n      return fn();\n    },\n  }))\n\n  .actions(self => ({\n    afterCreate: () => {\n      self.step = 'start';\n      self.operations = new Operations();\n    },\n\n    submit: async (formData = {}) => {\n      const providedAccount = formData.account || {};\n      const providedBucket = formData.bucket || {};\n      const studies = formData.studies || [];\n      const ops = self.operations;\n      const accountsStore = self.accountsStore;\n      const existingAccount = self.getAccount(providedAccount.id);\n      const existingBucket = existingAccount ? existingAccount.getBucket(providedBucket.name) : undefined;\n\n      self.accountId = providedAccount.id;\n      ops.clear();\n\n      if (_.isEmpty(existingAccount)) {\n        ops.add(new RegisterAccountOperation({ account: providedAccount, accountsStore }));\n      }\n\n      if (_.isEmpty(existingBucket)) {\n        ops.add(new RegisterBucketOperation({ accountId: providedAccount.id, bucket: providedBucket, accountsStore }));\n      }\n\n      _.forEach(studies, providedStudy => {\n        const study = { ...providedStudy };\n        // lets determine the kmsScope\n        const sse = providedBucket.sse;\n        const kmsArn = study.kmsArn;\n        if (!_.isEmpty(kmsArn)) study.kmsScope = 'study';\n        else if (sse === 'kms') study.kmsScope = 'bucket';\n        else study.kmsScope = 'none';\n\n        // make sure adminUsers is an array, this is because in the form drop down if the study is my studies, then\n        // we ask for a single value, which will not return an array\n        if (!_.isArray(study.adminUsers)) {\n          study.adminUsers = [study.adminUsers];\n        }\n\n        ops.add(\n          new RegisterStudyOperation({\n            accountId: providedAccount.id,\n            bucket: providedBucket,\n            study: removeEmpty(study),\n            accountsStore,\n          }),\n        );\n      });\n\n      ops.add(new PrepareCfnOperation({ accountId: providedAccount.id, accountsStore }));\n\n      self.step = 'submit';\n      await ops.run();\n    },\n\n    retry: async () => {\n      self.step = 'submit';\n      await self.operations.rerun();\n    },\n\n    reset: () => {\n      self.cleanup();\n    },\n\n    advanceToNextStep: () => {\n      if (self.step === 'start') {\n        self.step = 'input';\n      } else if (self.step === 'submit') {\n        self.step = 'cfn';\n      }\n    },\n\n    cleanup: () => {\n      self.step = 'start';\n      if (self.operations) self.operations.clear();\n      self.accountId = '';\n    },\n  }))\n\n  // eslint-disable-next-line no-unused-vars\n  .views(self => ({\n    get isStartStep() {\n      return self.step === 'start';\n    },\n\n    get isInputStep() {\n      return self.step === 'input';\n    },\n\n    get isSubmitStep() {\n      return self.step === 'submit';\n    },\n\n    get isCfnStep() {\n      return self.step === 'cfn';\n    },\n\n    get dropdownAccountOptions() {\n      const accountsStore = getEnv(self).dataSourceAccountsStore;\n\n      return accountsStore.dropdownOptions;\n    },\n\n    get processedAccount() {\n      if (_.isEmpty(self.accountId)) return {};\n\n      return self.getAccount(self.accountId);\n    },\n\n    get accountsStore() {\n      return getEnv(self).dataSourceAccountsStore;\n    },\n\n    getAccount(id) {\n      return self.accountsStore.getAccount(id);\n    },\n\n    getBucket({ accountId, bucketName }) {\n      const account = self.getAccount(accountId);\n      if (_.isEmpty(account)) return undefined;\n\n      return _.find(account.buckets, bucket => bucket.name === bucketName);\n    },\n\n    getBucketRegion({ accountId, bucketName }) {\n      const bucket = self.getBucket({ accountId, bucketName });\n      if (_.isEmpty(bucket)) return undefined;\n\n      return bucket.region;\n    },\n\n    getDropdownBucketOptions(accountId) {\n      const account = self.getAccount(accountId);\n      if (_.isEmpty(account)) return [];\n\n      return _.map(account.buckets, bucket => ({\n        key: bucket.name,\n        value: bucket.name,\n        text: bucket.name,\n      }));\n    },\n  }));\n\n// Given an object returns a new object where all empty/undefined properties are removed\nfunction removeEmpty(obj) {\n  const result = {};\n  _.forEach(_.keys(obj), key => {\n    if (!_.isEmpty(obj[key])) {\n      result[key] = obj[key];\n    }\n  });\n\n  return result;\n}\n\nfunction registerContextItems(appContext) {\n  appContext.registerStudyWizard = RegisterStudyWizard.create({}, appContext);\n}\n\nexport { RegisterStudyWizard, registerContextItems };\n"],"file":"RegisterStudyWizard.js"}