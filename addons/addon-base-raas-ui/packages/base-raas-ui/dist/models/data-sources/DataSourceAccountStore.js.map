{"version":3,"sources":["../../../src/models/data-sources/DataSourceAccountStore.js"],"names":["DataSourceAccountStore","BaseStore","named","props","accountId","studyStores","types","map","DataSourceStudyStore","stackInfoStore","maybe","DataSourceStackInfoStore","tickPeriod","actions","self","superCleanup","cleanup","doLoad","studies","account","setStudies","getStudyStore","studyId","entry","get","set","create","getStackInfoStore","clear","views","parent","a","getAccount","studiesTotal","size","getStudy"],"mappings":";;;;;;;AAeA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA;AACA;AACA;AACA,IAAMA,sBAAsB,GAAGC,qBAAUC,KAAV,CAAgB,wBAAhB,EAC5BC,KAD4B,CACtB;AACLC,EAAAA,SAAS,EAAE,EADN;AAELC,EAAAA,WAAW,EAAEC,qBAAMC,GAAN,CAAUC,0CAAV,CAFR;AAGLC,EAAAA,cAAc,EAAEH,qBAAMI,KAAN,CAAYC,kDAAZ,CAHX;AAILC,EAAAA,UAAU,EAAE,KAAK,IAJZ,CAIkB;;AAJlB,CADsB,EAQ5BC,OAR4B,CAQpB,UAAAC,IAAI,EAAI;AACf;AACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAA1B;AAEA,SAAO;AACCC,IAAAA,MADD,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACS,+BAAqBH,IAAI,CAACV,SAA1B,CADT;;AAAA;AACPc,gBAAAA,OADO;AAEPC,gBAAAA,OAFO,GAEGL,IAAI,CAACK,OAFR;AAGbA,gBAAAA,OAAO,CAACC,UAAR,CAAmBF,OAAnB;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAId,KALI;AAOLG,IAAAA,aAPK,yBAOSC,OAPT,EAOkB;AACrB,UAAIC,KAAK,GAAGT,IAAI,CAACT,WAAL,CAAiBmB,GAAjB,CAAqBF,OAArB,CAAZ;;AACA,UAAI,CAACC,KAAL,EAAY;AACV;AACAT,QAAAA,IAAI,CAACT,WAAL,CAAiBoB,GAAjB,CAAqBH,OAArB,EAA8Bd,2CAAqBkB,MAArB,CAA4B;AAAEtB,UAAAA,SAAS,EAAEU,IAAI,CAACV,SAAlB;AAA6BkB,UAAAA,OAAO,EAAPA;AAA7B,SAA5B,CAA9B;AACAC,QAAAA,KAAK,GAAGT,IAAI,CAACT,WAAL,CAAiBmB,GAAjB,CAAqBF,OAArB,CAAR;AACD;;AAED,aAAOC,KAAP;AACD,KAhBI;AAkBLI,IAAAA,iBAlBK,+BAkBe;AAClB,UAAIJ,KAAK,GAAGT,IAAI,CAACL,cAAjB;;AACA,UAAI,CAACc,KAAL,EAAY;AACV;AACAT,QAAAA,IAAI,CAACL,cAAL,GAAsBE,mDAAyBe,MAAzB,CAAgC;AAAEtB,UAAAA,SAAS,EAAEU,IAAI,CAACV;AAAlB,SAAhC,CAAtB;AACAmB,QAAAA,KAAK,GAAGT,IAAI,CAACL,cAAb;AACD;;AAED,aAAOc,KAAP;AACD,KA3BI;AA6BLP,IAAAA,OAAO,EAAE,mBAAM;AACbF,MAAAA,IAAI,CAACV,SAAL,GAAiB,EAAjB;AACAU,MAAAA,IAAI,CAACT,WAAL,CAAiBuB,KAAjB;AACAd,MAAAA,IAAI,CAACL,cAAL,CAAoBmB,KAApB;AACAb,MAAAA,YAAY;AACb;AAlCI,GAAP;AAoCD,CAhD4B,EAkD5Bc,KAlD4B,CAkDtB,UAAAf,IAAI;AAAA,SAAK;AACd,QAAIK,OAAJ,GAAc;AACZ,UAAMW,MAAM,GAAG,8BAAUhB,IAAV,EAAgB,CAAhB,CAAf;AACA,UAAMiB,CAAC,GAAGD,MAAM,CAACE,UAAP,CAAkBlB,IAAI,CAACV,SAAvB,CAAV;AACA,aAAO2B,CAAP;AACD,KALa;;AAOd,QAAIE,YAAJ,GAAmB;AACjB,UAAMd,OAAO,GAAGL,IAAI,CAACK,OAAL,IAAgB;AAAED,QAAAA,OAAO,EAAE;AAAX,OAAhC;AACA,aAAOC,OAAO,CAACD,OAAR,CAAgBgB,IAAvB;AACD,KAVa;;AAYdC,IAAAA,QAZc,oBAYLb,OAZK,EAYI;AAChB,aAAOR,IAAI,CAACK,OAAL,CAAagB,QAAb,CAAsBb,OAAtB,CAAP;AACD;AAda,GAAL;AAAA,CAlDkB,CAA/B,C,CAmEA;AACA;AACA","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { getParent, types } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\n\nimport { getDataSourceStudies } from '../../helpers/api';\nimport { DataSourceStudyStore } from './DataSourceStudyStore';\nimport { DataSourceStackInfoStore } from './DataSourceStackInfoStore';\n\n// ==================================================================\n// DataSourceAccountStore\n// ==================================================================\nconst DataSourceAccountStore = BaseStore.named('DataSourceAccountStore')\n  .props({\n    accountId: '',\n    studyStores: types.map(DataSourceStudyStore),\n    stackInfoStore: types.maybe(DataSourceStackInfoStore),\n    tickPeriod: 60 * 1000, // 1 minute\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const studies = await getDataSourceStudies(self.accountId);\n        const account = self.account;\n        account.setStudies(studies);\n      },\n\n      getStudyStore(studyId) {\n        let entry = self.studyStores.get(studyId);\n        if (!entry) {\n          // Lazily create the store\n          self.studyStores.set(studyId, DataSourceStudyStore.create({ accountId: self.accountId, studyId }));\n          entry = self.studyStores.get(studyId);\n        }\n\n        return entry;\n      },\n\n      getStackInfoStore() {\n        let entry = self.stackInfoStore;\n        if (!entry) {\n          // Lazily create the store\n          self.stackInfoStore = DataSourceStackInfoStore.create({ accountId: self.accountId });\n          entry = self.stackInfoStore;\n        }\n\n        return entry;\n      },\n\n      cleanup: () => {\n        self.accountId = '';\n        self.studyStores.clear();\n        self.stackInfoStore.clear();\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get account() {\n      const parent = getParent(self, 2);\n      const a = parent.getAccount(self.accountId);\n      return a;\n    },\n\n    get studiesTotal() {\n      const account = self.account || { studies: {} };\n      return account.studies.size;\n    },\n\n    getStudy(studyId) {\n      return self.account.getStudy(studyId);\n    },\n  }));\n\n// Note: Do NOT register this in the global context, if you want to gain access to an instance\n//       use dataSourceAccountsStore.getDataSourceAccountStore()\n// eslint-disable-next-line import/prefer-default-export\nexport { DataSourceAccountStore };\n"],"file":"DataSourceAccountStore.js"}