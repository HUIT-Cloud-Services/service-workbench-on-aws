{"version":3,"sources":["../../../src/models/data-sources/DataSourceStackInfoStore.js"],"names":["DataSourceStackInfoStore","BaseStore","named","props","accountId","tickPeriod","actions","self","superCleanup","cleanup","doLoad","account","stackInfo","setStackInfo","views","parent","a"],"mappings":";;;;;;;AAeA;;AACA;;AAEA;;;;;;AAEA;AACA;AACA;AACA,IAAMA,wBAAwB,GAAGC,qBAAUC,KAAV,CAAgB,0BAAhB,EAC9BC,KAD8B,CACxB;AACLC,EAAAA,SAAS,EAAE,EADN;AAELC,EAAAA,UAAU,EAAE,IAAI,EAAJ,GAAS,IAFhB,CAEsB;;AAFtB,CADwB,EAM9BC,OAN8B,CAMtB,UAAAC,IAAI,EAAI;AACf;AACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAA1B;AAEA,SAAO;AACCC,IAAAA,MADD,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,gBAAAA,OADO,GACGJ,IAAI,CAACI,OADR;AAAA;AAAA,uBAEW,qCAA2BJ,IAAI,CAACH,SAAhC,CAFX;;AAAA;AAEPQ,gBAAAA,SAFO;AAGbD,gBAAAA,OAAO,CAACE,YAAR,CAAqBD,SAArB;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAId,KALI;AAOLH,IAAAA,OAAO,EAAE,mBAAM;AACbF,MAAAA,IAAI,CAACH,SAAL,GAAiB,EAAjB;AACAI,MAAAA,YAAY;AACb;AAVI,GAAP;AAYD,CAtB8B,EAwB9BM,KAxB8B,CAwBxB,UAAAP,IAAI;AAAA,SAAK;AACd,QAAII,OAAJ,GAAc;AACZ,UAAMI,MAAM,GAAG,8BAAUR,IAAV,CAAf;AACA,UAAMS,CAAC,GAAGD,MAAM,CAACJ,OAAjB;AACA,aAAOK,CAAP;AACD;;AALa,GAAL;AAAA,CAxBoB,CAAjC,C,CAgCA;AACA;AACA","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { getParent } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\n\nimport { generateAccountCfnTemplate } from '../../helpers/api';\n\n// ==================================================================\n// DataSourceStackInfoStore\n// ==================================================================\nconst DataSourceStackInfoStore = BaseStore.named('DataSourceStackInfoStore')\n  .props({\n    accountId: '',\n    tickPeriod: 2 * 60 * 1000, // 2 minutes\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const account = self.account;\n        const stackInfo = await generateAccountCfnTemplate(self.accountId);\n        account.setStackInfo(stackInfo);\n      },\n\n      cleanup: () => {\n        self.accountId = '';\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get account() {\n      const parent = getParent(self);\n      const a = parent.account;\n      return a;\n    },\n  }));\n\n// Note: Do NOT register this in the global context, if you want to gain access to an instance\n//       use dataSourceAccountStore.getDataSourceStackInfoStore()\n// eslint-disable-next-line import/prefer-default-export\nexport { DataSourceStackInfoStore };\n"],"file":"DataSourceStackInfoStore.js"}