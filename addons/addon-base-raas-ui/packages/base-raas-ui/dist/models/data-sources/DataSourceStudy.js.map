{"version":3,"sources":["../../../src/models/data-sources/DataSourceStudy.js"],"names":["states","pending","id","display","color","error","reachable","DataSourceStudy","types","model","rev","maybe","number","name","folder","accountId","awsPartition","bucket","accessType","bucketAccess","qualifier","appRoleArn","category","region","kmsScope","kmsArn","status","statusMsg","statusAt","createdAt","createdBy","updatedAt","updatedBy","permissions","frozen","actions","self","setStudy","raw","_","forEach","value","key","isArray","replace","isUndefined","setPermissions","views","friendlyAccessType","myStudies","state","pendingState","errorState","reachableState","statusMessageInfo","msg","info","prefix","message","isEmpty","startsWith","nth","split"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\n\nconst states = {\n  pending: {\n    id: 'pending',\n    display: 'Pending',\n    color: 'orange',\n  },\n  error: {\n    id: 'error',\n    display: 'Unavailable',\n    color: 'red',\n  },\n  reachable: {\n    id: 'reachable',\n    display: 'Available',\n    color: 'green',\n  },\n};\n\n// ==================================================================\n// DataSourceStudy\n// ==================================================================\nconst DataSourceStudy = types\n  .model('DataSourceStudy', {\n    id: '',\n    rev: types.maybe(types.number),\n    name: '',\n    folder: '',\n    accountId: '',\n    awsPartition: 'aws',\n    bucket: '',\n    accessType: '',\n    bucketAccess: '',\n    qualifier: '',\n    appRoleArn: '',\n    category: '',\n    region: '',\n    kmsScope: '',\n    kmsArn: '',\n    status: '',\n    statusMsg: '',\n    statusAt: '',\n    createdAt: '',\n    createdBy: '',\n    updatedAt: '',\n    updatedBy: '',\n    permissions: types.maybe(types.frozen()),\n  })\n  .actions(self => ({\n    setStudy(raw = {}) {\n      _.forEach(raw, (value, key) => {\n        if (value === 'permissions') return; // we don't want to update the permissions\n        if (_.isArray(value)) {\n          self[key].replace(value);\n        } else {\n          self[key] = value;\n        }\n      });\n      // We want to take care of thee statusMsg because it might come as undefined\n      if (_.isUndefined(raw.statusMsg)) self.statusMsg = '';\n    },\n\n    setPermissions(permissions = {}) {\n      self.permissions = permissions;\n    },\n  }))\n\n  // eslint-disable-next-line no-unused-vars\n  .views(self => ({\n    get friendlyAccessType() {\n      if (self.accessType === 'readonly') return 'Read Only';\n      if (self.accessType === 'writeonly') return 'Write Only';\n      return 'Read & Write';\n    },\n\n    get myStudies() {\n      return self.category === 'My Studies';\n    },\n\n    get state() {\n      return states[self.status] || states.reachable;\n    },\n\n    get pendingState() {\n      return self.status === 'pending';\n    },\n\n    get errorState() {\n      return self.status === 'error';\n    },\n\n    get reachableState() {\n      return self.status === 'reachable';\n    },\n\n    get statusMessageInfo() {\n      const msg = self.statusMsg;\n      const info = {\n        prefix: '',\n        color: 'grey',\n        message: msg,\n      };\n\n      if (_.isEmpty(msg)) return info;\n\n      if (_.startsWith(msg, 'WARN|||')) {\n        info.prefix = 'WARN';\n        info.message = _.nth(_.split(msg, '|||'), 1);\n        info.color = 'orange';\n      } else if (_.startsWith(msg, 'ERR|||')) {\n        info.prefix = 'ERR';\n        info.message = _.nth(_.split(msg, '|||'), 1);\n        info.color = 'red';\n      }\n\n      return info;\n    },\n  }));\n\nexport { DataSourceStudy }; // eslint-disable-line import/prefer-default-export\n"],"file":"DataSourceStudy.js"}