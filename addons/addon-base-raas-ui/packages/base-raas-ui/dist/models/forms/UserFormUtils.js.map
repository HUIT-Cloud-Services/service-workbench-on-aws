{"version":3,"sources":["../../../src/models/forms/UserFormUtils.js"],"names":["toIdpOptions","providerConfigs","options","_","forEach","providerConfig","config","isEmpty","federatedIdentityProviders","idp","push","key","id","text","name","value","JSON","stringify","authNProviderId","idpName","toIdpFromValue","parse","toValueFromIdp","authenticationProviderId","identityProviderName"],"mappings":";;;;;;;;;AAeA;;;;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,CAAsBC,eAAtB,EAAuC;AACrC,MAAMC,OAAO,GAAG,EAAhB;;AAEAC,qBAAEC,OAAF,CAAUH,eAAV,EAA2B,UAAAI,cAAc,EAAI;AAC3C,QAAMC,MAAM,GAAGD,cAAc,CAACC,MAA9B,CAD2C,CAG3C;;AACA,QAAI,CAACH,mBAAEI,OAAF,CAAUD,MAAM,CAACE,0BAAjB,CAAL,EAAmD;AACjDL,yBAAEC,OAAF,CAAUE,MAAM,CAACE,0BAAjB,EAA6C,UAAAC,GAAG,EAAI;AAClDP,QAAAA,OAAO,CAACQ,IAAR,CAAa;AACXC,UAAAA,GAAG,EAAEF,GAAG,CAACG,EADE;AAEXC,UAAAA,IAAI,EAAEJ,GAAG,CAACK,IAFC;AAIX;AACA;AACA;AACAC,UAAAA,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,YAAAA,eAAe,EAAEb,cAAc,CAACO,EAAlC;AAAsCO,YAAAA,OAAO,EAAEV,GAAG,CAACK;AAAnD,WAAf;AAPI,SAAb;AASD,OAVD;AAWD;AACF,GAjBD;;AAkBA,SAAOZ,OAAP;AACD,C,CAED;;;AACA,SAASkB,cAAT,CAAwBL,KAAxB,EAA+B;AAC7B,SAAOC,IAAI,CAACK,KAAL,CAAWN,KAAX,CAAP;AACD,C,CAED;;;AACA,SAASO,cAAT,OAA4E;AAAA,MAAlDC,wBAAkD,QAAlDA,wBAAkD;AAAA,MAAxBC,oBAAwB,QAAxBA,oBAAwB;AAC1E,SAAOR,IAAI,CAACC,SAAL,CAAe;AAAEC,IAAAA,eAAe,EAAEK,wBAAnB;AAA6CJ,IAAAA,OAAO,EAAEK;AAAtD,GAAf,CAAP;AACD,C,CAED","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\n\n/**\n * Returns identity provider options that can be used for displaying idp selection options\n * @param providerConfigs An array of authentication provider configuration objects. For details about the shape of\n * the object see \"authenticationProviderConfigs\" property of\n * \"addons/addon-base-ui/packages/base-ui/src/models/authentication/AuthenticationProviderConfigsStore.js\"\n *\n * @returns {[]}\n */\nfunction toIdpOptions(providerConfigs) {\n  const options = [];\n\n  _.forEach(providerConfigs, providerConfig => {\n    const config = providerConfig.config;\n\n    // Each providerConfig (authentication provider) can have zero or more identity providers.\n    if (!_.isEmpty(config.federatedIdentityProviders)) {\n      _.forEach(config.federatedIdentityProviders, idp => {\n        options.push({\n          key: idp.id,\n          text: idp.name,\n\n          // Make sure the authentication provider's information is embedded in the value\n          // along with the idp name. This is required so disambiguate two idps with the same idp name based on which\n          // authentication provider they belong to\n          value: JSON.stringify({ authNProviderId: providerConfig.id, idpName: idp.name }),\n        });\n      });\n    }\n  });\n  return options;\n}\n\n// From string to object\nfunction toIdpFromValue(value) {\n  return JSON.parse(value);\n}\n\n// From object to string\nfunction toValueFromIdp({ authenticationProviderId, identityProviderName }) {\n  return JSON.stringify({ authNProviderId: authenticationProviderId, idpName: identityProviderName });\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport { toIdpOptions, toIdpFromValue, toValueFromIdp };\n"],"file":"UserFormUtils.js"}