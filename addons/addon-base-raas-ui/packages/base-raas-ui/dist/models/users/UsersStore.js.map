{"version":3,"sources":["../../../src/models/users/UsersStore.js"],"names":["UsersStore","BaseStore","named","props","users","types","optional","map","User","tickPeriod","actions","self","superCleanup","cleanup","doLoad","runInAction","forEach","user","userModel","create","previous","get","id","set","clear","addUser","username","email","addedUser","addedUserModel","addUsers","updateUser","updatedUser","previousUser","updateUserApplication","res","deleteUser","deletedUser","views","empty","size","hasNonRootAdmins","nonRootAdmins","_","filter","list","isAdmin","isRootUser","isEmpty","hasNonRootUsers","nonRootUsers","result","push","asSelectOptions","nonClearables","value","label","longDisplayName","clearableValue","includes","asDropDownOptions","status","key","text","asUserObject","userIdentifier","uid","ns","undefined","asUserObjects","userIdentifiers","registerContextItems","appContext","usersStore"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { applySnapshot, detach, getSnapshot, types } from 'mobx-state-tree';\nimport { addUser, updateUser, getUsers } from '@aws-ee/base-ui/dist/helpers/api';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\n\nimport { deleteUser, addUsers, updateUserApplication } from '../../helpers/api';\nimport { User } from './User';\n\nconst UsersStore = BaseStore.named('UsersStore')\n  .props({\n    users: types.optional(types.map(User), {}),\n    tickPeriod: 60 * 1000, // 1 minute\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const users = (await getUsers()) || [];\n        self.runInAction(() => {\n          users.forEach(user => {\n            const userModel = User.create(user);\n            const previous = self.users.get(userModel.id);\n            if (!previous) {\n              self.users.set(userModel.id, userModel);\n            } else {\n              applySnapshot(previous, user);\n            }\n          });\n        });\n      },\n\n      cleanup: () => {\n        self.users.clear();\n        superCleanup();\n      },\n      addUser: async user => {\n        // if username is not specified then pass email as username\n        const username = user.username || user.email;\n        const addedUser = await addUser({ ...user, username });\n        self.runInAction(() => {\n          // Added newly created user to users map\n          const addedUserModel = User.create(addedUser);\n          self.users.set(addedUserModel.id, addedUserModel);\n        });\n      },\n      addUsers: async users => {\n        await addUsers(users);\n      },\n      updateUser: async user => {\n        const updatedUser = await updateUser(user);\n        const userModel = User.create(updatedUser);\n        const previousUser = self.users.get(userModel.id);\n        applySnapshot(previousUser, updatedUser);\n      },\n      updateUserApplication: async user => {\n        const res = await updateUserApplication(user);\n        return res;\n      },\n      deleteUser: async user => {\n        const id = user && user.id ? user.id : User.create(user).id;\n        await deleteUser(user);\n        const deletedUser = self.users.get(id);\n        self.runInAction(() => {\n          // Detaching here instead of deleting because the ReactTable component in UsersList somehow still fires\n          // \"Cell\" component rendering after the user is deleted from the map\n          // That results in the following error\n          // \"You are trying to read or write to an object that is no longer part of a state tree. (Object type: 'User', Path upon death: \"\n          detach(deletedUser);\n          // self.users.delete(id);\n        });\n        // return deletedUser;\n      },\n    };\n  })\n\n  .views(self => ({\n    get empty() {\n      return self.users.size === 0;\n    },\n\n    get hasNonRootAdmins() {\n      const nonRootAdmins = _.filter(self.list, user => user.isAdmin && !user.isRootUser);\n      return !_.isEmpty(nonRootAdmins);\n    },\n\n    get hasNonRootUsers() {\n      return !_.isEmpty(self.nonRootUsers);\n    },\n\n    get nonRootUsers() {\n      return _.filter(self.list, user => !user.isRootUser);\n    },\n\n    get list() {\n      const result = [];\n      // converting map self.users to result array\n      self.users.forEach(user => result.push(user));\n      return result;\n    },\n\n    asSelectOptions({ nonClearables = [] } = {}) {\n      const result = [];\n      self.users.forEach(user =>\n        result.push({\n          value: user.id,\n          label: user.longDisplayName,\n          clearableValue: !nonClearables.includes(user.id),\n        }),\n      );\n      return result;\n    },\n\n    asDropDownOptions({ status = 'active' } = {}) {\n      const result = [];\n      self.users.forEach(user => {\n        if (user.status === status) {\n          result.push({\n            key: user.id,\n            value: user.id,\n            text: user.longDisplayName,\n          });\n        }\n      });\n      return result;\n    },\n\n    asUserObject(userIdentifier) {\n      if (userIdentifier) {\n        const user = self.users.get(userIdentifier.uid);\n        return user || User.create({ username: userIdentifier.username, ns: userIdentifier.ns });\n      }\n      return undefined;\n    },\n\n    asUserObjects(userIdentifiers = []) {\n      const result = [];\n      userIdentifiers.forEach(userIdentifier => {\n        if (userIdentifier) {\n          const user = self.users.get(userIdentifier.uid);\n          if (user) {\n            result.push(user);\n          } else {\n            result.push(User.create(getSnapshot(userIdentifier)));\n          } // this could happen in the employee is no longer active or with the company\n        }\n      });\n\n      return result;\n    },\n  }));\n\nfunction registerContextItems(appContext) {\n  appContext.usersStore = UsersStore.create({}, appContext);\n}\n\nexport { UsersStore, registerContextItems };\n"],"file":"UsersStore.js"}