{"version":3,"sources":["../../../src/models/users/User.js"],"names":["User","types","model","uid","firstName","maybeNull","optional","string","lastName","isAdmin","username","ns","email","userType","authenticationProviderId","identityProviderName","status","rev","userRole","projectId","array","isExternalUser","encryptedCreds","applyReason","actions","self","runInAction","fn","setEncryptedCreds","unencryptedCreds","pin","region","JSON","stringify","storage","setItem","localStorageKeys","pinToken","clearEncryptedCreds","undefined","setUser","rawUser","createdBy","views","displayName","longDisplayName","unknown","fullName","isRootUser","_","toLower","isActive","isInternalGuest","isExternalGuest","isInternalResearcher","isExternalResearcher","isSystem","id","isSame","isSamePrincipal","principal","principalStr","hasProjects","isEmpty","hasCredentials","creds","parse","Error","capabilities","active","external","externalGuest","internalGuest","canCreateStudy","canCreateWorkspace","canSelectStudy","canViewDashboard","getPrincipalObjFromPrincipalStr","getPrincipalStrFromPrincipalObj"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { types } from 'mobx-state-tree';\nimport _ from 'lodash';\nimport { storage, removeNulls } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { aesGcmEncrypt, aesGcmDecrypt } from '../../helpers/crypto';\nimport localStorageKeys from '../constants/local-storage-keys';\n\nconst User = types\n  .model('User', {\n    uid: '',\n    firstName: types.maybeNull(types.optional(types.string, '')),\n    lastName: types.maybeNull(types.optional(types.string, '')),\n    isAdmin: types.optional(types.boolean, false),\n    username: '',\n    ns: types.maybeNull(types.optional(types.string, '')),\n    email: '',\n    userType: '',\n    authenticationProviderId: '', // Id of the authentication provider this user is authenticated against (such as internal, cognito auth provider id etc)\n    identityProviderName: types.maybeNull(types.optional(types.string, '')), // Name of the identity provider this user belongs to (such as Identity Provider Id in cognito user pool in case of Federation etc)\n    status: 'active',\n    rev: 0,\n    userRole: '',\n    projectId: types.array(types.string, []), // TODO this property should be named projectIds\n    isExternalUser: types.optional(types.boolean, false), // TODO we need to consider have this a derived property\n    encryptedCreds: types.maybeNull(types.string),\n    applyReason: '',\n  })\n  .actions(self => ({\n    runInAction(fn) {\n      return fn();\n    },\n    async setEncryptedCreds(unencryptedCreds, pin) {\n      unencryptedCreds.region = unencryptedCreds.region || 'us-east-1';\n      const encryptedCreds = await aesGcmEncrypt(JSON.stringify(unencryptedCreds), pin);\n      // TODO Should we store the pin in the session?\n      storage.setItem(localStorageKeys.pinToken, pin);\n      self.runInAction(() => {\n        self.encryptedCreds = encryptedCreds;\n      });\n    },\n    async clearEncryptedCreds() {\n      self.runInAction(() => {\n        self.encryptedCreds = undefined;\n      });\n    },\n    setUser(rawUser) {\n      removeNulls(rawUser);\n      self.firstName = rawUser.firstName || self.firstName || '';\n      self.lastName = rawUser.lastName || self.lastName || '';\n      self.isAdmin = rawUser.isAdmin || self.isAdmin;\n      self.isExternalUser = rawUser.isExternalUser || self.isExternalUser;\n      self.username = rawUser.username || self.username;\n      self.ns = rawUser.ns || self.ns;\n      self.email = rawUser.email || self.email;\n      self.authenticationProviderId = rawUser.authenticationProviderId || self.authenticationProviderId;\n      self.identityProviderName = rawUser.identityProviderName || self.identityProviderName;\n      self.status = rawUser.status || self.status || 'active';\n      self.createdBy = rawUser.createdBy || self.createdBy;\n      self.rev = rawUser.rev || self.rev || 0;\n      self.userRole = rawUser.userRole || self.userRole;\n      self.projectId = rawUser.projectId || self.projectId || [];\n      self.encryptedCreds = rawUser.encryptedCreds || self.encryptedCreds;\n      self.applyReason = rawUser.applyReason || self.applyReason || '';\n      // we don't update the other fields because they are being populated by a separate store\n    },\n  }))\n  .views(self => ({\n    get displayName() {\n      return `${self.firstName} ${self.lastName}`;\n    },\n\n    get longDisplayName() {\n      if (self.unknown) {\n        return `${self.username}??`;\n      }\n      const fullName = `${self.firstName} ${self.lastName}`;\n      if (self.email) {\n        return `${fullName} (${self.email})`;\n      }\n      return fullName;\n    },\n\n    get unknown() {\n      return !self.firstName && !self.lastName;\n    },\n\n    get isRootUser() {\n      return _.toLower(self.userType) === 'root';\n    },\n\n    get isActive() {\n      return _.toLower(self.status) === 'active';\n    },\n\n    get isInternalGuest() {\n      return self.userRole === 'internal-guest';\n    },\n\n    get isExternalGuest() {\n      return self.userRole === 'guest';\n    },\n\n    get isInternalResearcher() {\n      return self.userRole === 'researcher';\n    },\n\n    get isExternalResearcher() {\n      return self.userRole === 'external-researcher';\n    },\n\n    get isSystem() {\n      return self.id === '_system_';\n    },\n\n    isSame(uid) {\n      return self.uid === uid;\n    },\n\n    isSamePrincipal({ username, ns }) {\n      return self.username === username && self.ns === ns;\n    },\n\n    get id() {\n      return self.uid;\n    },\n\n    get principal() {\n      return { username: self.username, ns: self.ns };\n    },\n\n    get principalStr() {\n      return JSON.stringify(self.principal);\n    },\n\n    get hasProjects() {\n      return !_.isEmpty(self.projectId);\n    },\n\n    get hasCredentials() {\n      return self.isExternalResearcher && !_.isEmpty(self.encryptedCreds) && self.encryptedCreds !== 'N/A';\n    },\n\n    // TODO - this should not be a view, it should be moved to the actions section\n    //      - a better approach is to do unencryptedCreds as a view but then\n    //      have the call to store the pin in a separate method that is in the action\n    async unencryptedCreds(pin) {\n      try {\n        const creds = JSON.parse(await aesGcmDecrypt(self.encryptedCreds, pin));\n        // TODO Should we store the pin in the session?\n        storage.setItem(localStorageKeys.pinToken, pin);\n        return creds;\n      } catch (e) {\n        throw new Error('Invalid PIN. Please try again');\n      }\n    },\n\n    // A map of high level actions that the user is allowed to perform.\n    // Example:  { 'canCreateStudy': true/false, 'canCreateWorkspace': true/false }\n    //\n    // Note: actions that require a resource before the permission is determined, are NOT captured in this capability matrix.\n    get capabilities() {\n      const active = self.isActive;\n      const external = self.isExternalUser; // Either external guest or external user\n      const externalGuest = self.isExternalGuest;\n      const internalGuest = self.isInternalGuest;\n\n      const canCreateStudy = active && !external && !internalGuest;\n      const canCreateWorkspace = active && !externalGuest && !internalGuest;\n      const canSelectStudy = active && !externalGuest && !internalGuest;\n      const canViewDashboard = active && !external && !internalGuest;\n\n      return {\n        canCreateStudy,\n        canCreateWorkspace,\n        canSelectStudy,\n        canViewDashboard,\n      };\n    },\n  }));\n\nfunction getPrincipalObjFromPrincipalStr(principalStr) {\n  return JSON.parse(principalStr);\n}\n\nfunction getPrincipalStrFromPrincipalObj({ username, ns }) {\n  return JSON.stringify({ username, ns });\n}\n\nexport { User, getPrincipalObjFromPrincipalStr, getPrincipalStrFromPrincipalObj };\n"],"file":"User.js"}