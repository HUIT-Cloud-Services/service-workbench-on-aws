{"version":3,"sources":["../../../src/models/users/UserStore.js"],"names":["UserStore","BaseStore","named","props","user","types","maybe","User","actions","self","superCleanup","cleanup","doLoad","runInAction","create","undefined","views","empty","_","isEmpty","projectIdDropdown","result","map","projectId","id","key","value","text","cloneUser","username","authenticationProviderId","identityProviderName","firstName","lastName","email","isAdmin","status","userRole","rev","registerContextItems","appContext","userStore"],"mappings":";;;;;;;;AAeA;;AACA;;AAEA;;AACA;;AAEA;;;;;;;;AAEA,IAAMA,SAAS,GAAGC,qBAAUC,KAAV,CAAgB,WAAhB,EACfC,KADe,CACT;AACLC,EAAAA,IAAI,EAAEC,qBAAMC,KAAN,CAAYC,UAAZ;AADD,CADS,EAIfC,OAJe,CAIP,UAAAC,IAAI,EAAI;AACf;AACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAA1B;AAEA,SAAO;AACCC,IAAAA,MADD,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACM,mBADN;;AAAA;AACPR,gBAAAA,IADO;AAEbK,gBAAAA,IAAI,CAACI,WAAL,CAAiB,YAAM;AACrBJ,kBAAAA,IAAI,CAACL,IAAL,GAAYG,WAAKO,MAAL,CAAYV,IAAZ,CAAZ;AACD,iBAFD;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKd,KANI;AAOLO,IAAAA,OAAO,EAAE,mBAAM;AACbF,MAAAA,IAAI,CAACL,IAAL,GAAYW,SAAZ;AACAL,MAAAA,YAAY;AACb;AAVI,GAAP;AAYD,CApBe,EAsBfM,KAtBe,CAsBT,UAAAP,IAAI;AAAA,SAAK;AACd,QAAIQ,KAAJ,GAAY;AACV,aAAOC,mBAAEC,OAAF,CAAUV,IAAI,CAACL,IAAf,CAAP;AACD,KAHa;;AAKd;AACA,QAAIgB,iBAAJ,GAAwB;AACtB,UAAMC,MAAM,GAAGH,mBAAEI,GAAF,CAAMb,IAAI,CAACL,IAAL,CAAUmB,SAAhB,EAA2B,UAAAC,EAAE;AAAA,eAAK;AAAEC,UAAAA,GAAG,EAAED,EAAP;AAAWE,UAAAA,KAAK,EAAEF,EAAlB;AAAsBG,UAAAA,IAAI,EAAEH;AAA5B,SAAL;AAAA,OAA7B,CAAf;;AACA,aAAOH,MAAP;AACD,KATa;;AAWd,QAAIO,SAAJ,GAAgB;AACd,UAAIP,MAAM,GAAG,EAAb;AADc,uBAcVZ,IAAI,CAACL,IAdK;AAAA,UAGZyB,QAHY,cAGZA,QAHY;AAAA,UAIZC,wBAJY,cAIZA,wBAJY;AAAA,UAKZC,oBALY,cAKZA,oBALY;AAAA,UAMZC,SANY,cAMZA,SANY;AAAA,UAOZC,QAPY,cAOZA,QAPY;AAAA,UAQZC,KARY,cAQZA,KARY;AAAA,UASZC,OATY,cASZA,OATY;AAAA,UAUZC,MAVY,cAUZA,MAVY;AAAA,UAWZC,QAXY,cAWZA,QAXY;AAAA,UAYZC,GAZY,cAYZA,GAZY;AAAA,UAaZf,SAbY,cAaZA,SAbY;AAedF,MAAAA,MAAM,GAAG;AACPQ,QAAAA,QAAQ,EAARA,QADO;AAEPC,QAAAA,wBAAwB,EAAxBA,wBAFO;AAGPC,QAAAA,oBAAoB,EAApBA,oBAHO;AAIPC,QAAAA,SAAS,EAATA,SAJO;AAKPC,QAAAA,QAAQ,EAARA,QALO;AAMPC,QAAAA,KAAK,EAALA,KANO;AAOPC,QAAAA,OAAO,EAAPA,OAPO;AAQPC,QAAAA,MAAM,EAANA,MARO;AASPE,QAAAA,GAAG,EAAHA,GATO;AAUPD,QAAAA,QAAQ,EAARA,QAVO;AAWPd,QAAAA,SAAS,EAATA;AAXO,OAAT;AAaA,aAAOF,MAAP;AACD;;AAxCa,GAAL;AAAA,CAtBK,CAAlB;;;;AAiEA,SAASkB,oBAAT,CAA8BC,UAA9B,EAA0C;AACxCA,EAAAA,UAAU,CAACC,SAAX,GAAuBzC,SAAS,CAACc,MAAV,CAAiB,EAAjB,EAAqB0B,UAArB,CAAvB;AACD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\n\nimport { getUser } from '@aws-ee/base-ui/dist/helpers/api';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\n\nimport { User } from './User';\n\nconst UserStore = BaseStore.named('UserStore')\n  .props({\n    user: types.maybe(User),\n  })\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const user = await getUser();\n        self.runInAction(() => {\n          self.user = User.create(user);\n        });\n      },\n      cleanup: () => {\n        self.user = undefined;\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get empty() {\n      return _.isEmpty(self.user);\n    },\n\n    // TODO this method should really be moved to the User model and renamed to something like projectIdOptions\n    get projectIdDropdown() {\n      const result = _.map(self.user.projectId, id => ({ key: id, value: id, text: id }));\n      return result;\n    },\n\n    get cloneUser() {\n      let result = {};\n      const {\n        username,\n        authenticationProviderId,\n        identityProviderName,\n        firstName,\n        lastName,\n        email,\n        isAdmin,\n        status,\n        userRole,\n        rev,\n        projectId,\n      } = self.user;\n      result = {\n        username,\n        authenticationProviderId,\n        identityProviderName,\n        firstName,\n        lastName,\n        email,\n        isAdmin,\n        status,\n        rev,\n        userRole,\n        projectId,\n      };\n      return result;\n    },\n  }));\n\nfunction registerContextItems(appContext) {\n  appContext.userStore = UserStore.create({}, appContext);\n}\n\nexport { UserStore, registerContextItems };\n"],"file":"UserStore.js"}