{"version":3,"sources":["../../../../src/models/users/__tests__/UsersStore.test.js"],"names":["jest","mock","describe","store","appContext","uid","exampleUser","firstName","lastName","username","ns","beforeEach","usersStore","it","getUsers","mockResolvedValueOnce","addUser","load","expect","list","toEqual","otherUser","addUsers","mockImplementation","updatedExampleUser","updateUser","mockResolvedValue","deleteUser","length"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { addUser, updateUser, getUsers } from '@aws-ee/base-ui/dist/helpers/api';\nimport { addUsers } from '../../../helpers/api';\n\nimport { registerContextItems as registerUsersStore } from '../UsersStore';\n\njest.mock('@aws-ee/base-ui/dist/helpers/api');\njest.mock('../../../helpers/api');\n\ndescribe('UsersStore', () => {\n  let store = null;\n  const appContext = {};\n  const uid = 'u-exampleUserId';\n  const exampleUser = {\n    uid,\n    firstName: 'ExampleFn',\n    lastName: 'ExampleLn',\n    username: 'example',\n    ns: 'example.025',\n  };\n\n  beforeEach(async () => {\n    await registerUsersStore(appContext);\n    store = appContext.usersStore;\n  });\n\n  describe('adding users', () => {\n    it('should add a user', async () => {\n      // BUILD\n      getUsers.mockResolvedValueOnce([]);\n      addUser.mockResolvedValueOnce(exampleUser);\n\n      // store = UsersStore.create({}, {});\n      await store.load();\n\n      // OPERATE\n      await store.addUser(exampleUser);\n\n      // CHECK\n      // note we can't match the object because store.list[0] is just get/set methods\n      expect(store.list[0].firstName).toEqual(exampleUser.firstName);\n      expect(store.list[0].lastName).toEqual(exampleUser.lastName);\n    });\n\n    it('should add two users', async () => {\n      // BUILD\n      getUsers.mockResolvedValueOnce([]);\n      const otherUser = {\n        uid: 'u-exampleUserId2',\n        firstName: 'ExampleFn2',\n        lastName: 'ExampleLn2',\n        username: 'example2',\n        ns: 'example2.025',\n      };\n\n      addUser.mockResolvedValueOnce(exampleUser).mockResolvedValueOnce(otherUser);\n      addUsers.mockImplementation(async () => {\n        await store.addUser(exampleUser);\n        await store.addUser(otherUser);\n      });\n\n      // store = UsersStore.create({}, {});\n      await store.load();\n\n      // OPERATE\n      await store.addUsers([exampleUser, otherUser]);\n\n      // CHECK\n      expect(store.list[0].firstName).toEqual(exampleUser.firstName);\n      expect(store.list[0].lastName).toEqual(exampleUser.lastName);\n      expect(store.list[1].firstName).toEqual(otherUser.firstName);\n      expect(store.list[1].lastName).toEqual(otherUser.lastName);\n    });\n  });\n\n  describe('updating users', () => {\n    it('should update the user', async () => {\n      // BUILD\n      const updatedExampleUser = {\n        uid,\n        firstName: 'ExampleFnUpdated',\n        lastName: 'ExampleLnUpdated',\n        username: 'example',\n        ns: 'example.025',\n      };\n      getUsers.mockResolvedValueOnce([exampleUser]);\n      updateUser.mockResolvedValueOnce(updatedExampleUser);\n\n      // store = UsersStore.create({}, {});\n      await store.load();\n\n      // OPERATE\n      await store.updateUser(exampleUser);\n\n      // CHECK\n      expect(store.list[0].firstName).toEqual(updatedExampleUser.firstName);\n      expect(store.list[0].lastName).toEqual(updatedExampleUser.lastName);\n    });\n  });\n\n  describe('deleting users', () => {\n    it('should delete the user', async () => {\n      // BUILD\n      getUsers.mockResolvedValue([exampleUser]);\n      await store.load();\n\n      // OPERATE\n      await store.deleteUser(exampleUser);\n\n      // CHECK\n      expect(store.list.length).toEqual(0);\n    });\n  });\n});\n"],"file":"UsersStore.test.js"}