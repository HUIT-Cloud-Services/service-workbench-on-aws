{"version":3,"sources":["../../../src/models/projects/Project.js"],"names":["Project","types","model","id","identifier","rev","maybe","number","description","indexId","createdAt","createdBy","updatedAt","updatedBy","projectAdmins","optional","array","string","actions","self","setProject","rawProject","views","projectAdminUsers","usersStore","_","map","uid","asUserObject"],"mappings":";;;;;;;AAeA;;AACA;;;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA,IAAMA,OAAO,GAAGC,qBACbC,KADa,CACP,SADO,EACI;AAChBC,EAAAA,EAAE,EAAEF,qBAAMG,UADM;AAEhBC,EAAAA,GAAG,EAAEJ,qBAAMK,KAAN,CAAYL,qBAAMM,MAAlB,CAFW;AAGhBC,EAAAA,WAAW,EAAE,EAHG;AAIhBC,EAAAA,OAAO,EAAE,EAJO;AAKhBC,EAAAA,SAAS,EAAE,EALK;AAMhBC,EAAAA,SAAS,EAAE,EANK;AAOhBC,EAAAA,SAAS,EAAE,EAPK;AAQhBC,EAAAA,SAAS,EAAE,EARK;AAShBC,EAAAA,aAAa,EAAEb,qBAAMc,QAAN,CAAed,qBAAMe,KAAN,CAAYf,qBAAMgB,MAAlB,CAAf,EAA0C,EAA1C;AATC,CADJ,EAYbC,OAZa,CAYL,UAAAC,IAAI;AAAA,SAAK;AAChBC,IAAAA,UADgB,sBACLC,UADK,EACO;AACrB;AACA;AACA,wCAAcF,IAAd,EAAoBE,UAApB;AACD;AALe,GAAL;AAAA,CAZC,EAoBd;AApBc,CAqBbC,KArBa,CAqBP,UAAAH,IAAI;AAAA,SAAK;AACd;AACA,QAAII,iBAAJ,GAAwB;AACtB,UAAMC,UAAU,GAAG,2BAAOL,IAAP,EAAaK,UAAhC;AACA,aAAOC,mBAAEC,GAAF,CAAMP,IAAI,CAACL,aAAX,EAA0B,UAAAa,GAAG;AAAA,eAAIH,UAAU,CAACI,YAAX,CAAwB;AAAED,UAAAA,GAAG,EAAHA;AAAF,SAAxB,CAAJ;AAAA,OAA7B,CAAP;AACD;;AALa,GAAL;AAAA,CArBG,CAAhB,C,CA6BA","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types, applySnapshot, getEnv } from 'mobx-state-tree';\n\n// ==================================================================\n// Project\n// ==================================================================\nconst Project = types\n  .model('Project', {\n    id: types.identifier,\n    rev: types.maybe(types.number),\n    description: '',\n    indexId: '',\n    createdAt: '',\n    createdBy: '',\n    updatedAt: '',\n    updatedBy: '',\n    projectAdmins: types.optional(types.array(types.string), []),\n  })\n  .actions(self => ({\n    setProject(rawProject) {\n      // Note: if you have partial data vs full data, you need to replace the applySnapshot() with\n      // the appropriate logic\n      applySnapshot(self, rawProject);\n    },\n  }))\n\n  // eslint-disable-next-line no-unused-vars\n  .views(self => ({\n    // add view methods here\n    get projectAdminUsers() {\n      const usersStore = getEnv(self).usersStore;\n      return _.map(self.projectAdmins, uid => usersStore.asUserObject({ uid }));\n    },\n  }));\n\n// eslint-disable-next-line import/prefer-default-export\nexport { Project };\n"],"file":"Project.js"}