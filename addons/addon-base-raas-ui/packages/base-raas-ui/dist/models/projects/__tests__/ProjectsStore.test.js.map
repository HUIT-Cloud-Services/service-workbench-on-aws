{"version":3,"sources":["../../../../src/models/projects/__tests__/ProjectsStore.test.js"],"names":["jest","mock","describe","store","appContext","newProject","id","rev","description","indexId","createdAt","updatedAt","diffProject","beforeEach","projectsStore","it","getProjects","mockResolvedValueOnce","load","addProject","expect","toHaveBeenCalledWith","not","updateProject","fn"],"mappings":";;AAeA;;AAEA;;;;;;AAEAA,IAAI,CAACC,IAAL,CAAU,sBAAV;AAEAC,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9B,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,UAAU,GAAG;AACjBC,IAAAA,EAAE,EAAE,gBADa;AAEjBC,IAAAA,GAAG,EAAE,CAFY;AAGjBC,IAAAA,WAAW,EAAE,oBAHI;AAIjBC,IAAAA,OAAO,EAAE,IAJQ;AAKjBC,IAAAA,SAAS,EAAE,KALM;AAMjBC,IAAAA,SAAS,EAAE;AANM,GAAnB;AASA,MAAMC,WAAW,GAAG;AAClBN,IAAAA,EAAE,EAAE,qBADc;AAElBC,IAAAA,GAAG,EAAE,CAFa;AAGlBC,IAAAA,WAAW,EAAE,oBAHK;AAIlBC,IAAAA,OAAO,EAAE,IAJS;AAKlBC,IAAAA,SAAS,EAAE,QALO;AAMlBC,IAAAA,SAAS,EAAE;AANO,GAApB;AASAE,EAAAA,UAAU,uEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACH,yCAAsBT,UAAtB,CADG;;AAAA;AAETD,YAAAA,KAAK,GAAGC,UAAU,CAACU,aAAnB;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,GAAV;AAIAZ,EAAAA,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC5Ba,IAAAA,EAAE,CAAC,sBAAD,uEAAyB;AAAA;AAAA;AAAA;AAAA;AACzB;AACAC,+BAAYC,qBAAZ,CAAkC,EAAlC;;AAFyB;AAAA,qBAGnBd,KAAK,CAACe,IAAN,EAHmB;;AAAA;AAAA;AAAA,qBAMnBf,KAAK,CAACgB,UAAN,CAAiBd,UAAjB,CANmB;;AAAA;AAQzB;AACAe,cAAAA,MAAM,CAACD,eAAD,CAAN,CAAmBE,oBAAnB,CAAwChB,UAAxC;;AATyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzB,GAAF;AAYAU,IAAAA,EAAE,CAAC,sDAAD,uEAAyD;AAAA;AAAA;AAAA;AAAA;AACzD;AACAC,+BAAYC,qBAAZ,CAAkC,CAACL,WAAD,CAAlC;;AAFyD;AAAA,qBAGnDT,KAAK,CAACe,IAAN,EAHmD;;AAAA;AAAA;AAAA,qBAMnDf,KAAK,CAACgB,UAAN,CAAiBP,WAAjB,CANmD;;AAAA;AAQzD;AACAQ,cAAAA,MAAM,CAACD,eAAD,CAAN,CAAmBG,GAAnB,CAAuBD,oBAAvB,CAA4CT,WAA5C;;AATyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzD,GAAF;AAWD,GAxBO,CAAR;AA0BAV,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/Ba,IAAAA,EAAE,CAAC,wCAAD,uEAA2C;AAAA;AAAA;AAAA;AAAA;AAC3C;AACAC,+BAAYC,qBAAZ,CAAkC,CAACZ,UAAD,CAAlC;;AAF2C;AAAA,qBAGrCF,KAAK,CAACe,IAAN,EAHqC;;AAAA;AAK3CK,iCAAcN,qBAAd,CAAoCL,WAApC;;AACAT,cAAAA,KAAK,CAACgB,UAAN,GAAmBnB,IAAI,CAACwB,EAAL,EAAnB,CAN2C,CAQ3C;;AAR2C;AAAA,qBASrCrB,KAAK,CAACoB,aAAN,CAAoBX,WAApB,CATqC;;AAAA;AAW3C;AACAQ,cAAAA,MAAM,CAACjB,KAAK,CAACgB,UAAP,CAAN,CAAyBE,oBAAzB,CAA8CT,WAA9C;;AAZ2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3C,GAAF;AAcD,GAfO,CAAR;AAgBD,CAnEO,CAAR","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { registerContextItems as registerProjectsStore } from '../ProjectsStore';\n\nimport { getProjects, addProject, updateProject } from '../../../helpers/api';\n\njest.mock('../../../helpers/api');\n\ndescribe('ProjectsStore', () => {\n  let store = null;\n  const appContext = {};\n  const newProject = {\n    id: 'aCreativeName!',\n    rev: 1,\n    description: 'simple description',\n    indexId: '10',\n    createdAt: 'now',\n    updatedAt: 'later',\n  };\n\n  const diffProject = {\n    id: 'anotherCreativeName',\n    rev: 1,\n    description: 'simple description',\n    indexId: '11',\n    createdAt: 'before',\n    updatedAt: 'after',\n  };\n\n  beforeEach(async () => {\n    await registerProjectsStore(appContext);\n    store = appContext.projectsStore;\n  });\n  describe('add project', () => {\n    it('should add a project', async () => {\n      // BUILD\n      getProjects.mockResolvedValueOnce([]);\n      await store.load();\n\n      // OPERATE\n      await store.addProject(newProject);\n\n      // CHECK\n      expect(addProject).toHaveBeenCalledWith(newProject);\n    });\n\n    it('should not add the project because it already exists', async () => {\n      // BUILD\n      getProjects.mockResolvedValueOnce([diffProject]);\n      await store.load();\n\n      // OPERATE\n      await store.addProject(diffProject);\n\n      // CHECK\n      expect(addProject).not.toHaveBeenCalledWith(diffProject);\n    });\n  });\n\n  describe('update project', () => {\n    it('should try to add the updated function', async () => {\n      // BUILD\n      getProjects.mockResolvedValueOnce([newProject]);\n      await store.load();\n\n      updateProject.mockResolvedValueOnce(diffProject);\n      store.addProject = jest.fn();\n\n      // OPERATE\n      await store.updateProject(diffProject);\n\n      // CHECK\n      expect(store.addProject).toHaveBeenCalledWith(diffProject);\n    });\n  });\n});\n"],"file":"ProjectsStore.test.js"}