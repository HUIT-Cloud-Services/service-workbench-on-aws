{"version":3,"sources":["../../../src/models/user-roles/UserRolesStore.js"],"names":["UserRolesStore","BaseStore","named","props","userRoles","types","optional","map","UserRole","actions","self","superCleanup","cleanup","doLoad","runInAction","exiting","newItem","setUserRole","views","list","result","forEach","userRole","push","dropdownOptions","role","key","id","value","text","isInternalUser","userRoleId","_","toLower","getUserType","isInternalGuest","found","get","userType","registerContextItems","appContext","userRolesStore","create"],"mappings":";;;;;;;;AAeA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEA;AACA;AACA;AACA,IAAMA,cAAc,GAAGC,qBAAUC,KAAV,CAAgB,gBAAhB,EACpBC,KADoB,CACd;AACLC,EAAAA,SAAS,EAAEC,qBAAMC,QAAN,CAAeD,qBAAME,GAAN,CAAUC,kBAAV,CAAf,EAAoC,EAApC;AADN,CADc,EAKpBC,OALoB,CAKZ,UAAAC,IAAI,EAAI;AACf;AACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAA1B;AAEA,SAAO;AACCC,IAAAA,MADD,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACY,wBADZ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,8BAC+B,EAD/B;;AAAA;AACPT,gBAAAA,SADO;AAEbM,gBAAAA,IAAI,CAACI,WAAL,CAAiB,YAAM;AACrB,+CAAiBJ,IAAI,CAACN,SAAtB,EAAiCA,SAAjC,EAA4C,UAACW,OAAD,EAAUC,OAAV,EAAsB;AAChED,oBAAAA,OAAO,CAACE,WAAR,CAAoBD,OAApB;AACD,mBAFD;AAGD,iBAJD;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOd,KARI;AAULJ,IAAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,YAAY;AACb;AAZI,GAAP;AAcD,CAvBoB,EAyBpBO,KAzBoB,CAyBd,UAAAR,IAAI;AAAA,SAAK;AACd,QAAIS,IAAJ,GAAW;AACT,UAAMC,MAAM,GAAG,EAAf,CADS,CAET;;AACAV,MAAAA,IAAI,CAACN,SAAL,CAAeiB,OAAf,CAAuB,UAAAC,QAAQ;AAAA,eAAIF,MAAM,CAACG,IAAP,CAAYD,QAAZ,CAAJ;AAAA,OAA/B;AACA,aAAOF,MAAP;AACD,KANa;;AAOd,QAAII,eAAJ,GAAsB;AACpB,UAAMJ,MAAM,GAAG,EAAf,CADoB,CAEpB;;AACAV,MAAAA,IAAI,CAACN,SAAL,CAAeiB,OAAf,CAAuB,UAAAC,QAAQ,EAAI;AACjC,YAAMG,IAAI,GAAG,EAAb;AACAA,QAAAA,IAAI,CAACC,GAAL,GAAWJ,QAAQ,CAACK,EAApB;AACAF,QAAAA,IAAI,CAACG,KAAL,GAAaN,QAAQ,CAACK,EAAtB;AACAF,QAAAA,IAAI,CAACI,IAAL,GAAYP,QAAQ,CAACK,EAArB;AACAP,QAAAA,MAAM,CAACG,IAAP,CAAYE,IAAZ;AACD,OAND;AAOA,aAAOL,MAAP;AACD,KAlBa;;AAoBdU,IAAAA,cApBc,0BAoBCC,UApBD,EAoBa;AACzB,aAAOC,mBAAEC,OAAF,CAAUvB,IAAI,CAACwB,WAAL,CAAiBH,UAAjB,CAAV,MAA4C,UAAnD;AACD,KAtBa;AAwBdI,IAAAA,eAxBc,2BAwBEJ,UAxBF,EAwBc;AAC1B,aAAOC,mBAAEC,OAAF,CAAUF,UAAV,MAA0B,gBAAjC;AACD,KA1Ba;AA4BdG,IAAAA,WA5Bc,uBA4BFH,UA5BE,EA4BU;AACtB,UAAMK,KAAK,GAAG1B,IAAI,CAACN,SAAL,CAAeiC,GAAf,CAAmBN,UAAnB,CAAd;AACA,aAAOK,KAAK,GAAGA,KAAK,CAACE,QAAT,GAAoB,EAAhC;AACD;AA/Ba,GAAL;AAAA,CAzBU,CAAvB;;;;AA2DA,SAASC,oBAAT,CAA8BC,UAA9B,EAA0C;AACxCA,EAAAA,UAAU,CAACC,cAAX,GAA4BzC,cAAc,CAAC0C,MAAf,CAAsB,EAAtB,EAA0BF,UAA1B,CAA5B;AACD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\n\nimport { consolidateToMap } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { getUserRoles } from '../../helpers/api';\nimport { UserRole } from './UserRole';\n\n// ==================================================================\n// UserRolesStore\n// ==================================================================\nconst UserRolesStore = BaseStore.named('UserRolesStore')\n  .props({\n    userRoles: types.optional(types.map(UserRole), {}),\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const userRoles = (await getUserRoles()) || [];\n        self.runInAction(() => {\n          consolidateToMap(self.userRoles, userRoles, (exiting, newItem) => {\n            exiting.setUserRole(newItem);\n          });\n        });\n      },\n\n      cleanup: () => {\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get list() {\n      const result = [];\n      // converting map self.users to result array\n      self.userRoles.forEach(userRole => result.push(userRole));\n      return result;\n    },\n    get dropdownOptions() {\n      const result = [];\n      // converting map self.users to result array\n      self.userRoles.forEach(userRole => {\n        const role = {};\n        role.key = userRole.id;\n        role.value = userRole.id;\n        role.text = userRole.id;\n        result.push(role);\n      });\n      return result;\n    },\n\n    isInternalUser(userRoleId) {\n      return _.toLower(self.getUserType(userRoleId)) === 'internal';\n    },\n\n    isInternalGuest(userRoleId) {\n      return _.toLower(userRoleId) === 'internal-guest';\n    },\n\n    getUserType(userRoleId) {\n      const found = self.userRoles.get(userRoleId);\n      return found ? found.userType : '';\n    },\n  }));\n\nfunction registerContextItems(appContext) {\n  appContext.userRolesStore = UserRolesStore.create({}, appContext);\n}\n\nexport { UserRolesStore, registerContextItems };\n"],"file":"UserRolesStore.js"}