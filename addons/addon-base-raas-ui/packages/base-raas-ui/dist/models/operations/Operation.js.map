{"version":3,"sources":["../../../src/models/operations/Operation.js"],"names":["counter","Operation","status","error","privateSkipped","id","Date","now","payload","clearError","clearMessage","markRunning","doRun","markFinished","setError","_","isString","message","failure","hasError","observable","running","computed","success","skipped","action","markSkipped","setMessage"],"mappings":";;;;;;;AAeA;;AACA;;;;;;;;;;;;;;AAEA,IAAIA,OAAO,GAAG,CAAd;AAEA;AACA;AACA;AACA;;IACMC,S;AACJ,uBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,YAAd;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACAJ,IAAAA,OAAO,IAAI,CAAX;AACA,SAAKK,EAAL,aAAaC,IAAI,CAACC,GAAL,EAAb,cAA2BP,OAA3B;AACD;;;;;0FAESQ,O;;;;;;AAEN,qBAAKJ,cAAL,GAAsB,KAAtB;AACA,qBAAKK,UAAL;AACA,qBAAKC,YAAL;AACA,qBAAKC,WAAL;;uBACM,KAAKC,KAAL,CAAWJ,OAAX,C;;;AACN,qBAAKK,YAAL;;;;;;;AAEA,qBAAKC,QAAL;AACA,qBAAKD,YAAL;;;;;;;;;;;;;;;;;;kCAIU;AACZ,WAAKX,MAAL,GAAc,SAAd;AACD;;;mCAEc;AACb,WAAKA,MAAL,GAAc,UAAd;AACD;;;kCAEa;AACZ,WAAKW,YAAL;AACA,WAAKT,cAAL,GAAsB,IAAtB;AACD;;;iCAEY;AACX,WAAKD,KAAL,GAAa,EAAb;AACD;;;6BAEQA,K,EAAO;AACd,UAAIY,mBAAEC,QAAF,CAAWb,KAAX,CAAJ,EAAuB,KAAKA,KAAL,GAAaA,KAAb,CAAvB,KACK,KAAKA,KAAL,GAAaA,KAAK,CAACc,OAAnB;AACN;;;iCAEwB;AAAA,UAAdA,OAAc,uEAAJ,EAAI;AACvB,WAAKA,OAAL,GAAeA,OAAf;AACD;;;mCAEc;AACb,WAAKA,OAAL,GAAe,EAAf;AACD;;;wBAEa;AACZ,aAAO,KAAKf,MAAL,KAAgB,SAAvB;AACD;;;wBAEc;AACb,aAAO,KAAKC,KAAL,KAAe,EAAtB;AACD;;;wBAEa;AACZ,aAAO,CAAC,KAAKe,OAAN,IAAiB,KAAKhB,MAAL,KAAgB,UAAjC,IAA+C,KAAKE,cAA3D;AACD;;;wBAEa;AACZ,aAAO,KAAKF,MAAL,KAAgB,UAAhB,IAA8B,CAAC,KAAKiB,QAApC,IAAgD,CAAC,KAAKf,cAA7D;AACD;;;wBAEa;AACZ,aAAO,KAAKF,MAAL,KAAgB,UAAhB,IAA8B,KAAKiB,QAA1C;AACD;;;;KAGH;;;AACA,oBAASlB,SAAT,EAAoB;AAClBI,EAAAA,EAAE,EAAEe,gBADc;AAElBlB,EAAAA,MAAM,EAAEkB,gBAFU;AAGlBH,EAAAA,OAAO,EAAEG,gBAHS;AAIlBjB,EAAAA,KAAK,EAAEiB,gBAJW;AAKlBC,EAAAA,OAAO,EAAEC,cALS;AAMlBH,EAAAA,QAAQ,EAAEG,cANQ;AAOlBC,EAAAA,OAAO,EAAED,cAPS;AAQlBJ,EAAAA,OAAO,EAAEI,cARS;AASlBE,EAAAA,OAAO,EAAEF,cATS;AAUlBX,EAAAA,WAAW,EAAEc,YAVK;AAWlBZ,EAAAA,YAAY,EAAEY,YAXI;AAYlBC,EAAAA,WAAW,EAAED,YAZK;AAalBhB,EAAAA,UAAU,EAAEgB,YAbM;AAclBX,EAAAA,QAAQ,EAAEW,YAdQ;AAelBf,EAAAA,YAAY,EAAEe,YAfI;AAgBlBE,EAAAA,UAAU,EAAEF;AAhBM,CAApB;eAmBexB,S","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { decorate, observable, action, computed } from 'mobx';\n\nlet counter = 0;\n\n/**\n * A generic class that represents an operation. This class is not meant to be instantiated directly, instead you want\n * to extend this class and provide a method named 'doRun'\n */\nclass Operation {\n  constructor() {\n    this.status = 'notStarted';\n    this.error = '';\n    this.privateSkipped = false;\n    counter += 1;\n    this.id = `${Date.now()}-${counter}`;\n  }\n\n  async run(payload) {\n    try {\n      this.privateSkipped = false;\n      this.clearError();\n      this.clearMessage();\n      this.markRunning();\n      await this.doRun(payload);\n      this.markFinished();\n    } catch (error) {\n      this.setError(error);\n      this.markFinished();\n    }\n  }\n\n  markRunning() {\n    this.status = 'running';\n  }\n\n  markFinished() {\n    this.status = 'finished';\n  }\n\n  markSkipped() {\n    this.markFinished();\n    this.privateSkipped = true;\n  }\n\n  clearError() {\n    this.error = '';\n  }\n\n  setError(error) {\n    if (_.isString(error)) this.error = error;\n    else this.error = error.message;\n  }\n\n  setMessage(message = '') {\n    this.message = message;\n  }\n\n  clearMessage() {\n    this.message = '';\n  }\n\n  get running() {\n    return this.status === 'running';\n  }\n\n  get hasError() {\n    return this.error !== '';\n  }\n\n  get skipped() {\n    return !this.failure && this.status === 'finished' && this.privateSkipped;\n  }\n\n  get success() {\n    return this.status === 'finished' && !this.hasError && !this.privateSkipped;\n  }\n\n  get failure() {\n    return this.status === 'finished' && this.hasError;\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(Operation, {\n  id: observable,\n  status: observable,\n  message: observable,\n  error: observable,\n  running: computed,\n  hasError: computed,\n  success: computed,\n  failure: computed,\n  skipped: computed,\n  markRunning: action,\n  markFinished: action,\n  markSkipped: action,\n  clearError: action,\n  setError: action,\n  clearMessage: action,\n  setMessage: action,\n});\n\nexport default Operation;\n"],"file":"Operation.js"}