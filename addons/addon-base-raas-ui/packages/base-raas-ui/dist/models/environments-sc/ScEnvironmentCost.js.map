{"version":3,"sources":["../../../src/models/environments-sc/ScEnvironmentCost.js"],"names":["ScEnvironmentCost","types","model","id","identifier","entries","frozen","error","actions","self","setScEnvironmentCost","rawData","views","previousDayCost","entry","_","last","isEmpty","getAmount","sum","map","cost","value","get","list","result","date","startDate","amount","unit"],"mappings":";;;;;;;AACA;;AACA;;;;AAFA;AAIA;AACA;AACA;AACA,IAAMA,iBAAiB,GAAGC,qBACvBC,KADuB,CACjB,mBADiB,EACI;AAC1BC,EAAAA,EAAE,EAAEF,qBAAMG,UADgB;AACJ;AACtBC,EAAAA,OAAO,EAAEJ,qBAAMK,MAAN,CAAa,EAAb,CAFiB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CADJ,EAMvBC,OANuB,CAMf,UAAAC,IAAI;AAAA,SAAK;AAChBC,IAAAA,oBADgB,gCACKC,OADL,EACc;AAC5B,wCAAcF,IAAd,EAAoBE,OAApB;AACD;AAHe,GAAL;AAAA,CANW,EAYxB;AAZwB,CAavBC,KAbuB,CAajB,UAAAH,IAAI;AAAA,SAAK;AACd,QAAII,eAAJ,GAAsB;AACpB;AACA;AACA,UAAMC,KAAK,GAAGC,mBAAEC,IAAF,CAAOP,IAAI,CAACJ,OAAZ,CAAd;;AACA,UAAIU,mBAAEE,OAAF,CAAUH,KAAV,CAAJ,EAAsB;AACpB,eAAO,CAAP;AACD,OANmB,CAQpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,aAAOL,IAAI,CAACS,SAAL,CAAeJ,KAAf,CAAP;AACD,KAlBa;;AAoBdI,IAAAA,SApBc,qBAoBJJ,KApBI,EAoBG;AACf,aAAOC,mBAAEI,GAAF,CAAMJ,mBAAEK,GAAF,CAAMN,KAAK,CAACO,IAAZ,EAAkB,UAAAC,KAAK;AAAA,eAAIP,mBAAEQ,GAAF,CAAMD,KAAN,EAAa,QAAb,EAAuB,CAAvB,CAAJ;AAAA,OAAvB,CAAN,CAAP;AACD,KAtBa;;AAwBd;AACA;AACA,QAAIE,IAAJ,GAAW;AACT,UAAMC,MAAM,GAAGV,mBAAEK,GAAF,CAAMX,IAAI,CAACJ,OAAX,EAAoB,UAAAS,KAAK;AAAA,eAAK;AAC3CY,UAAAA,IAAI,EAAEZ,KAAK,CAACa,SAD+B;AAE3CC,UAAAA,MAAM,EAAEnB,IAAI,CAACS,SAAL,CAAeJ,KAAf,CAFmC;AAG3Ce,UAAAA,IAAI,EAAEf,KAAK,CAACe;AAH+B,SAAL;AAAA,OAAzB,CAAf;;AAMA,aAAOJ,MAAP;AACD;;AAlCa,GAAL;AAAA,CAba,CAA1B","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport _ from 'lodash';\nimport { types, applySnapshot } from 'mobx-state-tree';\n\n// ==================================================================\n// ScEnvironmentCost\n// ==================================================================\nconst ScEnvironmentCost = types\n  .model('ScEnvironmentCost', {\n    id: types.identifier, // this will be at the client side which is the same as the env id + 'cost' as suffix\n    entries: types.frozen([]),\n    error: '',\n  })\n  .actions(self => ({\n    setScEnvironmentCost(rawData) {\n      applySnapshot(self, rawData);\n    },\n  }))\n\n  // eslint-disable-next-line no-unused-vars\n  .views(self => ({\n    get previousDayCost() {\n      // We are making this assumption:\n      // - the last element in the entries is assumed to be the previousDay entry\n      const entry = _.last(self.entries);\n      if (_.isEmpty(entry)) {\n        return 0;\n      }\n\n      // entry has this shape {\n      //  startDate: '20xx-xx-xx':\n      //  cost: {\n      //    <service name1>: { amount, unit },\n      //    <service name2>: { amount, unit },\n      //    ...\n      //  }\n      // }\n      return self.getAmount(entry);\n    },\n\n    getAmount(entry) {\n      return _.sum(_.map(entry.cost, value => _.get(value, 'amount', 0)));\n    },\n\n    // Returns an array of objects, with two props.\n    // Example: [ { date: '2020-07-20', amount: 100.0, unit: 'USD' }, ... ]\n    get list() {\n      const result = _.map(self.entries, entry => ({\n        date: entry.startDate,\n        amount: self.getAmount(entry),\n        unit: entry.unit,\n      }));\n\n      return result;\n    },\n  }));\n\nexport { ScEnvironmentCost };\n"],"file":"ScEnvironmentCost.js"}