{"version":3,"sources":["../../../src/models/environments-sc/ScEnvConnectionStore.js"],"names":["ScEnvConnectionStore","BaseStore","named","props","envId","tickPeriod","actions","self","superCleanup","cleanup","doLoad","env","scEnvironment","raw","setConnections","createConnectionUrl","connectionId","urlObj","_","get","sendSshKey","keyPairId","getWindowsRdpInfo","views","parent","w","getScEnvironment","empty","isEmpty","connections"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;AAOA;AACA;AACA;AACA,IAAMA,oBAAoB,GAAGC,qBAAUC,KAAV,CAAgB,sBAAhB,EAC1BC,KAD0B,CACpB;AACLC,EAAAA,KAAK,EAAE,EADF;AAELC,EAAAA,UAAU,EAAE,KAAK,IAFZ,CAEkB;;AAFlB,CADoB,EAM1BC,OAN0B,CAMlB,UAAAC,IAAI,EAAI;AACf;AACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAA1B;AAEA,SAAO;AACCC,IAAAA,MADD,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,gBAAAA,GADO,GACDJ,IAAI,CAACK,aADJ;AAAA;AAAA,uBAEK,sCAA4BL,IAAI,CAACH,KAAjC,CAFL;;AAAA;AAEPS,gBAAAA,GAFO;AAGbF,gBAAAA,GAAG,CAACG,cAAJ,CAAmBD,GAAnB;;AAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAId,KALI;AAOCE,IAAAA,mBAPD,+BAOqBC,YAPrB,EAOmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACjB,2CAAiCT,IAAI,CAACH,KAAtC,EAA6CY,YAA7C,CADiB;;AAAA;AAChCC,gBAAAA,MADgC;AAAA,kDAE/BC,mBAAEC,GAAF,CAAMF,MAAN,EAAc,KAAd,CAF+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGvC,KAVI;AAYCG,IAAAA,UAZD,sBAYYJ,YAZZ,EAY0BK,SAZ1B,EAYqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACjC,qBAAWd,IAAI,CAACH,KAAhB,EAAuBY,YAAvB,EAAqCK,SAArC,CADiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEzC,KAdI;AAgBCC,IAAAA,iBAhBD,6BAgBmBN,YAhBnB,EAgBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAC7B,2BAAiBT,IAAI,CAACH,KAAtB,EAA6BY,YAA7B,CAD6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAErC,KAlBI;AAoBLP,IAAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,YAAY;AACb;AAtBI,GAAP;AAwBD,CAlC0B,EAoC1Be,KApC0B,CAoCpB,UAAAhB,IAAI;AAAA,SAAK;AACd,QAAIK,aAAJ,GAAoB;AAClB,UAAMY,MAAM,GAAG,8BAAUjB,IAAV,EAAgB,CAAhB,CAAf;AACA,UAAMkB,CAAC,GAAGD,MAAM,CAACE,gBAAP,CAAwBnB,IAAI,CAACH,KAA7B,CAAV;AACA,aAAOqB,CAAP;AACD,KALa;;AAMd,QAAIE,KAAJ,GAAY;AACV,aAAOT,mBAAEU,OAAF,CAAUrB,IAAI,CAACK,aAAL,CAAmBiB,WAA7B,CAAP;AACD;;AARa,GAAL;AAAA,CApCgB,CAA7B,C,CA+CA;AACA;AACA","sourcesContent":["import _ from 'lodash';\nimport { getParent } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\n\nimport {\n  getScEnvironmentConnections,\n  sendSshKey,\n  getWindowsRpInfo,\n  createScEnvironmentConnectionUrl,\n} from '../../helpers/api';\n\n// ==================================================================\n// ScEnvConnectionStore\n// ==================================================================\nconst ScEnvConnectionStore = BaseStore.named('ScEnvConnectionStore')\n  .props({\n    envId: '',\n    tickPeriod: 30 * 1000, // 30 seconds\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const env = self.scEnvironment;\n        const raw = await getScEnvironmentConnections(self.envId);\n        env.setConnections(raw);\n      },\n\n      async createConnectionUrl(connectionId) {\n        const urlObj = await createScEnvironmentConnectionUrl(self.envId, connectionId);\n        return _.get(urlObj, 'url');\n      },\n\n      async sendSshKey(connectionId, keyPairId) {\n        return sendSshKey(self.envId, connectionId, keyPairId);\n      },\n\n      async getWindowsRdpInfo(connectionId) {\n        return getWindowsRpInfo(self.envId, connectionId);\n      },\n\n      cleanup: () => {\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get scEnvironment() {\n      const parent = getParent(self, 2);\n      const w = parent.getScEnvironment(self.envId);\n      return w;\n    },\n    get empty() {\n      return _.isEmpty(self.scEnvironment.connections);\n    },\n  }));\n\n// Note: Do NOT register this in the global context, if you want to gain access to an instance\n//       use scEnvironmentsStore.getScEnvConnectionStore()\n// eslint-disable-next-line import/prefer-default-export\nexport { ScEnvConnectionStore };\n"],"file":"ScEnvConnectionStore.js"}