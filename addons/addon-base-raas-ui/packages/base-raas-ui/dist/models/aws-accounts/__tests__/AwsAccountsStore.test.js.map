{"version":3,"sources":["../../../../src/models/aws-accounts/__tests__/AwsAccountsStore.test.js"],"names":["jest","mock","describe","store","appContext","newAwsAccount","id","rev","name","description","accountId","externalId","roleArn","vpcId","subnetId","encryptionKeyArn","createdAt","updatedAt","beforeEach","awsAccountsStore","it","getAwsAccounts","mockResolvedValue","addAwsAccount","load","expect","toMatchObject","list","length","toBe"],"mappings":";;AAeA;;AACA;;;;;;AAEAA,IAAI,CAACC,IAAL,CAAU,sBAAV;AAEAC,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjC,MAAIC,KAAK,GAAG,IAAZ;AACA,MAAMC,UAAU,GAAG,EAAnB;AACA,MAAMC,aAAa,GAAG;AACpBC,IAAAA,EAAE,EAAE,UADgB;AAEpBC,IAAAA,GAAG,EAAE,IAFe;AAGpBC,IAAAA,IAAI,EAAE,qBAHc;AAIpBC,IAAAA,WAAW,EAAE,sCAJO;AAKpBC,IAAAA,SAAS,EAAE,sCALS;AAMpBC,IAAAA,UAAU,EAAE,gCANQ;AAOpBC,IAAAA,OAAO,EAAE,qCAPW;AAQpBC,IAAAA,KAAK,EAAE,wCARa;AASpBC,IAAAA,QAAQ,EAAE,2CATU;AAUpBC,IAAAA,gBAAgB,EAAE,iCAVE;AAWpBC,IAAAA,SAAS,EAAE,+BAXS;AAYpBC,IAAAA,SAAS,EAAE;AAZS,GAAtB;AAeAC,EAAAA,UAAU,uEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACH,4CAAyBd,UAAzB,CADG;;AAAA;AAETD,YAAAA,KAAK,GAAGC,UAAU,CAACe,gBAAnB;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,GAAV;AAKAjB,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9BkB,IAAAA,EAAE,CAAC,2CAAD,uEAA8C;AAAA;AAAA;AAAA;AAAA;AAC9C;AACAC,kCAAeC,iBAAf,CAAiC,EAAjC;;AACAC,iCAAcD,iBAAd,CAAgCjB,aAAhC;;AAH8C;AAAA,qBAIxCF,KAAK,CAACqB,IAAN,EAJwC;;AAAA;AAAA;AAAA,qBAOxCrB,KAAK,CAACoB,aAAN,CAAoBlB,aAApB,CAPwC;;AAAA;AAS9C;AACAoB,cAAAA,MAAM,CAACpB,aAAD,CAAN,CAAsBqB,aAAtB,CAAoCvB,KAAK,CAACwB,IAAN,CAAW,CAAX,CAApC,EAV8C,CAW9C;AACA;;AAZ8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9C,GAAF;AAeAP,IAAAA,EAAE,CAAC,+BAAD,uEAAkC;AAAA;AAAA;AAAA;AAAA;AAClC;AACAC,kCAAeC,iBAAf,CAAiC,CAACjB,aAAD,CAAjC;;AACAkB,iCAAcD,iBAAd,CAAgCjB,aAAhC;;AAHkC;AAAA,qBAI5BF,KAAK,CAACqB,IAAN,EAJ4B;;AAAA;AAAA;AAAA,qBAO5BrB,KAAK,CAACoB,aAAN,CAAoBlB,aAApB,CAP4B;;AAAA;AASlC;AACAoB,cAAAA,MAAM,CAACtB,KAAK,CAACwB,IAAN,CAAWC,MAAZ,CAAN,CAA0BC,IAA1B,CAA+B,CAA/B;;AAVkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC,GAAF;AAYD,GA5BO,CAAR;AA6BD,CApDO,CAAR","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { getAwsAccounts, addAwsAccount } from '../../../helpers/api';\nimport { registerContextItems as registerAwsAccountsStore } from '../AwsAccountsStore';\n\njest.mock('../../../helpers/api');\n\ndescribe('AwsAccountsStore', () => {\n  let store = null;\n  const appContext = {};\n  const newAwsAccount = {\n    id: 'mouserat',\n    rev: 5000,\n    name: 'candles-in-the-wind',\n    description: 'up in horsey heaven, heres the thing',\n    accountId: 'you_trade_your_legs_for_angels_wings',\n    externalId: 'and-once-weve-all-said-goodbye',\n    roleArn: 'YouTakeARunningLeapAndYouLearnToFly',\n    vpcId: 'and_although_we_all_miss_you_every_day',\n    subnetId: 'we-know-youre-up-there-eating-heavens-hay',\n    encryptionKeyArn: 'AndHeresThePartThatHurtsTheMost',\n    createdAt: 'humans cannot ride a ghost :(',\n    updatedAt: 'Bye bye, Lil Sebastian',\n  };\n\n  beforeEach(async () => {\n    await registerAwsAccountsStore(appContext);\n    store = appContext.awsAccountsStore;\n  });\n\n  describe('addAwsAccount', () => {\n    it('should add a new Aws Account successfully', async () => {\n      // BUILD\n      getAwsAccounts.mockResolvedValue([]);\n      addAwsAccount.mockResolvedValue(newAwsAccount);\n      await store.load();\n\n      // OPERATE\n      await store.addAwsAccount(newAwsAccount);\n\n      // CHECK\n      expect(newAwsAccount).toMatchObject(store.list[0]);\n      // some properties are dropped when added, so this makes sure store.list[0]\n      //      is a subset of newAwsAccount\n    });\n\n    it('should not add an Aws Account', async () => {\n      // BUILD\n      getAwsAccounts.mockResolvedValue([newAwsAccount]);\n      addAwsAccount.mockResolvedValue(newAwsAccount);\n      await store.load();\n\n      // OPERATE\n      await store.addAwsAccount(newAwsAccount);\n\n      // CHECK\n      expect(store.list.length).toBe(1);\n    });\n  });\n});\n"],"file":"AwsAccountsStore.test.js"}