{"version":3,"sources":["../../../../src/models/aws-accounts/__tests__/BudgetStore.test.js"],"names":["jest","mock","describe","store","BudgetStore","create","awsAccountUUID","awsAccount","awsAccountsStore","getAwsAccount","mobxStateTreeModule","getParent","fn","mockReturnValue","it","newBudget","budgetLimit","startDate","endDate","thresholds","notificationEmail","budget","createOrUpdateBudget","expect","createAwsAccountBudget","toHaveBeenCalledWith","id","budgetConfiguration","updateAwsAccountBudget","rejects","toThrow"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport * as mobxStateTreeModule from 'mobx-state-tree';\nimport { createAwsAccountBudget, updateAwsAccountBudget } from '../../../helpers/api';\nimport { BudgetStore } from '../BudgetStore';\n\njest.mock('../../../helpers/api');\n\ndescribe('BudgetStore', () => {\n  const store = BudgetStore.create({ awsAccountUUID: 'some-uuid-value' });\n\n  describe('createOrUpdateBudget', () => {\n    let awsAccount = {};\n    const awsAccountsStore = {\n      getAwsAccount: () => awsAccount,\n    };\n    mobxStateTreeModule.getParent = jest.fn().mockReturnValue(awsAccountsStore);\n\n    it('should add a new budget successfully', async () => {\n      // BUILD\n      const newBudget = {\n        budgetLimit: '1000.0',\n        startDate: 1598400000,\n        endDate: 1608854400,\n        thresholds: [50, 90, 100],\n        notificationEmail: 'test@example.com',\n      };\n      awsAccount = {\n        budget: {\n          budgetLimit: '',\n        },\n      };\n\n      // OPERATE\n      await store.createOrUpdateBudget(newBudget);\n\n      // CHECK\n      expect(createAwsAccountBudget).toHaveBeenCalledWith({ id: 'some-uuid-value', budgetConfiguration: newBudget });\n    });\n\n    it('should update an existing budget successfully', async () => {\n      // BUILD\n      const newBudget = {\n        budgetLimit: '1000.0',\n        startDate: 1598400000,\n        endDate: 1608854400,\n        thresholds: [],\n        notificationEmail: '',\n      };\n      awsAccount = {\n        budget: {\n          budgetLimit: '500.0',\n        },\n      };\n\n      // OPERATE\n      await store.createOrUpdateBudget(newBudget);\n\n      // CHECK\n      expect(updateAwsAccountBudget).toHaveBeenCalledWith({\n        id: 'some-uuid-value',\n        budgetConfiguration: {\n          budgetLimit: '1000.0',\n          startDate: 1598400000,\n          endDate: 1608854400,\n        },\n      });\n    });\n\n    it('should throw validation error when input is invalid', async () => {\n      // BUILD\n      const newBudget = {\n        budgetLimit: '1000.0',\n        startDate: 1598400000,\n        endDate: 1608854400,\n        thresholds: [50],\n        notificationEmail: '',\n      };\n\n      // OPERATE and CHECK\n      await expect(store.createOrUpdateBudget(newBudget)).rejects.toThrow(\n        'Thresholds depends on notification. Please input notification or remove thresholds',\n      );\n    });\n  });\n});\n"],"file":"BudgetStore.test.js"}