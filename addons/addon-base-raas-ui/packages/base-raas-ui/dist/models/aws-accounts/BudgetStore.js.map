{"version":3,"sources":["../../../src/models/aws-accounts/BudgetStore.js"],"names":["BudgetStore","BaseStore","named","props","awsAccountUUID","actions","self","superCleanup","cleanup","doLoad","parent","rawBudget","addBudget","createOrUpdateBudget","existingBudget","getAwsAccount","budget","_","isEmpty","thresholds","notificationEmail","Error","omitBy","val","isNumber","requestData","id","budgetConfiguration","budgetLimit","views","account","thresholdsOptions","value","text"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { getParent } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport _ from 'lodash';\n\nimport { createAwsAccountBudget, getAwsAccountBudget, updateAwsAccountBudget } from '../../helpers/api';\n\n// ==================================================================\n// BudgetStore\n// ==================================================================\nconst BudgetStore = BaseStore.named('BudgetStore')\n  .props({\n    awsAccountUUID: '',\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const parent = getParent(self, 2);\n        const rawBudget = await getAwsAccountBudget(self.awsAccountUUID);\n        parent.addBudget(self.awsAccountUUID, rawBudget);\n      },\n\n      async createOrUpdateBudget(rawBudget) {\n        const parent = getParent(self, 2);\n        const existingBudget = parent.getAwsAccount(self.awsAccountUUID).budget;\n        // Validate dependency between email and thresholds\n        if (_.isEmpty(rawBudget.thresholds) && !_.isEmpty(rawBudget.notificationEmail)) {\n          throw new Error('Notification depends on thresholds. Please input thresholds or remove notification.');\n        }\n        if (!_.isEmpty(rawBudget.thresholds) && _.isEmpty(rawBudget.notificationEmail)) {\n          throw new Error('Thresholds depends on notification. Please input notification or remove thresholds');\n        }\n        // Remove empty attributes\n        rawBudget = _.omitBy(rawBudget, val => _.isEmpty(val) && !_.isNumber(val));\n        const requestData = {\n          id: self.awsAccountUUID,\n          budgetConfiguration: rawBudget,\n        };\n        if (_.isEmpty(existingBudget.budgetLimit)) {\n          await createAwsAccountBudget(requestData);\n        } else {\n          await updateAwsAccountBudget(requestData);\n        }\n      },\n\n      cleanup: () => {\n        const parent = getParent(self, 2);\n        superCleanup();\n        parent.addBudget(self.awsAccountUUID, {});\n      },\n    };\n  })\n\n  .views(self => ({\n    get budget() {\n      const parent = getParent(self, 2);\n      const account = parent.getAwsAccount(self.awsAccountUUID);\n      return account.budget;\n    },\n\n    get thresholdsOptions() {\n      return [\n        { id: '50', value: 50, text: '50%' },\n        { id: '70', value: 70, text: '70%' },\n        { id: '80', value: 80, text: '80%' },\n        { id: '90', value: 90, text: '90%' },\n        { id: '100', value: 100, text: '100%' },\n      ];\n    },\n  }));\n\n// Note: Do NOT register this in the global context, if you want to gain access to an instance\n//       use awsAccountsStore.getBudgetStore()\n// eslint-disable-next-line import/prefer-default-export\nexport { BudgetStore };\n"],"file":"BudgetStore.js"}