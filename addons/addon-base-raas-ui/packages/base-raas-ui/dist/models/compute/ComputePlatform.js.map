{"version":3,"sources":["../../../src/models/compute/ComputePlatform.js"],"names":["ComputePlatform","types","model","id","identifier","type","title","desc","displayOrder","maybe","number","configurations","map","ComputeConfiguration","actions","self","setComputePlatform","rawComputePlatform","setConfigurations","raw","exiting","newItem","setComputeConfiguration","views","descHtml","showdown","convert","configurationsList","_","sortBy","getConfiguration","configurationId","get"],"mappings":";;;;;;;AAgBA;;AACA;;AACA;;AACA;;AAEA;;;;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAQA;AACA,IAAMA,eAAe,GAAGC,qBACrBC,KADqB,CACf,iBADe,EACI;AACxBC,EAAAA,EAAE,EAAEF,qBAAMG,UADc;AAExBC,EAAAA,IAAI,EAAE,EAFkB;AAGxBC,EAAAA,KAAK,EAAE,EAHiB;AAIxBC,EAAAA,IAAI,EAAE,EAJkB;AAKxBC,EAAAA,YAAY,EAAEP,qBAAMQ,KAAN,CAAYR,qBAAMS,MAAlB,CALU;AAMxBC,EAAAA,cAAc,EAAEV,qBAAMW,GAAN,CAAUC,0CAAV;AANQ,CADJ,EASrBC,OATqB,CASb,UAAAC,IAAI;AAAA,SAAK;AAChBC,IAAAA,kBADgB,8BACGC,kBADH,EACuB;AACrC;AACA;AAEA;AACA,UAAMN,cAAc,GAAGI,IAAI,CAACJ,cAAL,IAAuB,EAA9C;AACA,wCAAcI,IAAd,EAAoBE,kBAApB;AACAF,MAAAA,IAAI,CAACJ,cAAL,GAAsBA,cAAtB;AACD,KATe;AAWhBO,IAAAA,iBAXgB,6BAWEC,GAXF,EAWO;AACrB,mCAAiBJ,IAAI,CAACJ,cAAtB,EAAsCQ,GAAtC,EAA2C,UAACC,OAAD,EAAUC,OAAV,EAAsB;AAC/DD,QAAAA,OAAO,CAACE,uBAAR,CAAgCD,OAAhC;AACD,OAFD;AAGD;AAfe,GAAL;AAAA,CATS,EA0BrBE,KA1BqB,CA0Bf,UAAAR,IAAI;AAAA,SAAK;AACd,QAAIS,QAAJ,GAAe;AACb,UAAMC,QAAQ,GAAG,2BAAOV,IAAP,EAAaU,QAA9B;AACA,aAAOA,QAAQ,CAACC,OAAT,CAAiBX,IAAI,CAACR,IAAtB,CAAP;AACD,KAJa;;AAMd,QAAIoB,kBAAJ,GAAyB;AACvB,aAAOC,mBAAEC,MAAF,CAAS,kBAAOd,IAAI,CAACJ,cAAZ,CAAT,EAAsC,cAAtC,CAAP;AACD,KARa;;AAUdmB,IAAAA,gBAVc,4BAUGC,eAVH,EAUoB;AAChC,aAAOhB,IAAI,CAACJ,cAAL,CAAoBqB,GAApB,CAAwBD,eAAxB,CAAP;AACD;AAZa,GAAL;AAAA,CA1BW,CAAxB","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\n/* eslint-disable import/prefer-default-export */\nimport _ from 'lodash';\nimport { values } from 'mobx';\nimport { types, getEnv, applySnapshot } from 'mobx-state-tree';\nimport { consolidateToMap } from '@aws-ee/base-ui/dist/helpers/utils';\n\nimport { ComputeConfiguration } from './ComputeConfiguration';\n\n// This represents a compute platform information such as an emr or an ec2\nconst ComputePlatform = types\n  .model('ComputePlatform', {\n    id: types.identifier,\n    type: '',\n    title: '',\n    desc: '',\n    displayOrder: types.maybe(types.number),\n    configurations: types.map(ComputeConfiguration),\n  })\n  .actions(self => ({\n    setComputePlatform(rawComputePlatform) {\n      // Note: if you have partial data vs full data, you need to replace the applySnapshot() with\n      // the appropriate logic\n\n      // Preserve configurations\n      const configurations = self.configurations || {};\n      applySnapshot(self, rawComputePlatform);\n      self.configurations = configurations;\n    },\n\n    setConfigurations(raw) {\n      consolidateToMap(self.configurations, raw, (exiting, newItem) => {\n        exiting.setComputeConfiguration(newItem);\n      });\n    },\n  }))\n  .views(self => ({\n    get descHtml() {\n      const showdown = getEnv(self).showdown;\n      return showdown.convert(self.desc);\n    },\n\n    get configurationsList() {\n      return _.sortBy(values(self.configurations), 'displayOrder');\n    },\n\n    getConfiguration(configurationId) {\n      return self.configurations.get(configurationId);\n    },\n  }));\n\nexport { ComputePlatform };\n"],"file":"ComputePlatform.js"}