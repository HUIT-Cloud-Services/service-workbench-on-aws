{"version":3,"sources":["../../../src/models/resources/Session.js"],"names":["File","types","model","name","size","optional","number","Run","id","sample","alignment","sex","center","release","files","array","Consent","runs","Token","expireAt","sessionId","username","maybeNull","string","Study","consents","Session","identifier","title","studies","tokens","createNewSession","raw","Promise","resolve","then","result","create"],"mappings":";;;;;;;;AAeA;;AAfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA,IAAMA,IAAI,GAAGC,qBAAMC,KAAN,CAAY,MAAZ,EAAoB;AAC/BC,EAAAA,IAAI,EAAE,EADyB;AACrB;AACVC,EAAAA,IAAI,EAAEH,qBAAMI,QAAN,CAAeJ,qBAAMK,MAArB,EAA6B,CAA7B;AAFyB,CAApB,CAAb;;AAKA,IAAMC,GAAG,GAAGN,qBAAMC,KAAN,CAAY,KAAZ,EAAmB;AAC7BM,EAAAA,EAAE,EAAE,EADyB;AAE7BC,EAAAA,MAAM,EAAE,EAFqB;AAG7BC,EAAAA,SAAS,EAAE,EAHkB;AAI7BC,EAAAA,GAAG,EAAE,EAJwB;AAK7BC,EAAAA,MAAM,EAAE,EALqB;AAM7BC,EAAAA,OAAO,EAAE,EANoB;AAO7BC,EAAAA,KAAK,EAAEb,qBAAMI,QAAN,CAAeJ,qBAAMc,KAAN,CAAYf,IAAZ,CAAf,EAAkC,EAAlC;AAPsB,CAAnB,CAAZ;;AAUA,IAAMgB,OAAO,GAAGf,qBAAMC,KAAN,CAAY,SAAZ,EAAuB;AACrCM,EAAAA,EAAE,EAAE,EADiC;AAC7B;AACRL,EAAAA,IAAI,EAAE,EAF+B;AAE3B;AACVc,EAAAA,IAAI,EAAEhB,qBAAMI,QAAN,CAAeJ,qBAAMc,KAAN,CAAYR,GAAZ,CAAf,EAAiC,EAAjC;AAH+B,CAAvB,CAAhB;;AAMA,IAAMW,KAAK,GAAGjB,qBAAMC,KAAN,CAAY,OAAZ,EAAqB;AACjCM,EAAAA,EAAE,EAAE,EAD6B;AAEjCW,EAAAA,QAAQ,EAAE,EAFuB;AAGjCC,EAAAA,SAAS,EAAE,EAHsB;AAIjCC,EAAAA,QAAQ,EAAEpB,qBAAMqB,SAAN,CAAgBrB,qBAAMI,QAAN,CAAeJ,qBAAMsB,MAArB,EAA6B,EAA7B,CAAhB;AAJuB,CAArB,CAAd;;AAOA,IAAMC,KAAK,GAAGvB,qBAAMC,KAAN,CAAY,OAAZ,EAAqB;AACjCM,EAAAA,EAAE,EAAE,EAD6B;AAEjCL,EAAAA,IAAI,EAAE,EAF2B;AAGjCsB,EAAAA,QAAQ,EAAExB,qBAAMI,QAAN,CAAeJ,qBAAMc,KAAN,CAAYC,OAAZ,CAAf,EAAqC,EAArC;AAHuB,CAArB,CAAd;;AAMA,IAAMU,OAAO,GAAGzB,qBAAMC,KAAN,CAAY,SAAZ,EAAuB;AACrCM,EAAAA,EAAE,EAAEP,qBAAM0B,UAD2B;AAErCC,EAAAA,KAAK,EAAE,EAF8B;AAGrCC,EAAAA,OAAO,EAAE5B,qBAAMI,QAAN,CAAeJ,qBAAMc,KAAN,CAAYS,KAAZ,CAAf,EAAmC,EAAnC,CAH4B;AAIrCM,EAAAA,MAAM,EAAE7B,qBAAMI,QAAN,CAAeJ,qBAAMc,KAAN,CAAYG,KAAZ,CAAf,EAAmC,EAAnC;AAJ6B,CAAvB,CAAhB,C,CAOA;;;;;AACA,SAASa,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7B,SACEC,OAAO,CAACC,OAAR,GACE;AADF,GAEGC,IAFH,CAEQ,UAAAC,MAAM;AAAA,WAAIV,OAAO,CAACW,MAAR,CAAeD,MAAf,CAAJ;AAAA,GAFd,CADF;AAKD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { types } from 'mobx-state-tree';\n// import { createSession } from '../../helpers/api';\n\nconst File = types.model('File', {\n  name: '', // the extension of the file determines its type such as cram or crai\n  size: types.optional(types.number, 0),\n});\n\nconst Run = types.model('Run', {\n  id: '',\n  sample: '',\n  alignment: '',\n  sex: '',\n  center: '',\n  release: '',\n  files: types.optional(types.array(File), []),\n});\n\nconst Consent = types.model('Consent', {\n  id: '', // such as 'phs00001.v1.p1.c1\n  name: '', // 'code --- qualifier'\n  runs: types.optional(types.array(Run), []),\n});\n\nconst Token = types.model('Token', {\n  id: '',\n  expireAt: '',\n  sessionId: '',\n  username: types.maybeNull(types.optional(types.string, '')),\n});\n\nconst Study = types.model('Study', {\n  id: '',\n  name: '',\n  consents: types.optional(types.array(Consent), []),\n});\n\nconst Session = types.model('Session', {\n  id: types.identifier,\n  title: '',\n  studies: types.optional(types.array(Study), []),\n  tokens: types.optional(types.array(Token), []),\n});\n\n// eslint-disable-next-line no-unused-vars\nfunction createNewSession(raw) {\n  return (\n    Promise.resolve()\n      // .then(() => createSession(raw))\n      .then(result => Session.create(result))\n  );\n}\n\nexport { Session, createNewSession };\n"],"file":"Session.js"}