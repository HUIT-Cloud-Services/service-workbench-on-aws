{"version":3,"sources":["../../../src/models/studies/Study.js"],"names":["Study","types","model","id","identifier","rev","maybe","number","name","category","projectId","access","optional","array","string","resources","arn","description","maybeNull","uploadLocationEnabled","createdAt","createdBy","updatedAt","updatedBy","filesStore","StudyFilesStore","permissionsStore","StudyPermissionsStore","actions","self","setStudy","rawStudy","getFilesStore","create","studyId","getPermissionsStore","views","isOpenDataStudy","categories","openData","isOrganizationStudy","organization","canUpload","includes"],"mappings":";;;;;;;AAeA;;AAEA;;AACA;;AACA;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA,IAAMA,KAAK,GAAGC,qBACXC,KADW,CACL,OADK,EACI;AACdC,EAAAA,EAAE,EAAEF,qBAAMG,UADI;AAEdC,EAAAA,GAAG,EAAEJ,qBAAMK,KAAN,CAAYL,qBAAMM,MAAlB,CAFS;AAGdC,EAAAA,IAAI,EAAE,EAHQ;AAIdC,EAAAA,QAAQ,EAAE,EAJI;AAKdC,EAAAA,SAAS,EAAE,EALG;AAMdC,EAAAA,MAAM,EAAEV,qBAAMW,QAAN,CAAeX,qBAAMY,KAAN,CAAYZ,qBAAMa,MAAlB,CAAf,EAA0C,EAA1C,CANM;AAOdC,EAAAA,SAAS,EAAEd,qBAAMW,QAAN,CAAeX,qBAAMY,KAAN,CAAYZ,qBAAMC,KAAN,CAAY;AAAEc,IAAAA,GAAG,EAAEf,qBAAMa;AAAb,GAAZ,CAAZ,CAAf,EAAgE,EAAhE,CAPG;AAQdG,EAAAA,WAAW,EAAEhB,qBAAMiB,SAAN,CAAgBjB,qBAAMa,MAAtB,CARC;AASdK,EAAAA,qBAAqB,EAAE,KATT;AAUdC,EAAAA,SAAS,EAAE,EAVG;AAWdC,EAAAA,SAAS,EAAE,EAXG;AAYdC,EAAAA,SAAS,EAAE,EAZG;AAadC,EAAAA,SAAS,EAAE,EAbG;AAcdC,EAAAA,UAAU,EAAEvB,qBAAMK,KAAN,CAAYmB,gCAAZ,CAdE;AAedC,EAAAA,gBAAgB,EAAEzB,qBAAMK,KAAN,CAAYqB,4CAAZ;AAfJ,CADJ,EAkBXC,OAlBW,CAkBH,UAAAC,IAAI;AAAA,SAAK;AAChBC,IAAAA,QADgB,oBACPC,QADO,EACG;AACjB;AACA;AACA,wCAAcF,IAAd,EAAoBE,QAApB;AACD,KALe;AAOhBC,IAAAA,aAPgB,2BAOA;AACd,UAAI,CAACH,IAAI,CAACL,UAAV,EAAsB;AACpBK,QAAAA,IAAI,CAACL,UAAL,GAAkBC,iCAAgBQ,MAAhB,CAAuB;AAAEC,UAAAA,OAAO,EAAEL,IAAI,CAAC1B;AAAhB,SAAvB,CAAlB;AACD;;AACD,aAAO0B,IAAI,CAACL,UAAZ;AACD,KAZe;AAchBW,IAAAA,mBAdgB,iCAcM;AACpB,UAAI,CAACN,IAAI,CAACH,gBAAV,EAA4B;AAC1BG,QAAAA,IAAI,CAACH,gBAAL,GAAwBC,6CAAsBM,MAAtB,CAA6B;AAAEC,UAAAA,OAAO,EAAEL,IAAI,CAAC1B;AAAhB,SAA7B,CAAxB;AACD;;AACD,aAAO0B,IAAI,CAACH,gBAAZ;AACD;AAnBe,GAAL;AAAA,CAlBD,EAwCZ;AAxCY,CAyCXU,KAzCW,CAyCL,UAAAP,IAAI;AAAA,SAAK;AACd;AACA,QAAIQ,eAAJ,GAAsB;AACpB,aAAOR,IAAI,CAACpB,QAAL,KAAkB6B,uBAAWC,QAAX,CAAoB/B,IAA7C,CADoB,CAC+B;AACpD,KAJa;;AAMd,QAAIgC,mBAAJ,GAA0B;AACxB,aAAOX,IAAI,CAACpB,QAAL,KAAkB6B,uBAAWG,YAAX,CAAwBjC,IAAjD,CADwB,CAC+B;AACxD,KARa;;AAUd,QAAIkC,SAAJ,GAAgB;AACd,aAAOb,IAAI,CAAClB,MAAL,CAAYgC,QAAZ,CAAqB,OAArB,KAAiCd,IAAI,CAAClB,MAAL,CAAYgC,QAAZ,CAAqB,WAArB,CAAxC;AACD;;AAZa,GAAL;AAAA,CAzCC,CAAd,C,CAwDkB","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { types, applySnapshot } from 'mobx-state-tree';\n\nimport { StudyFilesStore } from './StudyFilesStore';\nimport { StudyPermissionsStore } from './StudyPermissionsStore';\nimport { categories } from './categories';\n\n// ==================================================================\n// Study\n// ==================================================================\nconst Study = types\n  .model('Study', {\n    id: types.identifier,\n    rev: types.maybe(types.number),\n    name: '',\n    category: '',\n    projectId: '',\n    access: types.optional(types.array(types.string), []),\n    resources: types.optional(types.array(types.model({ arn: types.string })), []),\n    description: types.maybeNull(types.string),\n    uploadLocationEnabled: false,\n    createdAt: '',\n    createdBy: '',\n    updatedAt: '',\n    updatedBy: '',\n    filesStore: types.maybe(StudyFilesStore),\n    permissionsStore: types.maybe(StudyPermissionsStore),\n  })\n  .actions(self => ({\n    setStudy(rawStudy) {\n      // Note: if you have partial data vs full data, you need to replace the applySnapshot() with\n      // the appropriate logic\n      applySnapshot(self, rawStudy);\n    },\n\n    getFilesStore() {\n      if (!self.filesStore) {\n        self.filesStore = StudyFilesStore.create({ studyId: self.id });\n      }\n      return self.filesStore;\n    },\n\n    getPermissionsStore() {\n      if (!self.permissionsStore) {\n        self.permissionsStore = StudyPermissionsStore.create({ studyId: self.id });\n      }\n      return self.permissionsStore;\n    },\n  }))\n\n  // eslint-disable-next-line no-unused-vars\n  .views(self => ({\n    // add view methods here\n    get isOpenDataStudy() {\n      return self.category === categories.openData.name; // TODO the backend should really send an id and not a name\n    },\n\n    get isOrganizationStudy() {\n      return self.category === categories.organization.name; // TODO the backend should really send an id and not a name\n    },\n\n    get canUpload() {\n      return self.access.includes('admin') || self.access.includes('readwrite');\n    },\n  }));\n\nexport { Study }; // eslint-disable-line import/prefer-default-export\n"],"file":"Study.js"}