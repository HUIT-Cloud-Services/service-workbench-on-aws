{"version":3,"sources":["../../../src/models/studies/StudiesStore.js"],"names":["StudiesStore","BaseStore","named","props","category","studies","types","optional","map","Study","studyStores","StudyStore","tickPeriod","actions","self","superCleanup","cleanup","doLoad","runInAction","exiting","newItem","setStudy","addStudy","rawStudy","id","previous","get","put","getStudyStore","studyId","entry","set","create","createStudy","study","uploadLocationEnabled","result","resultStudy","getStudy","clear","views","empty","size","total","list","forEach","push","_","reverse","sortBy","hasStudy","has","registerContextItems","appContext","studiesStoresMap","categories","myStudies","name","organization","openData"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\n/* eslint-disable import/prefer-default-export */\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport { consolidateToMap } from '@aws-ee/base-ui/dist/helpers/utils';\n\nimport { getStudies, createStudy } from '../../helpers/api';\nimport { categories } from './categories';\nimport { Study } from './Study';\nimport { StudyStore } from './StudyStore';\n\n// ==================================================================\n// StudiesStore\n// ==================================================================\nconst StudiesStore = BaseStore.named('StudiesStore')\n  .props({\n    category: '',\n    studies: types.optional(types.map(Study), {}),\n    studyStores: types.optional(types.map(StudyStore), {}),\n    tickPeriod: 300 * 1000, // 5 minutes\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const studies = await getStudies(self.category);\n        // We try to preserve existing studies data and merge the new data instead\n        // We could have used self.studies.replace(), but it will do clear() then merge()\n        self.runInAction(() => {\n          consolidateToMap(self.studies, studies, (exiting, newItem) => {\n            exiting.setStudy(newItem);\n          });\n        });\n      },\n\n      addStudy(rawStudy) {\n        const id = rawStudy.id;\n        const previous = self.studies.get(id);\n\n        if (!previous) {\n          self.studies.put(rawStudy);\n        } else {\n          previous.setStudy(rawStudy);\n        }\n      },\n\n      getStudyStore: studyId => {\n        let entry = self.studyStores.get(studyId);\n        if (!entry) {\n          // Lazily create the store\n          self.studyStores.set(studyId, StudyStore.create({ studyId }));\n          entry = self.studyStores.get(studyId);\n        }\n\n        return entry;\n      },\n\n      async createStudy(study) {\n        const result = await createStudy({ ...study, uploadLocationEnabled: true });\n        self.runInAction(() => {\n          self.addStudy(result);\n        });\n        const resultStudy = self.getStudy(result.id);\n\n        return resultStudy;\n      },\n\n      cleanup: () => {\n        self.studies.clear();\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get empty() {\n      return self.studies.size === 0;\n    },\n\n    get total() {\n      return self.studies.size;\n    },\n\n    get list() {\n      const result = [];\n      self.studies.forEach(study => result.push(study));\n\n      return _.reverse(_.sortBy(result, ['createdAt', 'name']));\n    },\n\n    hasStudy(id) {\n      return self.studies.has(id);\n    },\n\n    getStudy(id) {\n      return self.studies.get(id);\n    },\n  }));\n\nfunction registerContextItems(appContext) {\n  appContext.studiesStoresMap = {\n    // TODO - we should be using ids when calling the backend but the backend needs fixing too since it does not support ids yet\n    [categories.myStudies.id]: StudiesStore.create({ category: categories.myStudies.name }),\n    [categories.organization.id]: StudiesStore.create({ category: categories.organization.name }),\n    [categories.openData.id]: StudiesStore.create({ category: categories.openData.name }),\n  };\n}\n\nexport { registerContextItems };\n"],"file":"StudiesStore.js"}