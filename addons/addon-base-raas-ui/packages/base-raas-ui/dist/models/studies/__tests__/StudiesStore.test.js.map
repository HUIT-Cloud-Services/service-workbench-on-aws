{"version":3,"sources":["../../../../src/models/studies/__tests__/StudiesStore.test.js"],"names":["jest","mock","describe","store","appContext","newStudy","id","rev","name","beforeEach","studiesStoresMap","categories","organization","it","getStudies","mockResolvedValueOnce","load","addStudy","expect","list","toMatchObject","length","toBe","getStudyStore","retVal","studyId","createStudy"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { categories } from '../categories';\nimport { registerContextItems as registerStudiesStore } from '../StudiesStore';\nimport { getStudies, createStudy } from '../../../helpers/api';\n\njest.mock('../../../helpers/api');\n\ndescribe('StudiesStore', () => {\n  let store = null;\n  const appContext = {};\n  const newStudy = {\n    id: 'studying_anew',\n    rev: 1,\n    name: 'new_beginnings',\n  };\n\n  beforeEach(async () => {\n    registerStudiesStore(appContext);\n    store = appContext.studiesStoresMap[categories.organization.id];\n  });\n\n  describe('addStudy', () => {\n    it('should add a study', async () => {\n      // BUILD\n      getStudies.mockResolvedValueOnce([]);\n\n      await store.load();\n\n      // OPERATE\n      await store.addStudy(newStudy);\n\n      // CHECk\n      expect(store.list[0]).toMatchObject(newStudy);\n    });\n\n    it('should not add the study because it already exists', async () => {\n      // BUILD\n      getStudies.mockResolvedValueOnce([newStudy]);\n\n      await store.load();\n\n      // OPERATE\n      await store.addStudy(newStudy);\n\n      // CHECk\n      expect(store.list.length).toBe(1);\n    });\n  });\n\n  describe('getStudyStore', () => {\n    it('should create a study store if it does not exist', async () => {\n      // BUILD\n      getStudies.mockResolvedValueOnce([]);\n\n      await store.load();\n\n      // OPERATE\n      const retVal = await store.getStudyStore('newStudyStoreID');\n\n      // CHECK\n      expect(retVal.studyId).toBe('newStudyStoreID');\n    });\n  });\n\n  describe('createStudy', () => {\n    it('should create a new study and return it', async () => {\n      // BUILD\n      getStudies.mockResolvedValueOnce([]);\n      createStudy.mockResolvedValueOnce(newStudy);\n      await store.load();\n\n      // OPERATE\n      const retVal = await store.createStudy(newStudy);\n\n      // CHECK\n      expect(retVal).toMatchObject(newStudy);\n    });\n  });\n});\n"],"file":"StudiesStore.test.js"}