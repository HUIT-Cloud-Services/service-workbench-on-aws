{"version":3,"sources":["../../../src/models/studies/StudyPermissions.js"],"names":["StudyPermissions","types","model","id","identifier","adminUsers","optional","array","string","readonlyUsers","readwriteUsers","createdAt","createdBy","updatedAt","updatedBy","views","_self","userTypes"],"mappings":";;;;;;;AAgBA;;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA,IAAMA,gBAAgB,GAAGC,qBACtBC,KADsB,CAChB,kBADgB,EACI;AACzBC,EAAAA,EAAE,EAAEF,qBAAMG,UADe;AAEzBC,EAAAA,UAAU,EAAEJ,qBAAMK,QAAN,CAAeL,qBAAMM,KAAN,CAAYN,qBAAMO,MAAlB,CAAf,EAA0C,EAA1C,CAFa;AAGzBC,EAAAA,aAAa,EAAER,qBAAMK,QAAN,CAAeL,qBAAMM,KAAN,CAAYN,qBAAMO,MAAlB,CAAf,EAA0C,EAA1C,CAHU;AAIzBE,EAAAA,cAAc,EAAET,qBAAMK,QAAN,CAAeL,qBAAMM,KAAN,CAAYN,qBAAMO,MAAlB,CAAf,EAA0C,EAA1C,CAJS;AAKzBG,EAAAA,SAAS,EAAE,EALc;AAMzBC,EAAAA,SAAS,EAAE,EANc;AAOzBC,EAAAA,SAAS,EAAE,EAPc;AAQzBC,EAAAA,SAAS,EAAE;AARc,CADJ,EAWtBC,KAXsB,CAWhB,UAAAC,KAAK;AAAA,SAAK;AACf,QAAIC,SAAJ,GAAgB;AACd,aAAO,CAAC,OAAD,EAAU,WAAV,EAAuB,UAAvB,CAAP;AACD;;AAHc,GAAL;AAAA,CAXW,CAAzB","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\n/* eslint-disable import/prefer-default-export */\nimport { types } from 'mobx-state-tree';\n\n// ==================================================================\n// Study Permissions\n// ==================================================================\nconst StudyPermissions = types\n  .model('StudyPermissions', {\n    id: types.identifier,\n    adminUsers: types.optional(types.array(types.string), []),\n    readonlyUsers: types.optional(types.array(types.string), []),\n    readwriteUsers: types.optional(types.array(types.string), []),\n    createdAt: '',\n    createdBy: '',\n    updatedAt: '',\n    updatedBy: '',\n  })\n  .views(_self => ({\n    get userTypes() {\n      return ['admin', 'readwrite', 'readonly'];\n    },\n  }));\n\nexport { StudyPermissions };\n"],"file":"StudyPermissions.js"}