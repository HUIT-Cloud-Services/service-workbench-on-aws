{"version":3,"sources":["../../../src/models/indexes/IndexesStore.js"],"names":["IndexesStore","BaseStore","named","props","indexes","types","optional","map","Index","tickPeriod","actions","self","superCleanup","cleanup","doLoad","runInAction","exiting","newItem","setIndex","addIndex","index","addedIndex","addedIndexModel","create","set","id","getIndexesStore","indexesId","entry","indexesStores","get","getIndex","res","forEach","_","clone","clear","views","dropdownOptions","result","proj","key","value","text","push","empty","size","total","list","reverse","sortBy","hasIndexes","has","getIndexes","registerContextItems","appContext","indexesStore"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\n\nimport { consolidateToMap } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { getIndexes, addIndex } from '../../helpers/api';\nimport { Index } from './Index';\n\n// ==================================================================\n// IndexesStore\n// ==================================================================\nconst IndexesStore = BaseStore.named('IndexesStore')\n  .props({\n    indexes: types.optional(types.map(Index), {}),\n    tickPeriod: 900 * 1000, // 15 minutes\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const indexes = (await getIndexes()) || [];\n        self.runInAction(() => {\n          consolidateToMap(self.indexes, indexes, (exiting, newItem) => {\n            exiting.setIndex(newItem);\n          });\n        });\n      },\n\n      addIndex: async index => {\n        const addedIndex = await addIndex(index);\n        self.runInAction(() => {\n          // Added newly created user to users map\n          const addedIndexModel = Index.create(addedIndex);\n          self.indexes.set(addedIndexModel.id, addedIndexModel);\n        });\n      },\n\n      getIndexesStore: indexesId => {\n        let entry = self.indexesStores.get(indexesId);\n        if (!entry) {\n          // Lazily create the store\n          self.indexesStores.set(indexesId, IndexesStore.create({ indexesId }));\n          entry = self.indexesStores.get(indexesId);\n        }\n\n        return entry;\n      },\n\n      getIndex: indexesId => {\n        let res = {};\n        self.indexes.forEach(index => {\n          if (index.id === indexesId) res = _.clone(index);\n        });\n        return res;\n      },\n\n      cleanup: () => {\n        self.indexes.clear();\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get dropdownOptions() {\n      const result = [];\n      // converting map self.users to result array\n      self.indexes.forEach(index => {\n        const proj = {};\n        proj.key = index.id;\n        proj.value = index.id;\n        proj.text = index.id;\n        result.push(proj);\n      });\n      return result;\n    },\n\n    get empty() {\n      return self.indexes.size === 0;\n    },\n\n    get total() {\n      return self.indexes.size;\n    },\n\n    get list() {\n      const result = [];\n      self.indexes.forEach(indexes => result.push(indexes));\n\n      return _.reverse(_.sortBy(result, ['createdAt', 'name']));\n    },\n\n    hasIndexes(id) {\n      return self.indexes.has(id);\n    },\n\n    getIndexes(id) {\n      return self.indexes.get(id);\n    },\n  }));\n\nfunction registerContextItems(appContext) {\n  appContext.indexesStore = IndexesStore.create({}, appContext);\n}\n\nexport { IndexesStore, registerContextItems };\n"],"file":"IndexesStore.js"}