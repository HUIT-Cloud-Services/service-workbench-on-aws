{"version":3,"sources":["../../../src/models/helpers/Operation.js"],"names":["Operation","types","model","id","state","error","maybe","Err","actions","runInAction","fn","self","run","undefined","views","initial","processing","completed","hasError","errorMessage","message"],"mappings":";;;;;;;AAeA;;AACA;;;;;;AAEA;AACA;AACA;AACA,IAAMA,SAAS,GAAGC,qBACfC,KADe,CACT,WADS,EACI;AAClBC,EAAAA,EAAE,EAAE,EADc;AAElBC,EAAAA,KAAK,EAAE,SAFW;AAEA;AAClBC,EAAAA,KAAK,EAAEJ,qBAAMK,KAAN,CAAYC,QAAZ;AAHW,CADJ,EAOfC,OAPe,CAOP;AAAA,SAAO;AACd;AACA;AACAC,IAAAA,WAHc,uBAGFC,EAHE,EAGE;AACd,aAAOA,EAAE,EAAT;AACD;AALa,GAAP;AAAA,CAPO,EAefF,OAfe,CAeP,UAAAG,IAAI;AAAA,SAAK;AACVC,IAAAA,GADU,eACNF,EADM,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,gBAAAA,IAAI,CAACP,KAAL,GAAa,YAAb;AADY;AAAA;AAAA,uBAGJM,EAAE,EAHE;;AAAA;AAIVC,gBAAAA,IAAI,CAACF,WAAL,CAAiB,YAAM;AACrBE,kBAAAA,IAAI,CAACN,KAAL,GAAaQ,SAAb;AACD,iBAFD;AAJU;AAAA;;AAAA;AAAA;AAAA;AAQVF,gBAAAA,IAAI,CAACF,WAAL,CAAiB,YAAM;AACrBE,kBAAAA,IAAI,CAACN,KAAL,GAAa,4BAAb;AACD,iBAFD;AARU;;AAAA;AAAA;AAaVM,gBAAAA,IAAI,CAACF,WAAL,CAAiB,YAAM;AACrBE,kBAAAA,IAAI,CAACP,KAAL,GAAa,WAAb;AACD,iBAFD;AAbU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBb;AAlBe,GAAL;AAAA,CAfG,EAoChB;AApCgB,CAqCfU,KArCe,CAqCT,UAAAH,IAAI;AAAA,SAAK;AACd,QAAII,OAAJ,GAAc;AACZ,aAAOJ,IAAI,CAACP,KAAL,KAAe,SAAtB;AACD,KAHa;;AAId,QAAIY,UAAJ,GAAiB;AACf,aAAOL,IAAI,CAACP,KAAL,KAAe,YAAtB;AACD,KANa;;AAOd,QAAIa,SAAJ,GAAgB;AACd,aAAON,IAAI,CAACP,KAAL,KAAe,WAAtB;AACD,KATa;;AAUd,QAAIc,QAAJ,GAAe;AACb,aAAO,CAAC,CAACP,IAAI,CAACN,KAAd;AACD,KAZa;;AAad,QAAIc,YAAJ,GAAmB;AACjB,aAAOR,IAAI,CAACN,KAAL,GAAaM,IAAI,CAACN,KAAL,CAAWe,OAAX,IAAsB,eAAnC,GAAqD,EAA5D;AACD;;AAfa,GAAL;AAAA,CArCK,CAAlB,C,CAuDsB","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { types } from 'mobx-state-tree';\nimport { toErr, Err } from '@aws-ee/base-ui/dist/models/Err';\n\n// ==================================================================\n// Operation\n// ==================================================================\nconst Operation = types\n  .model('Operation', {\n    id: '',\n    state: 'initial', // initial, processing, completed\n    error: types.maybe(Err),\n  })\n\n  .actions(() => ({\n    // I had issues using runInAction from mobx\n    // the issue is discussed here https://github.com/mobxjs/mobx-state-tree/issues/915\n    runInAction(fn) {\n      return fn();\n    },\n  }))\n\n  .actions(self => ({\n    async run(fn) {\n      self.state = 'processing';\n      try {\n        await fn();\n        self.runInAction(() => {\n          self.error = undefined;\n        });\n      } catch (error) {\n        self.runInAction(() => {\n          self.error = toErr(error);\n        });\n        throw error;\n      } finally {\n        self.runInAction(() => {\n          self.state = 'completed';\n        });\n      }\n    },\n  }))\n\n  // eslint-disable-next-line no-unused-vars\n  .views(self => ({\n    get initial() {\n      return self.state === 'initial';\n    },\n    get processing() {\n      return self.state === 'processing';\n    },\n    get completed() {\n      return self.state === 'completed';\n    },\n    get hasError() {\n      return !!self.error;\n    },\n    get errorMessage() {\n      return self.error ? self.error.message || 'unknown error' : '';\n    },\n  }));\n\nexport { Operation }; // eslint-disable-line import/prefer-default-export\n"],"file":"Operation.js"}