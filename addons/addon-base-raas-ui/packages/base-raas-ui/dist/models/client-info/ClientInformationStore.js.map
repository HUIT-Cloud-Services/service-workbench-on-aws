{"version":3,"sources":["../../../src/models/client-info/ClientInformationStore.js"],"names":["ClientInformationStore","BaseStore","named","props","clientInformation","types","optional","ClientInformation","actions","self","doLoad","info","ipAddress","fetch","then","res","json","answer","runInAction","create","origin","views","registerContextItems","appContext","clientInformationStore"],"mappings":";;;;;;;;AAeA;;AACA;;AAEA;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAMA,sBAAsB,GAAGC,qBAAUC,KAAV,CAAgB,wBAAhB,EAC5BC,KAD4B,CACtB;AACLC,EAAAA,iBAAiB,EAAEC,qBAAMC,QAAN,CAAeC,oCAAf,EAAkC,EAAlC;AADd,CADsB,EAI5BC,OAJ4B,CAIpB,UAAAC,IAAI,EAAI;AACf,SAAO;AACCC,IAAAA,MADD,oBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACM,8BADN;;AAAA;AACPC,gBAAAA,IADO;AAEPC,gBAAAA,SAFO,GAEKD,IAAI,CAACC,SAFV;;AAAA,sBAGTA,SAAS,KAAK,WAHL;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAOUC,KAAK,CAAC,wBAAD,CAAL,CAAgCC,IAAhC,CAAqC,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,iBAAxC,CAPV;;AAAA;AAOLC,gBAAAA,MAPK;AAQXR,gBAAAA,IAAI,CAACS,WAAL,CAAiB,YAAM;AACrBT,kBAAAA,IAAI,CAACL,iBAAL,GAAyBG,qCAAkBY,MAAlB,CAAyB;AAAEP,oBAAAA,SAAS,EAAEK,MAAM,IAAIA,MAAM,CAACG;AAA9B,mBAAzB,CAAzB;AACD,iBAFD;AARW;;AAAA;AAcbX,gBAAAA,IAAI,CAACS,WAAL,CAAiB,YAAM;AACrBT,kBAAAA,IAAI,CAACL,iBAAL,GAAyBG,qCAAkBY,MAAlB,CAAyB;AAAEP,oBAAAA,SAAS,EAATA;AAAF,mBAAzB,CAAzB;AACD,iBAFD;;AAda;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBd;AAlBI,GAAP;AAoBD,CAzB4B,EA0B5BS,KA1B4B,CA0BtB,UAAAZ,IAAI;AAAA,SAAK;AACd,QAAIG,SAAJ,GAAgB;AACd,aAAOH,IAAI,CAACL,iBAAL,CAAuBQ,SAA9B;AACD;;AAHa,GAAL;AAAA,CA1BkB,CAA/B;;;;AAgCA,SAASU,oBAAT,CAA8BC,UAA9B,EAA0C;AACxCA,EAAAA,UAAU,CAACC,sBAAX,GAAoCxB,sBAAsB,CAACmB,MAAvB,CAA8B,EAA9B,EAAkCI,UAAlC,CAApC;AACD","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport { types } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\n\nimport { getClientIpAddress } from '../../helpers/api';\nimport { ClientInformation } from './ClientInformation';\n\n// There are situations in which it is useful for the UI to be able to\n// determine the IP address that it has, for example so that it can use that\n// IP address in a Security Group rule that later restricts access for a given\n// compute environment to the user that launched it. So, this store implements\n// a \"what is my IP address?\" feature.\nconst ClientInformationStore = BaseStore.named('ClientInformationStore')\n  .props({\n    clientInformation: types.optional(ClientInformation, {}),\n  })\n  .actions(self => {\n    return {\n      async doLoad() {\n        const info = await getClientIpAddress();\n        const ipAddress = info.ipAddress;\n        if (ipAddress === '127.0.0.1') {\n          // Only for \"local\" development that we call http://httpbin.org/get\n          // otherwise for any other development modes including for production,\n          // we call our own api to get the ip address.\n          const answer = await fetch('http://httpbin.org/get').then(res => res.json());\n          self.runInAction(() => {\n            self.clientInformation = ClientInformation.create({ ipAddress: answer && answer.origin });\n          });\n          return;\n        }\n\n        self.runInAction(() => {\n          self.clientInformation = ClientInformation.create({ ipAddress });\n        });\n      },\n    };\n  })\n  .views(self => ({\n    get ipAddress() {\n      return self.clientInformation.ipAddress;\n    },\n  }));\n\nfunction registerContextItems(appContext) {\n  appContext.clientInformationStore = ClientInformationStore.create({}, appContext);\n}\n\nexport { ClientInformationStore, registerContextItems };\n"],"file":"ClientInformationStore.js"}