{"version":3,"sources":["../../../src/models/workflow-step-templates/StepTemplate.js"],"names":["_","types","applySnapshot","getEnv","getSnapshot","InputManifest","applyMarkdown","visit","deriveAdminInputManifest","inputManifest","admin","cloneDeep","visitFn","item","isString","rules","replace","condition","sections","map","section","children","flatten","StepTemplateVersion","model","id","v","maybeNull","number","title","desc","skippable","maybe","boolean","adminInputManifest","actions","self","transformManifest","manifest","showdown","assets","afterCreate","setStepTemplateVersion","template","views","_self","StepTemplate","identifier","versions","optional","array","setStepTemplate","mapOfExisting","keyBy","version","toString","processed","forEach","templateVersion","existing","push","create","latest","largestVersion","getVersion","find","versionNumbers"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types, applySnapshot, getEnv, getSnapshot } from 'mobx-state-tree';\n\nimport { InputManifest, applyMarkdown, visit } from '@aws-ee/base-ui/dist/models/forms/InputManifest';\n\n// ==================================================================\n// Helpers\n// ==================================================================\n\n// Given an input manifest we want to derive an admin input manifest from it, this is done by doing the following:\n// - combining all the sections into one\n// - removing all conditions in all input entries\n// - removing 'required' from rules attributes\nfunction deriveAdminInputManifest(inputManifest = {}) {\n  const admin = _.cloneDeep(inputManifest);\n  const visitFn = item => {\n    if (_.isString(item.rules)) {\n      item.rules = item.rules.replace(/\\|required\\|/, '');\n      item.rules = item.rules.replace(/required\\|/, '');\n      item.rules = item.rules.replace(/\\|required/, '');\n      item.rules = item.rules.replace(/required/, '');\n    }\n    delete item.condition;\n    return item;\n  };\n  const sections = _.map(admin.sections, (section = {}) => visit(section.children, visitFn));\n\n  admin.sections = [{ children: _.flatten(sections) }];\n  return admin;\n}\n\n// ==================================================================\n// StepTemplateVersion\n// ==================================================================\nconst StepTemplateVersion = types\n  .model('StepTemplateVersion', {\n    id: '',\n    v: types.maybeNull(types.number),\n    title: '',\n    desc: '',\n    skippable: types.maybe(types.boolean),\n    inputManifest: types.maybe(InputManifest),\n    adminInputManifest: types.maybe(InputManifest),\n  })\n  .actions(self => {\n    function transformManifest(manifest) {\n      // We now apply markdown\n      const showdown = getEnv(self).showdown;\n      const assets = {}; // TODO resolve the assets of the step template (assets is a map of the name\n      // of the asset and the url of the asset), an asset is just an image file.\n      if (manifest) {\n        return applyMarkdown({ inputManifest: manifest, showdown, assets });\n      }\n      return manifest;\n    }\n\n    return {\n      afterCreate() {\n        self.inputManifest = transformManifest(self.inputManifest);\n        if (self.adminInputManifest) {\n          self.adminInputManifest = transformManifest(self.adminInputManifest);\n        } else if (self.inputManifest) {\n          self.adminInputManifest = deriveAdminInputManifest(getSnapshot(self.inputManifest));\n        }\n      },\n\n      setStepTemplateVersion(template) {\n        applySnapshot(self, template);\n        self.afterCreate();\n      },\n    };\n  })\n\n  .views(_self => ({}));\n\n// ==================================================================\n// StepTemplate\n// ==================================================================\nconst StepTemplate = types\n  .model('StepTemplate', {\n    id: types.identifier,\n    versions: types.optional(types.array(StepTemplateVersion), []),\n  })\n  .actions(self => ({\n    setStepTemplate(template) {\n      // we try to preserve any existing version objects and update their content instead\n      const mapOfExisting = _.keyBy(self.versions, version => version.v.toString());\n      const processed = [];\n\n      _.forEach(template.versions, templateVersion => {\n        const existing = mapOfExisting[templateVersion.v];\n        if (existing) {\n          existing.setStepTemplateVersion(templateVersion);\n          processed.push(existing);\n        } else {\n          processed.push(StepTemplateVersion.create(templateVersion));\n        }\n      });\n\n      self.versions.replace(processed);\n    },\n  }))\n\n  .views(self => ({\n    get latest() {\n      // we loop through all 'v' numbers and pick the template with the largest 'v' value\n      let largestVersion = self.versions[0];\n      _.forEach(self.versions, version => {\n        if (version.v > largestVersion.v) {\n          largestVersion = version;\n        }\n      });\n      return largestVersion;\n    },\n\n    getVersion(v) {\n      return _.find(self.versions, ['v', v]);\n    },\n\n    get versionNumbers() {\n      return _.map(self.versions, version => version.v);\n    },\n  }));\n\nexport { StepTemplate, StepTemplateVersion };\n"],"file":"StepTemplate.js"}