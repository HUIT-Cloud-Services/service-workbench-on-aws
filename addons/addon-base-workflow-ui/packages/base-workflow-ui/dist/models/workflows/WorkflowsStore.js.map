{"version":3,"sources":["../../../src/models/workflows/WorkflowsStore.js"],"names":["_","types","BaseStore","uiEventBus","getWorkflows","Workflow","toWorkflows","WorkflowStore","WorkflowsStore","named","props","workflows","optional","map","workflowStores","tickPeriod","actions","self","superCleanup","cleanup","doLoad","versions","runInAction","previousKeys","forEach","_value","key","workflow","id","hasPrevious","has","addWorkflow","delete","rawWorkflow","previous","get","put","setWorkflow","getWorkflowStore","workflowId","entry","set","create","clear","views","empty","size","total","list","result","push","reverse","sortBy","getWorkflow","hasWorkflow","asDropDownOptions","wf","latestWfVersion","latest","v","wfv","value","JSON","stringify","wid","wrv","text","registerContextItems","appContext","workflowsStore","listenTo","listener","_event"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types } from 'mobx-state-tree';\nimport { BaseStore } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport { uiEventBus } from '@aws-ee/base-ui/dist/models/SessionStore';\n\nimport { getWorkflows } from '../../helpers/api';\nimport { Workflow, toWorkflows } from './Workflow';\nimport WorkflowStore from './WorkflowStore';\n\n// ==================================================================\n// WorkflowsStore\n// ==================================================================\nconst WorkflowsStore = BaseStore.named('WorkflowsStore')\n  .props({\n    workflows: types.optional(types.map(Workflow), {}),\n    workflowStores: types.optional(types.map(WorkflowStore), {}),\n    tickPeriod: 900 * 1000, // 15 minutes\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const versions = await getWorkflows();\n        const workflows = toWorkflows(versions);\n\n        // we try to preserve existing workflow versions data and merge the new data instead\n        self.runInAction(() => {\n          const previousKeys = {};\n          self.workflows.forEach((_value, key) => {\n            previousKeys[key] = true;\n          });\n          workflows.forEach(workflow => {\n            const id = workflow.id;\n            const hasPrevious = self.workflows.has(id);\n\n            self.addWorkflow(workflow);\n\n            if (hasPrevious) {\n              delete previousKeys[id];\n            }\n          });\n\n          _.forEach(previousKeys, (_value, key) => {\n            self.workflows.delete(key);\n          });\n        });\n      },\n\n      addWorkflow(rawWorkflow) {\n        if (!rawWorkflow) return;\n        const id = rawWorkflow.id;\n        const previous = self.workflows.get(id);\n\n        if (!previous) {\n          self.workflows.put(rawWorkflow);\n        } else {\n          previous.setWorkflow(rawWorkflow);\n        }\n      },\n\n      getWorkflowStore: workflowId => {\n        let entry = self.workflowStores.get(workflowId);\n        if (!entry) {\n          // Lazily create the store\n          self.workflowStores.set(workflowId, WorkflowStore.create({ workflowId }));\n          entry = self.workflowStores.get(workflowId);\n        }\n\n        return entry;\n      },\n\n      cleanup: () => {\n        self.workflows.clear();\n        self.workflowStores.clear();\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get empty() {\n      return self.workflows.size === 0;\n    },\n\n    get total() {\n      return self.workflows.size;\n    },\n\n    get list() {\n      const result = [];\n      self.workflows.forEach(workflow => result.push(workflow));\n\n      return _.reverse(_.sortBy(result, ['latest.createdAt', 'title']));\n    },\n\n    getWorkflow(id) {\n      return self.workflows.get(id);\n    },\n\n    hasWorkflow(id) {\n      return self.workflows.has(id);\n    },\n\n    asDropDownOptions() {\n      const result = [];\n      self.workflows.forEach(wf => {\n        const latestWfVersion = wf.latest.v;\n        wf.versions.forEach(wfv => {\n          result.push({\n            key: wf.id,\n            value: JSON.stringify({ wid: wf.id, wrv: wfv.v }),\n            text: wfv.v === latestWfVersion ? `${wf.id} (latest)` : `${wf.id} (v${wfv.v})`,\n            // content:\n            //   wfv.v === latestWfVersion ? (\n            //     <Label as=\"a\" color=\"blue\" image>\n            //       {wf.id}\n            //       <Label.Detail>latest version</Label.Detail>\n            //     </Label>\n            //   ) : (\n            //     <Label as=\"a\" color=\"grey\" image>\n            //       {wf.id}\n            //       <Label.Detail>v{wfv.v}</Label.Detail>\n            //     </Label>\n            //   ),\n          });\n        });\n      });\n      return result;\n    },\n  }));\n\nfunction registerContextItems(appContext) {\n  appContext.workflowsStore = WorkflowsStore.create({}, appContext);\n\n  uiEventBus.listenTo('workflowPublished', {\n    id: 'WorkflowsStore',\n    listener: async _event => {\n      appContext.workflowsStore.cleanup();\n    },\n  });\n}\n\nexport { WorkflowsStore, registerContextItems };\n"],"file":"WorkflowsStore.js"}