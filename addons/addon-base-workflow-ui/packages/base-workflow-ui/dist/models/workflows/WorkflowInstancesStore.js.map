{"version":3,"sources":["../../../src/models/workflows/WorkflowInstancesStore.js"],"names":["_","types","getParent","BaseStore","isStoreReady","getWorkflowInstances","triggerWorkflow","WorkflowInstancesStore","named","props","workflowId","workflowVer","number","tickPeriod","actions","self","superCleanup","cleanup","doLoad","parent","load","instances","runInAction","version","Error","setInstances","hasPendingInstances","setFastTickPeriod","setSlowTickPeriod","input","result","setInstance","instance","changeTickPeriod","views","workflow","undefined","getVersion","empty","length","total","list","slice","reverse","sortBy","getInstance","id","instancesMap","get","hasInstance","has"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types, getParent } from 'mobx-state-tree';\nimport { BaseStore, isStoreReady } from '@aws-ee/base-ui/dist/models/BaseStore';\n\nimport { getWorkflowInstances, triggerWorkflow } from '../../helpers/api';\n\n// ==================================================================\n// WorkflowInstancesStore\n// ==================================================================\nconst WorkflowInstancesStore = BaseStore.named('WorkflowInstancesStore')\n  .props({\n    workflowId: '',\n    workflowVer: types.number,\n    tickPeriod: 300 * 1000, // 5 minutes\n  })\n\n  .actions(self => {\n    // save the base implementation of cleanup\n    const superCleanup = self.cleanup;\n\n    return {\n      async doLoad() {\n        const parent = getParent(self, 2);\n        if (!isStoreReady(parent)) {\n          await parent.load();\n        }\n        const instances = await getWorkflowInstances(self.workflowId, self.workflowVer);\n        self.runInAction(() => {\n          const version = self.version;\n          if (!version) throw new Error(`Workflow \"${self.workflowId}\" v${self.workflowVer} does not exist`);\n          version.setInstances(instances);\n          if (version.hasPendingInstances) {\n            self.setFastTickPeriod();\n          } else {\n            self.setSlowTickPeriod();\n          }\n        });\n      },\n\n      async triggerWorkflow({ input }) {\n        const result = await triggerWorkflow(self.workflowId, self.workflowVer, { input });\n        self.runInAction(() => {\n          const version = self.version;\n          if (!version) throw new Error(`Workflow \"${self.workflowId}\" v${self.workflowVer} does not exist`);\n          version.setInstance(result.instance);\n          if (version.hasPendingInstances) {\n            self.setFastTickPeriod();\n          } else {\n            self.setSlowTickPeriod();\n          }\n        });\n\n        return result;\n      },\n\n      setSlowTickPeriod() {\n        self.changeTickPeriod(300 * 1000); // 5 minutes\n      },\n\n      setFastTickPeriod() {\n        self.changeTickPeriod(5 * 1000); // 5 seconds\n      },\n\n      cleanup: () => {\n        superCleanup();\n      },\n    };\n  })\n\n  .views(self => ({\n    get instances() {\n      const version = self.version;\n      if (!version) return [];\n      return version.instances;\n    },\n\n    get version() {\n      const parent = getParent(self, 2);\n      const workflow = parent.workflow;\n      if (!workflow) return undefined;\n      return workflow.getVersion(self.workflowVer);\n    },\n\n    get empty() {\n      return self.instances.length === 0;\n    },\n\n    get total() {\n      return self.instances.length;\n    },\n\n    get list() {\n      const result = self.instances.slice();\n\n      return _.reverse(_.sortBy(result, ['createdAt']));\n    },\n\n    getInstance(id) {\n      return self.instancesMap.get(id);\n    },\n\n    hasInstance(id) {\n      return self.instancesMap.has(id);\n    },\n  }));\n\n// Note: Do NOT register this in the app context, if you want to gain access to an instance\n//       use WorkflowStore.getWorkflowInstancesStore()\nexport default WorkflowInstancesStore;\n"],"file":"WorkflowInstancesStore.js"}