{"version":3,"sources":["../../../src/models/workflow-templates/WorkflowTemplate.js"],"names":["_","types","getEnv","applySnapshot","detach","clone","generateId","WorkflowTemplateStep","titles","instanceTtl","runSpecSize","runSpecTarget","title","desc","steps","supportedPropsOverrideKeys","PropsOverrideOption","model","allowed","optional","array","string","views","self","overrideSummaryRows","canOverride","prop","includes","result","name","forEach","push","RunSpec","size","target","propertySummaryRows","value","WorkflowTemplateVersion","id","v","number","rev","maybeNull","createdAt","createdBy","updatedAt","updatedBy","runSpec","propsOverrideOption","maybe","selectedSteps","actions","setWorkflowTemplateVersion","template","setTitle","setDescription","setInstanceTtl","answer","isString","parsed","parseInt","isNaN","isNumber","setRunSpec","setPropsOverrideOption","option","reinsertStep","currentIndex","targetIndex","current","splice","removeStep","idOrStep","step","getStep","remove","addStep","skippable","workflowStep","create","stepTemplateId","stepTemplateVer","stepTemplate","find","descHtml","showdown","convert","assets","system","propertyOverrideSummaryRows","isNil","canRearrangeSteps","canWorkflowRearrangeSteps","canWorkflowOverrideProp","WorkflowTemplate","identifier","versions","setWorkflowTemplate","mapOfExisting","keyBy","version","toString","processed","templateVersion","existing","replace","latest","largestVersion","getVersion","versionNumbers","map"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport { types, getEnv, applySnapshot, detach, clone } from 'mobx-state-tree';\nimport { generateId } from '@aws-ee/base-ui/dist/helpers/utils';\n\nimport { WorkflowTemplateStep } from './WorkflowTemplateStep';\n\nconst titles = {\n  instanceTtl: 'Time to Live (TTL) for instances of the workflow',\n  runSpecSize: 'Runtime lambda size',\n  runSpecTarget: 'Runtime target',\n  title: 'Title',\n  desc: 'Description',\n  steps: 'Add, remove, and rearrange steps',\n};\n\nconst supportedPropsOverrideKeys = ['runSpecSize', 'runSpecTarget', 'instanceTtl', 'title', 'desc', 'steps'];\n\n// ==================================================================\n// PropsOverrideOption\n// ==================================================================\nconst PropsOverrideOption = types\n  .model('PropsOverrideOption', {\n    allowed: types.optional(types.array(types.string), []),\n  })\n  .views(self => ({\n    get overrideSummaryRows() {\n      const canOverride = prop => self.allowed.includes(prop);\n\n      const result = [\n        { title: titles.steps, allowed: canOverride('steps'), name: 'steps' },\n        { title: titles.instanceTtl, allowed: canOverride('instanceTtl'), name: 'instanceTtl' },\n        { title: titles.runSpecSize, allowed: canOverride('runSpecSize'), name: 'runSpecSize' },\n        { title: titles.runSpecTarget, allowed: canOverride('runSpecTarget'), name: 'runSpecTarget' },\n        { title: titles.title, allowed: canOverride('title'), name: 'title' },\n        { title: titles.desc, allowed: canOverride('desc'), name: 'desc' },\n      ];\n\n      _.forEach(self.allowed, prop => {\n        if (supportedPropsOverrideKeys.includes(prop)) return;\n        result.push({ title: prop, allowed: true });\n      });\n\n      return result;\n    },\n\n    canOverride(prop) {\n      return self.allowed.includes(prop);\n    },\n  }));\n\n// ==================================================================\n// RunSpec\n// ==================================================================\nconst RunSpec = types\n  .model('RunSpec', {\n    size: '',\n    target: '',\n  })\n  .views(self => ({\n    get propertySummaryRows() {\n      return [\n        { title: titles.runSpecSize, value: self.size },\n        { title: titles.runSpecTarget, value: self.target },\n      ];\n    },\n  }));\n\n// ==================================================================\n// WorkflowTemplateVersion\n// ==================================================================\nconst WorkflowTemplateVersion = types\n  .model('WorkflowTemplateVersion', {\n    id: '',\n    v: types.number,\n    rev: types.maybeNull(types.number),\n    createdAt: '',\n    createdBy: '',\n    updatedAt: '',\n    updatedBy: '',\n    title: '',\n    desc: '',\n    instanceTtl: types.maybeNull(types.number),\n    runSpec: RunSpec,\n    propsOverrideOption: types.maybe(PropsOverrideOption),\n    selectedSteps: types.optional(types.array(WorkflowTemplateStep), []),\n  })\n  .actions(self => ({\n    setWorkflowTemplateVersion(template) {\n      applySnapshot(self, template);\n    },\n\n    setTitle(title) {\n      self.title = title;\n    },\n\n    setDescription(desc) {\n      self.desc = desc;\n    },\n\n    setInstanceTtl(value) {\n      let answer = null;\n      if (_.isString(value)) {\n        const parsed = parseInt(value, 10);\n        if (_.isNaN(parsed)) answer = null;\n        else answer = parsed;\n      } else if (_.isNumber(value)) {\n        answer = value;\n      }\n\n      self.instanceTtl = answer;\n    },\n\n    setRunSpec(runSpec) {\n      applySnapshot(self.runSpec, runSpec);\n    },\n\n    setPropsOverrideOption(option) {\n      applySnapshot(self.propsOverrideOption, option);\n    },\n\n    reinsertStep(currentIndex, targetIndex) {\n      const current = self.selectedSteps[currentIndex];\n\n      detach(current);\n      self.selectedSteps.splice(targetIndex, 0, current);\n    },\n\n    removeStep(idOrStep) {\n      const step = _.isString(idOrStep) ? self.getStep(idOrStep) : idOrStep;\n      self.selectedSteps.remove(step);\n    },\n\n    addStep(step) {\n      const { id, v, skippable, title, desc } = step;\n      const workflowStep = WorkflowTemplateStep.create(\n        {\n          id: generateId('wt-step'),\n          stepTemplateId: id,\n          stepTemplateVer: v,\n          title,\n          desc,\n          skippable,\n          stepTemplate: clone(step),\n        },\n        getEnv(self),\n      );\n\n      self.selectedSteps.push(workflowStep);\n\n      return workflowStep;\n    },\n  }))\n\n  .views(self => ({\n    getStep(id) {\n      return _.find(self.selectedSteps, step => step.id === id);\n    },\n\n    get descHtml() {\n      const showdown = getEnv(self).showdown;\n      return showdown.convert(self.desc, self.assets); // TODO declare assets\n    },\n\n    get system() {\n      return self.createdBy === '_system_';\n    },\n\n    get propertySummaryRows() {\n      return [\n        {\n          title: titles.instanceTtl,\n          value: self.instanceTtl,\n        },\n        ...self.runSpec.propertySummaryRows,\n      ];\n    },\n\n    get propertyOverrideSummaryRows() {\n      if (_.isNil(self.propsOverrideOption)) return [];\n      return self.propsOverrideOption.overrideSummaryRows;\n    },\n\n    // A workflow template can always rearrange its steps, don't confuse this with 'canWorkflowRearrangeSteps'\n    get canRearrangeSteps() {\n      return true;\n    },\n\n    get canWorkflowRearrangeSteps() {\n      return self.canWorkflowOverrideProp('steps');\n    },\n\n    canWorkflowOverrideProp(prop) {\n      return self.propsOverrideOption.canOverride(prop);\n    },\n  }));\n\n// ==================================================================\n// WorkflowTemplate\n// ==================================================================\nconst WorkflowTemplate = types\n  .model('WorkflowTemplate', {\n    id: types.identifier,\n    versions: types.optional(types.array(WorkflowTemplateVersion), []),\n  })\n  .actions(self => ({\n    setWorkflowTemplate(template) {\n      // we try to preserve any existing version objects and update their content instead\n      const mapOfExisting = _.keyBy(self.versions, version => version.v.toString());\n      const processed = [];\n\n      _.forEach(template.versions, templateVersion => {\n        const existing = mapOfExisting[templateVersion.v];\n        if (existing) {\n          existing.setWorkflowTemplateVersion(templateVersion);\n          processed.push(existing);\n        } else {\n          processed.push(WorkflowTemplateVersion.create(templateVersion));\n        }\n      });\n\n      self.versions.replace(processed);\n    },\n  }))\n\n  .views(self => ({\n    get latest() {\n      // we loop through all 'v' numbers and pick the template with the largest 'v' value\n      let largestVersion = self.versions[0];\n      _.forEach(self.versions, version => {\n        if (version.v > largestVersion.v) {\n          largestVersion = version;\n        }\n      });\n      return largestVersion;\n    },\n\n    getVersion(v) {\n      return _.find(self.versions, ['v', v]);\n    },\n\n    get versionNumbers() {\n      return _.map(self.versions, version => version.v);\n    },\n  }));\n\nexport { WorkflowTemplate, WorkflowTemplateVersion, RunSpec };\n"],"file":"WorkflowTemplate.js"}