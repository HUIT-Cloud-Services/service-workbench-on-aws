{"version":3,"sources":["../../../../src/parts/workflows/drafts/CreateWorkflowDraft.js"],"names":["_","React","observer","inject","decorate","action","runInAction","computed","withRouter","Label","Segment","Button","Message","isStoreEmpty","gotoFn","displayError","Stores","ErrorBox","Form","DropDown","Input","getCreateDraftForm","ProgressPlaceHolder","CreateWorkflowDraft","Component","constructor","props","handleDraftForSelectionChange","selection","form","templateIdField","$","workflowIdField","clear","set","handleCancel","onCancel","noop","handleFormError","_form","_errors","handleFormSubmission","values","draftForValue","draftFor","isNewWorkflow","templateId","undefined","workflowId","draftsStore","getDraftsStore","goto","draft","createDraft","encodeURIComponent","id","error","stores","getWorkflowsStore","getTemplatesStore","componentDidMount","getStores","load","emptyWorkflows","store","emptyWorkflowTemplates","workflowsStore","workflowDraftsStore","workflowTemplatesStore","getDraftForDropDownOptions","hasWorkflows","hasTemplates","options","push","value","text","content","getWorkflowDropDownOptions","workflows","list","forEach","workflow","hasWorkflow","latest","title","getWorkflowTemplatesDropDownOptions","templatesStore","templates","template","render","hasError","loading","ready","renderMain","draftForDropDownOptions","workflowDropDownOptions","templatesDropDownOptions","dropDownField","isExistingWorkflow","empty","processing","_onSubmit","renderEmptyMessage","display"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { decorate, action, runInAction, computed } from 'mobx';\nimport { withRouter } from 'react-router-dom';\nimport { Label, Segment, Button, Message } from 'semantic-ui-react';\nimport { isStoreEmpty } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport Stores from '@aws-ee/base-ui/dist/models/Stores';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\nimport DropDown from '@aws-ee/base-ui/dist/parts/helpers/fields/DropDown';\nimport Input from '@aws-ee/base-ui/dist/parts/helpers/fields/Input';\n\nimport getCreateDraftForm from '../../../models/forms/CreateWorkflowDraftForm';\nimport ProgressPlaceHolder from '../../workflow-common/ProgressPlaceholder';\n\n// expected props\n// - onCancel (via prop) called on cancel\n// - workflowsStore (via injection)\n// - workflowDraftsStore (via injection)\n// - workflowTemplatesStore (via injection)\n// - className (via props)\n// - location (from react router)\nclass CreateWorkflowDraft extends React.Component {\n  constructor(props) {\n    super(props);\n    this.form = getCreateDraftForm();\n    runInAction(() => {\n      this.stores = new Stores([this.getWorkflowsStore(), this.getDraftsStore(), this.getTemplatesStore()]);\n    });\n  }\n\n  componentDidMount() {\n    this.getStores().load();\n  }\n\n  get emptyWorkflows() {\n    const store = this.getWorkflowsStore();\n    return isStoreEmpty(store);\n  }\n\n  get emptyWorkflowTemplates() {\n    const store = this.getTemplatesStore();\n    return isStoreEmpty(store);\n  }\n\n  getStores() {\n    return this.stores;\n  }\n\n  getWorkflowsStore() {\n    return this.props.workflowsStore;\n  }\n\n  getDraftsStore() {\n    return this.props.workflowDraftsStore;\n  }\n\n  getTemplatesStore() {\n    return this.props.workflowTemplatesStore;\n  }\n\n  getDraftForDropDownOptions() {\n    const hasWorkflows = !this.emptyWorkflows;\n    const hasTemplates = !this.emptyWorkflowTemplates;\n    const options = [];\n\n    if (hasWorkflows) {\n      options.push({\n        value: 'existingWorkflow',\n        text: 'An existing workflow',\n        content: (\n          <div>\n            <Label color=\"teal\" horizontal size=\"mini\">\n              Existing\n            </Label>{' '}\n            An existing workflow\n          </div>\n        ),\n      });\n    }\n\n    if (hasTemplates) {\n      options.push({\n        value: 'newWorkflow',\n        text: 'A new workflow',\n        content: (\n          <div>\n            <Label color=\"blue\" horizontal size=\"mini\">\n              New\n            </Label>{' '}\n            An new workflow\n          </div>\n        ),\n      });\n    }\n\n    return options;\n  }\n\n  getWorkflowDropDownOptions() {\n    const workflowsStore = this.getWorkflowsStore();\n    const draftsStore = this.getDraftsStore();\n    const workflows = workflowsStore.list;\n    const options = [];\n\n    // TODO the approach of looping through all the entries in the workflowsStore is not going to scale beyond 5000 workflows, we need an autocomplete approach\n    // for this\n    _.forEach(workflows, workflow => {\n      if (!draftsStore.hasWorkflow(workflow.id)) {\n        options.push({\n          text: workflow.latest.title || '',\n          value: workflow.id,\n          content: (\n            <div>\n              <Label color=\"teal\" horizontal size=\"mini\">\n                Existing\n              </Label>{' '}\n              {workflow.latest.title} <span className=\"ml1 fs-7 color-grey\">{workflow.id}</span>\n            </div>\n          ),\n        });\n      }\n    });\n\n    return options;\n  }\n\n  getWorkflowTemplatesDropDownOptions() {\n    const templatesStore = this.getTemplatesStore();\n    const templates = templatesStore.list;\n    const options = [];\n\n    _.forEach(templates, template => {\n      options.push({\n        text: template.latest.title || '',\n        value: template.id,\n        content: (\n          <div>\n            <Label color=\"teal\" horizontal size=\"mini\">\n              Template\n            </Label>{' '}\n            {template.latest.title} <span className=\"ml1 fs-7 color-grey\">{template.id}</span>\n          </div>\n        ),\n      });\n    });\n\n    return options;\n  }\n\n  handleDraftForSelectionChange = selection => {\n    const form = this.form;\n    const templateIdField = form.$('templateId');\n    const workflowIdField = form.$('workflowId');\n    const clear = () => {\n      templateIdField.clear();\n      workflowIdField.clear();\n    };\n\n    clear();\n\n    if (selection === 'existingWorkflow') {\n      templateIdField.set('__DO_NOT_USE__');\n    }\n  };\n\n  handleCancel = () => {\n    const onCancel = this.props.onCancel || _.noop;\n    onCancel();\n  };\n\n  handleFormError = (_form, _errors) => {\n    // We don't need to do anything here\n  };\n\n  handleFormSubmission = async form => {\n    const values = form.values();\n    const draftForValue = values.draftFor;\n    const isNewWorkflow = draftForValue === 'newWorkflow';\n\n    const templateId = isNewWorkflow ? values.templateId : undefined;\n    const workflowId = values.workflowId;\n    const draftsStore = this.getDraftsStore();\n    const goto = gotoFn(this);\n\n    try {\n      const draft = await draftsStore.createDraft({ isNewWorkflow, workflowId, templateId });\n      form.clear();\n      this.handleCancel();\n      goto(`/workflows/drafts/edit/${encodeURIComponent(draft.id)}`);\n    } catch (error) {\n      displayError(error);\n    }\n  };\n\n  render() {\n    const stores = this.getStores();\n    let content = null;\n\n    if (stores.hasError) {\n      content = <ErrorBox error={stores.error} className=\"p0 mb3\" />;\n    } else if (stores.loading) {\n      content = <ProgressPlaceHolder />;\n    } else if (stores.ready) {\n      content = this.renderMain();\n    } else {\n      content = null;\n    }\n\n    return content;\n  }\n\n  renderMain() {\n    const form = this.form;\n    const draftForDropDownOptions = this.getDraftForDropDownOptions();\n    const workflowDropDownOptions = this.getWorkflowDropDownOptions();\n    const templatesDropDownOptions = this.getWorkflowTemplatesDropDownOptions();\n    const dropDownField = form.$('draftFor');\n    const templateIdField = form.$('templateId');\n    const workflowIdField = form.$('workflowId');\n    const draftForValue = dropDownField.value;\n    const isNewWorkflow = draftForValue === 'newWorkflow';\n    const isExistingWorkflow = draftForValue === 'existingWorkflow';\n    const empty = this.emptyWorkflowTemplates && this.emptyWorkflows;\n\n    return (\n      <Segment clearing className=\"p3\">\n        <Form\n          form={form}\n          onCancel={this.handleCancel}\n          onSuccess={this.handleFormSubmission}\n          onError={this.handleFormError}\n        >\n          {({ processing, _onSubmit, onCancel }) => (\n            <>\n              {empty && this.renderEmptyMessage()}\n              <DropDown\n                field={dropDownField}\n                options={draftForDropDownOptions}\n                selection\n                fluid\n                disabled={processing}\n                onChange={this.handleDraftForSelectionChange}\n              />\n              {!empty && isNewWorkflow && (\n                <>\n                  <DropDown\n                    field={templateIdField}\n                    options={templatesDropDownOptions}\n                    selection\n                    fluid\n                    disabled={processing}\n                  />\n                  <Input field={workflowIdField} disabled={processing} />\n                </>\n              )}\n              {!empty && isExistingWorkflow && (\n                <DropDown\n                  field={workflowIdField}\n                  options={workflowDropDownOptions}\n                  selection\n                  fluid\n                  disabled={processing}\n                />\n              )}\n              <div className=\"mt3\">\n                <Button floated=\"right\" color=\"blue\" icon disabled={processing || empty} className=\"ml2\" type=\"submit\">\n                  Create Draft\n                </Button>\n                <Button floated=\"right\" disabled={processing} onClick={onCancel}>\n                  Cancel\n                </Button>\n              </div>\n            </>\n          )}\n        </Form>\n      </Segment>\n    );\n  }\n\n  renderEmptyMessage() {\n    return (\n      <Message warning style={{ display: 'block' }}>\n        <Message.Header>Brand new system</Message.Header>\n        <p>\n          This is a brand new installation of the data lake. There are no workflow templates or workflows to create a\n          draft from. At least one workflow template needs to be created before you can create a workflow draft.\n        </p>\n      </Message>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(CreateWorkflowDraft, {\n  emptyWorkflows: computed,\n  emptyWorkflowTemplates: computed,\n  handleDraftForSelectionChange: action,\n  handleCancel: action,\n  handleFormSubmission: action,\n  handleFormError: action,\n});\n\nexport default inject(\n  'workflowsStore',\n  'workflowDraftsStore',\n  'workflowTemplatesStore',\n)(withRouter(observer(CreateWorkflowDraft)));\n"],"file":"CreateWorkflowDraft.js"}