{"version":3,"sources":["../../../../src/parts/workflows/published/WorkflowInstancesList.js"],"names":["_","React","observer","inject","decorate","action","autorun","runInAction","observable","withRouter","TimeAgo","Header","Segment","Icon","Statistic","Grid","Label","Button","gotoFn","displayError","swallowError","niceNumber","isStoreError","isStoreReady","isStoreLoading","isStoreEmpty","Form","TextArea","ErrorBox","getTriggerWorkflowForm","ProgressPlaceHolder","WorkflowInstancesList","Component","constructor","props","cancelTriggerDialog","triggerDialogShown","showTriggerDialog","handleFormSubmission","form","values","workflowInputStr","workflowInput","store","getInstancesStore","input","JSON","parse","triggerWorkflow","clear","error","SyntaxError","handleInstanceClick","event","preventDefault","stopPropagation","instanceId","currentTarget","dataset","instance","goto","id","v","getWorkflowVersion","componentDidMount","disposer","load","startHeartbeat","componentWillUnmount","stopHeartbeat","workflowVersion","getWorkflowStore","workflowsStore","workflowStore","getUserDisplayName","userDisplayName","render","content","renderEmptyInstances","renderMain","renderTriggerDialog","list","map","renderRow","createdAt","createdBy","statusSummary","by","getDisplayName","uid","statusLabel","statusColor","stepsSummary","item","count","show","renderTriggerDialogContent","workflowInputField","$","handleFormError","processing","_onSubmit","onCancel"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { decorate, action, autorun, runInAction, observable } from 'mobx';\nimport { withRouter } from 'react-router-dom';\nimport TimeAgo from 'react-timeago';\nimport { Header, Segment, Icon, Statistic, Grid, Label, Button } from 'semantic-ui-react';\nimport { gotoFn } from '@aws-ee/base-ui/dist/helpers/routing';\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport { swallowError, niceNumber } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { isStoreError, isStoreReady, isStoreLoading, isStoreEmpty } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\nimport TextArea from '@aws-ee/base-ui/dist/parts/helpers/fields/TextArea';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\n\nimport getTriggerWorkflowForm from '../../../models/forms/TriggerWorkflowForm';\nimport ProgressPlaceHolder from '../../workflow-common/ProgressPlaceholder';\n\n// expected props\n// - workflowVersion (via props)\n// - workflowsStore (via injection)\n// - userDisplayName (via injection)\n// - location (from react router)\nclass WorkflowInstancesList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.form = getTriggerWorkflowForm();\n    runInAction(() => {\n      this.triggerDialogShown = false;\n    });\n  }\n\n  componentDidMount() {\n    if (this.disposer) this.disposer();\n\n    this.disposer = autorun(() => {\n      const store = this.getInstancesStore();\n      if (!isStoreReady(store)) swallowError(store.load());\n    });\n\n    const store = this.getInstancesStore();\n    store.startHeartbeat();\n  }\n\n  componentWillUnmount() {\n    const store = this.getInstancesStore();\n    store.stopHeartbeat();\n    if (this.disposer) this.disposer();\n  }\n\n  getWorkflowVersion() {\n    return this.props.workflowVersion;\n  }\n\n  getWorkflowStore() {\n    const workflowVersion = this.getWorkflowVersion();\n    return this.props.workflowsStore.getWorkflowStore(workflowVersion.id);\n  }\n\n  getInstancesStore() {\n    const workflowStore = this.getWorkflowStore();\n    const workflowVersion = this.getWorkflowVersion();\n    return workflowStore.getInstancesStore(workflowVersion.id, workflowVersion.v);\n  }\n\n  getUserDisplayName() {\n    return this.props.userDisplayName;\n  }\n\n  cancelTriggerDialog = () => {\n    this.triggerDialogShown = false;\n  };\n\n  showTriggerDialog = () => {\n    this.triggerDialogShown = true;\n  };\n\n  handleFormSubmission = async form => {\n    const values = form.values();\n    const workflowInputStr = values.workflowInput;\n\n    try {\n      const store = this.getInstancesStore();\n\n      // Convert input JSON string to an input object\n      const input = JSON.parse(workflowInputStr);\n      await store.triggerWorkflow({ input });\n\n      form.clear();\n      this.cancelTriggerDialog();\n    } catch (error) {\n      if (error instanceof SyntaxError) {\n        displayError('Incorrect workflow input. Make sure the workflow input is a well-formed JSON.');\n      } else {\n        displayError(error);\n      }\n    }\n  };\n\n  handleInstanceClick = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // see https://reactjs.org/docs/events.html and https://github.com/facebook/react/issues/5733\n    const instanceId = event.currentTarget.dataset.instance;\n    const goto = gotoFn(this);\n    const { id, v } = this.getWorkflowVersion();\n\n    goto(`/workflows/published/id/${id}/v/${v}/instances/id/${instanceId}`);\n  };\n\n  render() {\n    const store = this.getInstancesStore();\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} className=\"p0\" />;\n    } else if (isStoreLoading(store)) {\n      content = <ProgressPlaceHolder />;\n    } else if (isStoreReady(store) && isStoreEmpty(store)) {\n      content = this.renderEmptyInstances();\n    } else if (isStoreReady(store) && !isStoreEmpty(store)) {\n      content = this.renderMain();\n    } else {\n      // We get here if the store is in the initial state\n      content = null;\n    }\n\n    return (\n      <>\n        {this.renderTriggerDialog()}\n        {content}\n      </>\n    );\n  }\n\n  renderMain() {\n    const store = this.getInstancesStore();\n    const list = store.list;\n\n    return _.map(list, instance => this.renderRow(instance));\n  }\n\n  renderRow(instance) {\n    const { id, createdAt, createdBy, statusSummary } = instance;\n    const userDisplayName = this.getUserDisplayName();\n    const by = () => <span>{userDisplayName.getDisplayName({ uid: createdBy })}</span>;\n    const { statusLabel, statusColor, stepsSummary } = statusSummary;\n\n    return (\n      <Segment\n        clearing\n        padded\n        key={id}\n        className=\"mb3 cursor-pointer\"\n        data-instance={id}\n        onClick={this.handleInstanceClick}\n      >\n        <Grid celled=\"internally\" stackable>\n          <Grid.Row stretched>\n            <Grid.Column width={3} className=\"center pr3\">\n              <Label color={statusColor} className=\"fluid center mb1\">\n                {statusLabel}\n              </Label>\n              <div className=\"mb1\">\n                id <b>{id}</b>\n              </div>\n              <TimeAgo date={createdAt} />\n              {by()}\n            </Grid.Column>\n            <Grid.Column width={13}>\n              <div className=\"mb2 center\">Steps</div>\n              <Statistic.Group widths=\"five\" size=\"tiny\">\n                {_.map(stepsSummary, item => (\n                  <Statistic key={item.statusLabel} color={item.statusColor}>\n                    <Statistic.Value>{niceNumber(item.count)}</Statistic.Value>\n                    <Statistic.Label>{item.statusLabel}</Statistic.Label>\n                  </Statistic>\n                ))}\n              </Statistic.Group>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    );\n  }\n\n  renderEmptyInstances() {\n    return (\n      <Segment placeholder>\n        <Header icon className=\"color-grey\">\n          <Icon name=\"copy outline\" />\n          No instances\n          <Header.Subheader>\n            Once the workflow is triggered at least once, you will start seeing information about the instances in this\n            area.\n          </Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n\n  renderTriggerDialog() {\n    const show = this.triggerDialogShown;\n\n    return (\n      <>\n        {!show && (\n          <div className=\"clearfix mb2\">\n            <Button basic color=\"blue\" floated=\"right\" onClick={this.showTriggerDialog}>\n              Trigger\n            </Button>\n          </div>\n        )}\n        {show && this.renderTriggerDialogContent()}\n      </>\n    );\n  }\n\n  renderTriggerDialogContent() {\n    const form = this.form;\n    const workflowInputField = form.$('workflowInput');\n\n    return (\n      <Segment clearing className=\"p3 mb3 mt3\">\n        <Form\n          form={form}\n          onCancel={this.cancelTriggerDialog}\n          onSuccess={this.handleFormSubmission}\n          onError={this.handleFormError}\n        >\n          {({ processing, _onSubmit, onCancel }) => (\n            <>\n              <TextArea field={workflowInputField} disabled={processing} />\n              <div className=\"mt0\">\n                <Button floated=\"right\" color=\"blue\" icon disabled={processing} className=\"ml2\" type=\"submit\">\n                  Trigger\n                </Button>\n                <Button floated=\"right\" disabled={processing} onClick={onCancel}>\n                  Cancel\n                </Button>\n              </div>\n            </>\n          )}\n        </Form>\n      </Segment>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(WorkflowInstancesList, {\n  triggerDialogShown: observable,\n  handleInstanceClick: action,\n  showTriggerDialog: action,\n  cancelTriggerDialog: action,\n  handleFormSubmission: action,\n});\n\nexport default inject('workflowsStore', 'userDisplayName')(withRouter(observer(WorkflowInstancesList)));\n"],"file":"WorkflowInstancesList.js"}