{"version":3,"sources":["../../../../src/parts/workflows/published/WorkflowAssignmentsList.js"],"names":["_","React","observer","inject","decorate","withRouter","TimeAgo","Header","Segment","Icon","Table","swallowError","isStoreError","isStoreReady","isStoreLoading","isStoreEmpty","ErrorBox","ProgressPlaceHolder","WorkflowAssignmentsList","Component","componentDidMount","store","getAssignmentsStore","load","startHeartbeat","componentWillUnmount","stopHeartbeat","getWorkflowVersion","props","workflowVersion","getWorkflowStore","version","workflowsStore","id","workflowStore","getUserDisplayName","userDisplayName","render","content","error","renderEmptyAssignments","renderMain","assignments","list","renderAssignmentsTable","map","assignment","renderAssignmentRow","updatedAt","updatedBy","triggerType","triggerTypeData","config","isSystem","uid","by","getDisplayName"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { decorate } from 'mobx';\nimport { withRouter } from 'react-router-dom';\nimport TimeAgo from 'react-timeago';\nimport { Header, Segment, Icon, Table } from 'semantic-ui-react';\nimport { swallowError } from '@aws-ee/base-ui/dist/helpers/utils';\nimport { isStoreError, isStoreReady, isStoreLoading, isStoreEmpty } from '@aws-ee/base-ui/dist/models/BaseStore';\nimport ErrorBox from '@aws-ee/base-ui/dist/parts/helpers/ErrorBox';\n\nimport ProgressPlaceHolder from '../../workflow-common/ProgressPlaceholder';\n\n// expected props\n// - workflowVersion (via props)\n// - workflowsStore (via injection)\n// - userDisplayName (via injection)\n// - location (from react router)\nclass WorkflowAssignmentsList extends React.Component {\n  componentDidMount() {\n    const store = this.getAssignmentsStore();\n    swallowError(store.load());\n    store.startHeartbeat();\n  }\n\n  componentWillUnmount() {\n    const store = this.getAssignmentsStore();\n    store.stopHeartbeat();\n  }\n\n  getWorkflowVersion() {\n    return this.props.workflowVersion;\n  }\n\n  getWorkflowStore() {\n    const version = this.getWorkflowVersion();\n    return this.props.workflowsStore.getWorkflowStore(version.id);\n  }\n\n  getAssignmentsStore() {\n    const workflowStore = this.getWorkflowStore();\n    return workflowStore.getAssignmentsStore();\n  }\n\n  getUserDisplayName() {\n    return this.props.userDisplayName;\n  }\n\n  render() {\n    const store = this.getAssignmentsStore();\n    let content = null;\n\n    if (isStoreError(store)) {\n      content = <ErrorBox error={store.error} className=\"p0\" />;\n    } else if (isStoreLoading(store)) {\n      content = <ProgressPlaceHolder />;\n    } else if (isStoreReady(store) && isStoreEmpty(store)) {\n      content = this.renderEmptyAssignments();\n    } else if (isStoreReady(store) && !isStoreEmpty(store)) {\n      content = this.renderMain();\n    } else {\n      // We get here if the store is in the initial state\n      content = null;\n    }\n\n    return <>{content}</>;\n  }\n\n  renderMain() {\n    const store = this.getAssignmentsStore();\n    const assignments = store.list;\n\n    return <Segment padded>{this.renderAssignmentsTable(assignments)}</Segment>;\n  }\n\n  renderAssignmentsTable(assignments) {\n    return (\n      <Table basic=\"very\" className=\"animated\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell width={1}>Id</Table.HeaderCell>\n            <Table.HeaderCell width={4}>Trigger</Table.HeaderCell>\n            <Table.HeaderCell width={8}>Configuration</Table.HeaderCell>\n            <Table.HeaderCell width={3}>Updated</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>{_.map(assignments, assignment => this.renderAssignmentRow(assignment))}</Table.Body>\n      </Table>\n    );\n  }\n\n  renderAssignmentRow(assignment) {\n    const { id, updatedAt, updatedBy, triggerType, triggerTypeData: config } = assignment;\n    const userDisplayName = this.getUserDisplayName();\n    const isSystem = userDisplayName.isSystem({ uid: updatedBy });\n    const by = () => (isSystem ? '' : <span>by {userDisplayName.getDisplayName({ uid: updatedBy })}</span>);\n\n    return (\n      <Table.Row key={id}>\n        <Table.Cell>{id}</Table.Cell>\n        <Table.Cell>{triggerType}</Table.Cell>\n        <Table.Cell>{config}</Table.Cell>\n        <Table.Cell>\n          <TimeAgo date={updatedAt} />\n          <div>{by()}&nbsp;</div>\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  renderEmptyAssignments() {\n    return (\n      <Segment placeholder>\n        <Header icon className=\"color-grey\">\n          <Icon name=\"chain\" />\n          No assignments\n          <Header.Subheader>\n            Assignments allow you to configure the workflow to be triggered based on different criteria, try it out!\n          </Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(WorkflowAssignmentsList, {});\n\nexport default inject('workflowsStore', 'userDisplayName')(withRouter(observer(WorkflowAssignmentsList)));\n"],"file":"WorkflowAssignmentsList.js"}