{"version":3,"sources":["../../../src/parts/workflow-templates/ConfigOverrideTable.js"],"names":["_","React","observer","Table","Icon","c","Toggle","Component","rows","className","editable","processing","length","getTitle","item","label","title","map","index","renderKey","name","renderValue","allowed","hasTitle","isEmpty"],"mappings":"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","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { observer } from 'mobx-react';\nimport { Table, Icon } from 'semantic-ui-react';\nimport c from 'classnames';\nimport Toggle from '@aws-ee/base-ui/dist/parts/helpers/fields/Toggle';\n\n// expected props\n// - rows (via props), an array of objects, [ { name, title, allowed }, { name, title, allowed }, ... ], if editable = false\n//                     otherwise the array is expected to be an array of mobx form fields instances\n// - editable (via props), is this a toggle table?\n// - className (via props)\nconst Component = observer(({ rows = [], className = '', editable = false, processing = false }) => {\n  if (rows.length === 0) return null;\n  const getTitle = item => (editable ? item.label : item.title);\n\n  return (\n    <Table basic=\"very\" className={c('animated', className)}>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell width={10}>Key</Table.HeaderCell>\n          <Table.HeaderCell width={6}>Can be changed?</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {_.map(rows, (item, index) => (\n          <Table.Row key={`${index}-${getTitle(item)}`}>\n            <Table.Cell>{renderKey({ name: item.name, title: getTitle(item) })}</Table.Cell>\n            <Table.Cell>\n              {!editable && renderValue(item)}\n              {editable && <Toggle field={item} disabled={processing} show=\"toggleOnly\" className=\"mb0\" />}\n            </Table.Cell>\n          </Table.Row>\n        ))}\n      </Table.Body>\n    </Table>\n  );\n});\n\nfunction renderValue({ allowed }) {\n  if (allowed)\n    return (\n      <span className=\"op-3\">\n        <Icon name=\"toggle on\" color=\"blue\" size=\"large\" className=\"mr1\" />\n        Yes\n      </span>\n    );\n  return (\n    <span className=\"op-3\">\n      <Icon name=\"toggle off\" size=\"large\" color=\"grey\" className=\"mr1\" />\n      No\n    </span>\n  );\n}\n\nfunction renderKey({ title = '', name }) {\n  const hasTitle = !_.isEmpty(title);\n\n  if (hasTitle) {\n    return (\n      <>\n        <div>{title}</div>\n        <div className=\"fs-7 color-grey\">{name}</div>\n      </>\n    );\n  }\n  return <div>{name}</div>;\n}\n\nexport default Component;\n"],"file":"ConfigOverrideTable.js"}