{"version":3,"sources":["../../../src/parts/workflow-common/ProgressPlaceholder.js"],"names":["_","React","Segment","Placeholder","Divider","Component","segmentCount","segment","index","map","times","String"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,OAA/B,QAA8C,mBAA9C,C,CAEA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,YAAY,GAAG;AAAjB,CAAD,KAA0B;AAC1C,QAAMC,OAAO,GAAGC,KAAK,iBACnB,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,KAAd;AAAqB,IAAA,SAAS,EAAC;AAA/B,kBACE,oBAAC,WAAD;AAAa,IAAA,KAAK;AAAlB,kBACE,oBAAC,WAAD,CAAa,MAAb,qBACE,oBAAC,WAAD,CAAa,IAAb;AAAkB,IAAA,MAAM,EAAC;AAAzB,IADF,CADF,eAIE,oBAAC,WAAD,CAAa,SAAb,qBACE,oBAAC,WAAD,CAAa,IAAb;AAAkB,IAAA,MAAM,EAAC;AAAzB,IADF,CAJF,CADF,eASE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC;AAAnB,IATF,eAUE,oBAAC,WAAD;AAAa,IAAA,KAAK;AAAlB,kBACE,oBAAC,WAAD,CAAa,IAAb;AAAkB,IAAA,MAAM,EAAC;AAAzB,IADF,eAEE,oBAAC,WAAD,CAAa,IAAb;AAAkB,IAAA,MAAM,EAAC;AAAzB,IAFF,eAGE,oBAAC,WAAD,CAAa,IAAb;AAAkB,IAAA,MAAM,EAAC;AAAzB,IAHF,eAIE,oBAAC,WAAD,CAAa,IAAb;AAAkB,IAAA,MAAM,EAAC;AAAzB,IAJF,CAVF,CADF;;AAoBA,SAAOR,CAAC,CAACS,GAAF,CAAMT,CAAC,CAACU,KAAF,CAAQJ,YAAR,EAAsBK,MAAtB,CAAN,EAAqCH,KAAK,IAAID,OAAO,CAACC,KAAD,CAArD,CAAP;AACD,CAtBD;;AAwBA,eAAeH,SAAf","sourcesContent":["/*\n *  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\").\n *  You may not use this file except in compliance with the License.\n *  A copy of the License is located at\n *\n *  http://aws.amazon.com/apache2.0\n *\n *  or in the \"license\" file accompanying this file. This file is distributed\n *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n *  express or implied. See the License for the specific language governing\n *  permissions and limitations under the License.\n */\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { Segment, Placeholder, Divider } from 'semantic-ui-react';\n\n// expected props\n// - segmentCount (via props)\n// - className (via props)\nconst Component = ({ segmentCount = 1 }) => {\n  const segment = index => (\n    <Segment key={index} className=\"p3 mb2\">\n      <Placeholder fluid>\n        <Placeholder.Header>\n          <Placeholder.Line length=\"full\" />\n        </Placeholder.Header>\n        <Placeholder.Paragraph>\n          <Placeholder.Line length=\"short\" />\n        </Placeholder.Paragraph>\n      </Placeholder>\n      <Divider className=\"mt3\" />\n      <Placeholder fluid>\n        <Placeholder.Line length=\"full\" />\n        <Placeholder.Line length=\"full\" />\n        <Placeholder.Line length=\"full\" />\n        <Placeholder.Line length=\"full\" />\n      </Placeholder>\n    </Segment>\n  );\n\n  return _.map(_.times(segmentCount, String), index => segment(index));\n};\n\nexport default Component;\n"],"file":"ProgressPlaceholder.js"}