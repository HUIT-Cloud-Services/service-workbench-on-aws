{"version":3,"sources":["../../../src/models/key-pairs/KeyPair.js"],"names":["types","applySnapshot","statuses","active","color","display","tip","inactive","KeyPair","model","id","identifier","rev","maybe","number","owner","name","status","publicKey","desc","maybeNull","string","updatedAt","updatedBy","createdAt","createdBy","privateKey","actions","self","setKeyPair","raw","views","statusInfo","entry"],"mappings":"AAAA;AACA,SAASA,KAAT,EAAgBC,aAAhB,QAAqC,iBAArC;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,OADD;AAENC,IAAAA,OAAO,EAAE,QAFH;AAGNC,IAAAA,GAAG,EAAE;AAHC,GADO;AAMfC,EAAAA,QAAQ,EAAE;AACRH,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,OAAO,EAAE,UAFD;AAGRC,IAAAA,GAAG,EAAE;AAHG;AANK,CAAjB,C,CAaA;AACA;AACA;;AACA,MAAME,OAAO,GAAGR,KAAK,CAClBS,KADa,CACP,SADO,EACI;AAChBC,EAAAA,EAAE,EAAEV,KAAK,CAACW,UADM;AAEhBC,EAAAA,GAAG,EAAEZ,KAAK,CAACa,KAAN,CAAYb,KAAK,CAACc,MAAlB,CAFW;AAGhBC,EAAAA,KAAK,EAAE,EAHS;AAIhBC,EAAAA,IAAI,EAAE,EAJU;AAKhBC,EAAAA,MAAM,EAAE,EALQ;AAMhBC,EAAAA,SAAS,EAAE,EANK;AAOhBC,EAAAA,IAAI,EAAEnB,KAAK,CAACoB,SAAN,CAAgBpB,KAAK,CAACqB,MAAtB,CAPU;AAQhBC,EAAAA,SAAS,EAAE,EARK;AAShBC,EAAAA,SAAS,EAAE,EATK;AAUhBC,EAAAA,SAAS,EAAE,EAVK;AAWhBC,EAAAA,SAAS,EAAE,EAXK;AAYhBC,EAAAA,UAAU,EAAE,EAZI,CAYA;;AAZA,CADJ,EAebC,OAfa,CAeLC,IAAI,KAAK;AAChBC,EAAAA,UAAU,CAACC,GAAD,EAAM;AACd;AACA;AACA7B,IAAAA,aAAa,CAAC2B,IAAD,EAAOE,GAAP,CAAb;AACD;;AALe,CAAL,CAfC,EAuBd;AAvBc,CAwBbC,KAxBa,CAwBPH,IAAI,KAAK;AACd,MAAII,UAAJ,GAAiB;AACf,UAAMC,KAAK,GAAG/B,QAAQ,CAAC0B,IAAI,CAACX,MAAN,CAAR,IAAyB;AACrCb,MAAAA,KAAK,EAAE,MAD8B;AAErCC,MAAAA,OAAO,EAAE,SAF4B;AAGrCC,MAAAA,GAAG,EAAE;AAHgC,KAAvC;AAKA,WAAO2B,KAAP;AACD;;AARa,CAAL,CAxBG,CAAhB;AAmCA,SAASzB,OAAT","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { types, applySnapshot } from 'mobx-state-tree';\n\nconst statuses = {\n  active: {\n    color: 'green',\n    display: 'Active',\n    tip: 'You can use this key when connecting to your workspaces.',\n  },\n  inactive: {\n    color: 'grey',\n    display: 'Inactive',\n    tip: 'You can not use this key when connecting to your workspaces.',\n  },\n};\n\n// ==================================================================\n// KeyPair\n// ==================================================================\nconst KeyPair = types\n  .model('KeyPair', {\n    id: types.identifier,\n    rev: types.maybe(types.number),\n    owner: '',\n    name: '',\n    status: '',\n    publicKey: '',\n    desc: types.maybeNull(types.string),\n    updatedAt: '',\n    updatedBy: '',\n    createdAt: '',\n    createdBy: '',\n    privateKey: '', // The server will not return this value\n  })\n  .actions(self => ({\n    setKeyPair(raw) {\n      // Note: if you have partial data vs full data, you need to replace the applySnapshot() with\n      // the appropriate logic\n      applySnapshot(self, raw);\n    },\n  }))\n\n  // eslint-disable-next-line no-unused-vars\n  .views(self => ({\n    get statusInfo() {\n      const entry = statuses[self.status] || {\n        color: 'grey',\n        display: 'Unknown',\n        tip: 'Something not right',\n      };\n      return entry;\n    },\n  }));\n\nexport { KeyPair };\n"],"file":"KeyPair.js"}