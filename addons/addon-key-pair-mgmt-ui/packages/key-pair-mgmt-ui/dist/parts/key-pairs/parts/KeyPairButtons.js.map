{"version":3,"sources":["../../../../src/parts/key-pairs/parts/KeyPairButtons.js"],"names":["React","decorate","computed","action","observable","runInAction","observer","inject","withRouter","Button","Modal","displayError","displaySuccess","KeyPairButtons","Component","constructor","props","handleDelete","processingButton","name","keyPair","store","keyPairsStore","deleteKeyPair","id","error","render","processing","key","content","negative","onClick"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,MAA7B,EAAqCC,UAArC,EAAiDC,WAAjD,QAAoE,MAApE;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,2CAA7C,C,CAEA;AACA;AACA;;AACA,MAAMC,cAAN,SAA6Bb,KAAK,CAACc,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiBnBC,YAjBmB,GAiBJ,YAAY;AACzB,WAAKC,gBAAL,GAAwB,QAAxB;;AACA,UAAI;AACF,cAAMC,IAAI,GAAG,KAAKC,OAAL,CAAaD,IAA1B;AACA,cAAME,KAAK,GAAG,KAAKC,aAAnB;AACA,cAAMD,KAAK,CAACE,aAAN,CAAoB,KAAKH,OAAL,CAAaI,EAAjC,CAAN;AACAZ,QAAAA,cAAc,CAAE,YAAWO,IAAK,4BAAlB,CAAd;AACD,OALD,CAKE,OAAOM,KAAP,EAAc;AACdd,QAAAA,YAAY,CAACc,KAAD,CAAZ;AACD,OAPD,SAOU;AACRpB,QAAAA,WAAW,CAAC,MAAM;AAChB,eAAKa,gBAAL,GAAwB,EAAxB;AACD,SAFU,CAAX;AAGD;AACF,KA/BkB;;AAEjBb,IAAAA,WAAW,CAAC,MAAM;AAChB;AACA;AACA,WAAKa,gBAAL,GAAwB,EAAxB;AACD,KAJU,CAAX;AAKD;;AAED,MAAIE,OAAJ,GAAc;AACZ,WAAO,KAAKJ,KAAL,CAAWI,OAAlB;AACD;;AAED,MAAIE,aAAJ,GAAoB;AAClB,WAAO,KAAKN,KAAL,CAAWM,aAAlB;AACD;;AAkBDI,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,CAAC,CAAC,KAAKT,gBAA1B;AAEA,wBACE,8CACE,oBAAC,KAAD;AACE,MAAA,OAAO,eACL,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,OAAhB;AAAwB,QAAA,KAAK,MAA7B;AAA8B,QAAA,KAAK,EAAC,KAApC;AAA0C,QAAA,IAAI,EAAC,MAA/C;AAAsD,QAAA,SAAS,EAAC,SAAhE;AAA0E,QAAA,OAAO,EAAES;AAAnF,kBAFJ;AAME,MAAA,MAAM,EAAC,eANT;AAOE,MAAA,OAAO,EAAC,kCAPV;AAQE,MAAA,OAAO,EAAE,CAAC,QAAD,EAAW;AAAEC,QAAAA,GAAG,EAAE,QAAP;AAAiBC,QAAAA,OAAO,EAAE,QAA1B;AAAoCC,QAAAA,QAAQ,EAAE,IAA9C;AAAoDC,QAAAA,OAAO,EAAE,KAAKd;AAAlE,OAAX,CARX;AASE,MAAA,IAAI,EAAC;AATP,MADF,CADF;AAeD;;AApD0C,C,CAuD7C;;;AACAhB,QAAQ,CAACY,cAAD,EAAiB;AACvBO,EAAAA,OAAO,EAAElB,QADc;AAEvBoB,EAAAA,aAAa,EAAEpB,QAFQ;AAGvBgB,EAAAA,gBAAgB,EAAEd,UAHK;AAIvBa,EAAAA,YAAY,EAAEd;AAJS,CAAjB,CAAR;AAOA,eAAeI,MAAM,CAAC,eAAD,CAAN,CAAwBC,UAAU,CAACF,QAAQ,CAACO,cAAD,CAAT,CAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { decorate, computed, action, observable, runInAction } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Modal } from 'semantic-ui-react';\n\nimport { displayError, displaySuccess } from '@aws-ee/base-ui/dist/helpers/notification';\n\n// expected props\n// - keyPair (via prop)\n// - keyPairsStore (via injection)\nclass KeyPairButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      // The name of the button that is clicked recently and resulted in triggering a processing task\n      // The name can be: 'delete', 'activate' or 'deactivate'\n      this.processingButton = '';\n    });\n  }\n\n  get keyPair() {\n    return this.props.keyPair;\n  }\n\n  get keyPairsStore() {\n    return this.props.keyPairsStore;\n  }\n\n  handleDelete = async () => {\n    this.processingButton = 'delete';\n    try {\n      const name = this.keyPair.name;\n      const store = this.keyPairsStore;\n      await store.deleteKeyPair(this.keyPair.id);\n      displaySuccess(`The key \"${name}\" was successfully deleted`);\n    } catch (error) {\n      displayError(error);\n    } finally {\n      runInAction(() => {\n        this.processingButton = '';\n      });\n    }\n  };\n\n  render() {\n    const processing = !!this.processingButton;\n\n    return (\n      <div>\n        <Modal\n          trigger={\n            <Button floated=\"right\" basic color=\"red\" size=\"mini\" className=\"mt1 mb1\" loading={processing}>\n              Delete\n            </Button>\n          }\n          header=\"Are you sure?\"\n          content=\"This action can not be reverted.\"\n          actions={['Cancel', { key: 'delete', content: 'Delete', negative: true, onClick: this.handleDelete }]}\n          size=\"mini\"\n        />\n      </div>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(KeyPairButtons, {\n  keyPair: computed,\n  keyPairsStore: computed,\n  processingButton: observable,\n  handleDelete: action,\n});\n\nexport default inject('keyPairsStore')(withRouter(observer(KeyPairButtons)));\n"],"file":"KeyPairButtons.js"}