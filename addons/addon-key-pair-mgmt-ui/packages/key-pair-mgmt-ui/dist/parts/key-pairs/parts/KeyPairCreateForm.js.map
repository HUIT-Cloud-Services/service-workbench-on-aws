{"version":3,"sources":["../../../../src/parts/key-pairs/parts/KeyPairCreateForm.js"],"names":["React","decorate","runInAction","observable","action","computed","observer","inject","withRouter","Button","Header","Message","displayError","Form","Input","TextArea","getKeyPairCreateForm","KeyPairCreateForm","Component","constructor","props","handleCreate","form","data","values","keyPair","keyPairsStore","createKetPair","error","handleCancel","undefined","onCancel","handleDownload","downloadLink","document","createElement","setAttribute","encodeURIComponent","privateKey","name","click","render","renderPrivateKey","renderForm","processing","$"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { decorate, runInAction, observable, action, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Header, Message } from 'semantic-ui-react';\nimport { displayError } from '@aws-ee/base-ui/dist/helpers/notification';\nimport Form from '@aws-ee/base-ui/dist/parts/helpers/fields/Form';\nimport Input from '@aws-ee/base-ui/dist/parts/helpers/fields/Input';\nimport TextArea from '@aws-ee/base-ui/dist/parts/helpers/fields/TextArea';\n\nimport { getKeyPairCreateForm } from '../../../models/forms/KeyPairCreateForm';\n\n// expected props\n// - onCancel (via props) a function is called with the user clicks on cancel or done\n// - keyPairsStore (via injection)\nclass KeyPairCreateForm extends React.Component {\n  constructor(props) {\n    super(props);\n    runInAction(() => {\n      this.form = getKeyPairCreateForm();\n      this.keyPair = undefined;\n    });\n  }\n\n  get keyPairsStore() {\n    return this.props.keyPairsStore;\n  }\n\n  handleCreate = async form => {\n    const data = form.values();\n    try {\n      const keyPair = await this.keyPairsStore.createKetPair(data);\n      runInAction(() => {\n        this.keyPair = keyPair;\n      });\n    } catch (error) {\n      displayError(error);\n    }\n  };\n\n  handleCancel = () => {\n    this.keyPair = undefined;\n    const onCancel = this.props.onCancel;\n\n    if (onCancel) return onCancel();\n\n    return undefined;\n  };\n\n  handleDownload = () => {\n    const keyPair = this.keyPair;\n    const downloadLink = document.createElement('a');\n    downloadLink.setAttribute('href', `data:application/octet-stream,${encodeURIComponent(keyPair.privateKey)}`);\n    downloadLink.setAttribute('download', `${keyPair.name}.pem`);\n    downloadLink.click();\n  };\n\n  render() {\n    const keyPair = this.keyPair;\n    return keyPair ? this.renderPrivateKey() : this.renderForm();\n  }\n\n  renderForm() {\n    const form = this.form;\n    return (\n      <Form form={form} onCancel={this.handleCancel} onSuccess={this.handleCreate}>\n        {({ processing, /* onSubmit, */ onCancel }) => (\n          <>\n            <Input field={form.$('name')} className=\"mb3\" />\n            <TextArea field={form.$('desc')} />\n\n            <Button floated=\"right\" className=\"ml2\" primary content=\"Create Key\" disabled={processing} type=\"submit\" />\n            <Button floated=\"right\" className=\"ml2\" content=\"Cancel\" disabled={processing} onClick={onCancel} />\n          </>\n        )}\n      </Form>\n    );\n  }\n\n  renderPrivateKey() {\n    return (\n      <>\n        <Header>Private Key</Header>\n        <Message warning>\n          <Message.Header>Warning!</Message.Header>\n          <p>\n            This is your only chance to download the private key. The private key is secret information that should not\n            be shared with others. It should be stored and handled carefully.{' '}\n          </p>\n        </Message>\n        <div className=\"clearfix\">\n          <Button floated=\"right\" className=\"ml2\" content=\"Done\" onClick={this.handleCancel} />\n          <Button floated=\"left\" primary className=\"mr2\" content=\"Download\" onClick={this.handleDownload} />\n        </div>\n      </>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(KeyPairCreateForm, {\n  form: observable,\n  keyPair: observable,\n  keyPairsStore: computed,\n  handleCreate: action,\n  handleCancel: action,\n  handleDownload: action,\n});\n\nexport default inject('keyPairsStore')(withRouter(observer(KeyPairCreateForm)));\n"],"file":"KeyPairCreateForm.js"}