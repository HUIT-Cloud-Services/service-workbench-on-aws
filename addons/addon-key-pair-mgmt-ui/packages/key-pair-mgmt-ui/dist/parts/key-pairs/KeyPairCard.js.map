{"version":3,"sources":["../../../src/parts/key-pairs/KeyPairCard.js"],"names":["React","decorate","computed","observer","inject","Observer","withRouter","Header","Label","Popup","TextArea","Tab","Form","Icon","Segment","TimeAgo","CopyToClipboard","By","displaySuccess","KeyPairButtons","TabPaneWrapper","Component","render","props","children","KeyPairCard","keyPair","renderStatus","renderTitle","desc","renderTabs","renderButtons","panes","menuItem","renderPublicKey","renderPrivateKey","secondary","pointing","renderDesc","publicKey","cursor","status","statusInfo","color","display","tip","name","createdAt","createdBy","id"],"mappings":"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","sourcesContent":["/* eslint-disable max-classes-per-file */\nimport React from 'react';\nimport { decorate, computed } from 'mobx';\nimport { observer, inject, Observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { Header, Label, Popup, TextArea, Tab, Form, Icon, Segment } from 'semantic-ui-react';\nimport TimeAgo from 'react-timeago';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport By from '@aws-ee/base-ui/dist/parts/helpers/By';\nimport { displaySuccess } from '@aws-ee/base-ui/dist/helpers/notification';\n\nimport KeyPairButtons from './parts/KeyPairButtons';\n\n// This component is used with the TabPane to replace the default Segment wrapper since\n// we don't want to display the border.\n// eslint-disable-next-line react/prefer-stateless-function\nclass TabPaneWrapper extends React.Component {\n  render() {\n    return <>{this.props.children}</>;\n  }\n}\n\n// expected props\n// - keyPair (via prop)\nclass KeyPairCard extends React.Component {\n  get keyPair() {\n    return this.props.keyPair;\n  }\n\n  render() {\n    const keyPair = this.keyPair;\n\n    return (\n      <>\n        {this.renderStatus(keyPair)}\n        {this.renderTitle(keyPair)}\n        {keyPair.desc || 'No description was provided.'}\n        {this.renderTabs(keyPair)}\n      </>\n    );\n  }\n\n  renderButtons(keyPair) {\n    return <KeyPairButtons keyPair={keyPair} />;\n  }\n\n  renderTabs(keyPair) {\n    const panes = [\n      {\n        menuItem: 'Public Key',\n        render: () => (\n          <Tab.Pane attached={false} key=\"public-key\" as={TabPaneWrapper}>\n            <Observer>{() => this.renderPublicKey(keyPair)}</Observer>\n          </Tab.Pane>\n        ),\n      },\n      {\n        menuItem: 'Private Key',\n        render: () => (\n          <Tab.Pane attached={false} key=\"private-key\" as={TabPaneWrapper}>\n            <Observer>{() => this.renderPrivateKey()}</Observer>\n          </Tab.Pane>\n        ),\n      },\n    ];\n\n    return <Tab className=\"mt2\" menu={{ secondary: true, pointing: true }} renderActiveOnly panes={panes} />;\n  }\n\n  renderDesc(keyPair) {\n    return <p>{keyPair.desc || 'No description was provided.'}</p>;\n  }\n\n  renderPublicKey(keyPair) {\n    return (\n      <div className=\"mt2\">\n        <Form className=\"flex\">\n          <TextArea className=\"flex-auto\" rows={10} value={keyPair.publicKey} />\n          <Popup\n            content=\"Copy\"\n            trigger={\n              <CopyToClipboard\n                className=\"ml2 mr0 mt2\"\n                text={keyPair.publicKey}\n                style={{ cursor: 'pointer' }}\n                onCopy={() => displaySuccess('Copied to clipboard', 'Done')}\n              >\n                <Icon name=\"copy outline\" size=\"large\" />\n              </CopyToClipboard>\n            }\n          />\n        </Form>\n      </div>\n    );\n  }\n\n  renderPrivateKey() {\n    return (\n      <Segment placeholder>\n        <Header icon className=\"color-grey\">\n          <Icon name=\"key\" />\n          Not Available\n          <Header.Subheader>\n            The private key is only available for download at the time of creating a key. This application does not\n            store the private key.\n          </Header.Subheader>\n        </Header>\n      </Segment>\n    );\n  }\n\n  renderStatus(keyPair) {\n    const status = keyPair.statusInfo;\n\n    return (\n      <div style={{ cursor: 'default' }}>\n        <Popup\n          trigger={\n            <Label attached=\"top left\" size=\"mini\" color={status.color}>\n              {status.display}\n            </Label>\n          }\n        >\n          {status.tip}\n        </Popup>\n      </div>\n    );\n  }\n\n  renderTitle(keyPair) {\n    return (\n      <div className=\"clearfix flex\">\n        <Header as=\"h3\" className=\"mt1 flex-auto\">\n          {keyPair.name}\n          <Header.Subheader>\n            <span className=\"fs-8 color-grey\">\n              Created <TimeAgo date={keyPair.createdAt} className=\"mr2\" />{' '}\n              <By uid={keyPair.createdBy} className=\"mr2\" />\n            </span>\n            <span className=\"fs-8 color-grey mr2\"> {keyPair.id}</span>\n          </Header.Subheader>\n        </Header>\n        <KeyPairButtons keyPair={keyPair} />\n      </div>\n    );\n  }\n}\n\n// see https://medium.com/@mweststrate/mobx-4-better-simpler-faster-smaller-c1fbc08008da\ndecorate(KeyPairCard, {\n  keyPair: computed,\n});\n\nexport default inject()(withRouter(observer(KeyPairCard)));\n"],"file":"KeyPairCard.js"}