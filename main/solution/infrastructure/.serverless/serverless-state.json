{
  "service": {
    "service": "va-swb-infrastructure",
    "serviceObject": {
      "name": "va-swb-infrastructure"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\$\\{((((self|opt|deep|cf):)|file)((?!\\$\\{).)+?)}",
      "name": "aws",
      "region": "us-east-1",
      "profile": "galileo-common",
      "stackName": "e2etest-va-swb-infrastructure",
      "deploymentBucket": "684277579687-e2etest-va-swb-artifacts",
      "stackTags": {
        "Name": "e2etest-va-swb-infrastructure"
      },
      "deploymentBucketObject": {
        "name": "684277579687-e2etest-va-swb-artifacts",
        "serverSideEncryption": "AES256"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "Service-Workbench-on-AWS 1.0.0 swb e2etest Infrastructure",
        "Resources": {
          "LoggingBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "684277579687-e2etest-va-swb-logging",
              "AccessControl": "LogDeliveryWrite",
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              },
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "BlockPublicPolicy": true,
                "IgnorePublicAcls": true,
                "RestrictPublicBuckets": true
              }
            }
          },
          "LoggingBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "LoggingBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Sid": "Deny requests that do not use TLS",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Action": "s3:*",
                    "Resource": {
                      "Fn::Join": [
                        "/",
                        [
                          {
                            "Fn::GetAtt": [
                              "LoggingBucket",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    },
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  },
                  {
                    "Sid": "Deny requests that do not use SigV4",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Action": "s3:*",
                    "Resource": {
                      "Fn::Join": [
                        "/",
                        [
                          {
                            "Fn::GetAtt": [
                              "LoggingBucket",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    },
                    "Condition": {
                      "StringNotEquals": {
                        "s3:signatureversion": "AWS4-HMAC-SHA256"
                      }
                    }
                  }
                ]
              }
            }
          },
          "WebsiteBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "684277579687-e2etest-va-swb-website",
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              },
              "WebsiteConfiguration": {
                "IndexDocument": "index.html",
                "ErrorDocument": "index.html"
              },
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "BlockPublicPolicy": true,
                "IgnorePublicAcls": true,
                "RestrictPublicBuckets": true
              }
            }
          },
          "WebsiteBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "WebsiteBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Sid": "Allow CloudFront Origin Access Identity",
                    "Action": [
                      "s3:GetObject"
                    ],
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ",
                            {
                              "Ref": "CloudFrontOAI"
                            }
                          ]
                        ]
                      }
                    },
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:s3:::",
                            {
                              "Ref": "WebsiteBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ]
                  },
                  {
                    "Sid": "Deny requests that do not use TLS",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Action": "s3:*",
                    "Resource": {
                      "Fn::Join": [
                        "/",
                        [
                          {
                            "Fn::GetAtt": [
                              "WebsiteBucket",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    },
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  },
                  {
                    "Sid": "Deny requests that do not use SigV4",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Action": "s3:*",
                    "Resource": {
                      "Fn::Join": [
                        "/",
                        [
                          {
                            "Fn::GetAtt": [
                              "WebsiteBucket",
                              "Arn"
                            ]
                          },
                          "*"
                        ]
                      ]
                    },
                    "Condition": {
                      "StringNotEquals": {
                        "s3:signatureversion": "AWS4-HMAC-SHA256"
                      }
                    }
                  }
                ]
              }
            }
          },
          "WebsiteCloudFront": {
            "Type": "AWS::CloudFront::Distribution",
            "DependsOn": [
              "WebsiteBucket"
            ],
            "Properties": {
              "DistributionConfig": {
                "Comment": "CloudFront Distribution pointing to 684277579687-e2etest-va-swb-website",
                "Origins": [
                  {
                    "DomainName": {
                      "Fn::GetAtt": [
                        "WebsiteBucket",
                        "RegionalDomainName"
                      ]
                    },
                    "Id": "S3Origin",
                    "S3OriginConfig": {
                      "OriginAccessIdentity": {
                        "Fn::Join": [
                          "",
                          [
                            "origin-access-identity/cloudfront/",
                            {
                              "Ref": "CloudFrontOAI"
                            }
                          ]
                        ]
                      }
                    }
                  }
                ],
                "Enabled": true,
                "HttpVersion": "http2",
                "Aliases": {
                  "Fn::If": [
                    "UseCustomDomain",
                    [
                      ""
                    ],
                    {
                      "Ref": "AWS::NoValue"
                    }
                  ]
                },
                "ViewerCertificate": {
                  "Fn::If": [
                    "UseCustomDomain",
                    {
                      "AcmCertificateArn": "",
                      "MinimumProtocolVersion": "TLSv1.2_2018",
                      "SslSupportMethod": "sni-only"
                    },
                    {
                      "Ref": "AWS::NoValue"
                    }
                  ]
                },
                "DefaultRootObject": "index.html",
                "CustomErrorResponses": [
                  {
                    "ErrorCachingMinTTL": 300,
                    "ErrorCode": 404,
                    "ResponseCode": 200,
                    "ResponsePagePath": "/index.html"
                  },
                  {
                    "ErrorCachingMinTTL": 300,
                    "ErrorCode": 403,
                    "ResponseCode": 200,
                    "ResponsePagePath": "/index.html"
                  }
                ],
                "DefaultCacheBehavior": {
                  "DefaultTTL": 0,
                  "MinTTL": 0,
                  "MaxTTL": 0,
                  "AllowedMethods": [
                    "GET",
                    "HEAD",
                    "OPTIONS"
                  ],
                  "Compress": true,
                  "TargetOriginId": "S3Origin",
                  "ForwardedValues": {
                    "QueryString": true,
                    "Cookies": {
                      "Forward": "none"
                    }
                  },
                  "ViewerProtocolPolicy": "redirect-to-https"
                },
                "PriceClass": "PriceClass_100",
                "Logging": {
                  "Bucket": "684277579687-e2etest-va-swb-logging.s3.amazonaws.com",
                  "Prefix": "cloudfront/"
                }
              }
            }
          },
          "CloudFrontOAI": {
            "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
            "Properties": {
              "CloudFrontOriginAccessIdentityConfig": {
                "Comment": "OAI for 684277579687-e2etest-va-swb-website"
              }
            }
          },
          "HostedZone": {
            "Type": "AWS::Route53::HostedZone",
            "Condition": "UseCustomDomain",
            "DeletionPolicy": "Retain",
            "Properties": {
              "Name": ""
            }
          },
          "DomainRecord": {
            "Type": "AWS::Route53::RecordSetGroup",
            "Condition": "UseCustomDomain",
            "Properties": {
              "HostedZoneId": {
                "Ref": "HostedZone"
              },
              "RecordSets": [
                {
                  "Name": "",
                  "Type": "A",
                  "AliasTarget": {
                    "HostedZoneId": "Z2FDTNDATAQYW2",
                    "DNSName": {
                      "Fn::GetAtt": [
                        "WebsiteCloudFront",
                        "DomainName"
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "684277579687-e2etest-va-swb-artifacts"
          },
          "WebsiteUrl": {
            "Description": "URL for the main website hosted on S3 via CloudFront",
            "Value": {
              "Fn::If": [
                "UseCustomDomain",
                "https://",
                {
                  "Fn::Join": [
                    "",
                    [
                      "https://",
                      {
                        "Fn::GetAtt": [
                          "WebsiteCloudFront",
                          "DomainName"
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          },
          "WebsiteBucket": {
            "Description": "The bucket name of the static website",
            "Value": {
              "Ref": "WebsiteBucket"
            }
          },
          "LoggingBucket": {
            "Description": "The bucket name for S3 access logging",
            "Value": {
              "Ref": "LoggingBucket"
            }
          },
          "CloudFrontId": {
            "Description": "Id of the CloudFront distribution",
            "Value": {
              "Ref": "WebsiteCloudFront"
            }
          },
          "HostedZoneId": {
            "Description": "Id of the hosted zone created when a custom domain is used",
            "Value": {
              "Fn::If": [
                "UseCustomDomain",
                {
                  "Ref": "HostedZone"
                },
                "NotSetAsCustomDomainDisabled"
              ]
            }
          }
        },
        "Conditions": {
          "IsDev": {
            "Fn::Equals": [
              "e2eTest",
              "dev"
            ]
          },
          "UseCustomDomain": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  "",
                  ""
                ]
              }
            ]
          }
        }
      }
    },
    "custom": {
      "settings": {
        "version": "1.0.0",
        "regionShortNamesMap": {
          "us-east-2": "oh",
          "us-east-1": "va",
          "us-west-1": "ca",
          "us-west-2": "or",
          "ap-east-1": "hk",
          "ap-south-1": "mum",
          "ap-northeast-3": "osa",
          "ap-northeast-2": "sel",
          "ap-southeast-1": "sg",
          "ap-southeast-2": "syd",
          "ap-northeast-1": "ty",
          "ca-central-1": "ca",
          "cn-north-1": "cn",
          "cn-northwest-1": "nx",
          "eu-central-1": "fr",
          "eu-west-1": "irl",
          "eu-west-2": "ldn",
          "eu-west-3": "par",
          "eu-north-1": "sth",
          "me-south-1": "bhr",
          "sa-east-1": "sao",
          "us-gov-east-1": "gce",
          "us-gov-west-1": "gcw"
        },
        "awsRegion": "us-east-1",
        "awsRegionShortName": "va",
        "namespace": "e2etest-va-swb",
        "globalNamespace": "684277579687-e2etest-va-swb",
        "deploymentBucketName": "684277579687-e2etest-va-swb-artifacts",
        "deploymentBucketPolicy": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "Deny requests that do not use TLS",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:*",
              "Resource": "arn:aws:s3:::684277579687-e2etest-va-swb-artifacts/*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              }
            },
            {
              "Sid": "Deny requests that do not use SigV4",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:*",
              "Resource": "arn:aws:s3:::684277579687-e2etest-va-swb-artifacts/*",
              "Condition": {
                "StringNotEquals": {
                  "s3:signatureversion": "AWS4-HMAC-SHA256"
                }
              }
            }
          ]
        },
        "environmentsBootstrapBucketName": "684277579687-e2etest-va-swb-environments-bootstrap-scripts",
        "environmentsBootstrapBucketPrefix": "environment-files",
        "envName": "e2etest",
        "envType": "e2eTest",
        "dbPrefix": "e2etest-va-swb",
        "paramStoreRoot": "e2etest/swb",
        "rootUserName": "root",
        "rootUserFirstName": "root",
        "rootUserLastName": "root",
        "rootUserEmail": "root@example.com",
        "enableExternalResearchers": false,
        "localRoleAutoAdjustTrust": true,
        "domainName": "",
        "certificateArn": "",
        "hostedZoneId": "",
        "envMgmtRoleName": "e2etest-va-swb-EnvMgmt",
        "launchConstraintRolePrefix": "e2etest-va-swb-*",
        "launchConstraintRoleName": "e2etest-va-swb-LaunchConstraint",
        "launchConstraintPolicyPrefix": "*",
        "enableBuiltInWorkspaces": false,
        "auditQldbName": "e2etest-va-swb-audit",
        "createServiceCatalogPortfolio": true,
        "websiteBucketName": "684277579687-e2etest-va-swb-website",
        "loggingBucketName": "684277579687-e2etest-va-swb-logging",
        "solutionName": "swb",
        "awsProfile": "galileo-common",
        "awsAccountInfo": {
          "awsAccountId": "684277579687"
        }
      },
      "tags": {
        "$ref": "$[\"service\"][\"provider\"][\"stackTags\"]"
      },
      "deploymentBucket": {
        "policy": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "Deny requests that do not use TLS",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:*",
              "Resource": "arn:aws:s3:::684277579687-e2etest-va-swb-artifacts/*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              }
            },
            {
              "Sid": "Deny requests that do not use SigV4",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:*",
              "Resource": "arn:aws:s3:::684277579687-e2etest-va-swb-artifacts/*",
              "Condition": {
                "StringNotEquals": {
                  "s3:signatureversion": "AWS4-HMAC-SHA256"
                }
              }
            }
          ]
        },
        "versioning": false
      }
    },
    "plugins": [
      "serverless-deployment-bucket"
    ],
    "pluginsData": {},
    "functions": {},
    "resources": {
      "Description": "Service-Workbench-on-AWS 1.0.0 swb e2etest Infrastructure",
      "Conditions": {
        "IsDev": {
          "Fn::Equals": [
            "e2eTest",
            "dev"
          ]
        },
        "UseCustomDomain": {
          "Fn::Not": [
            {
              "Fn::Equals": [
                "",
                ""
              ]
            }
          ]
        }
      },
      "Resources": {
        "LoggingBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "684277579687-e2etest-va-swb-logging",
            "AccessControl": "LogDeliveryWrite",
            "BucketEncryption": {
              "ServerSideEncryptionConfiguration": [
                {
                  "ServerSideEncryptionByDefault": {
                    "SSEAlgorithm": "AES256"
                  }
                }
              ]
            },
            "PublicAccessBlockConfiguration": {
              "BlockPublicAcls": true,
              "BlockPublicPolicy": true,
              "IgnorePublicAcls": true,
              "RestrictPublicBuckets": true
            }
          }
        },
        "LoggingBucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "LoggingBucket"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "Deny requests that do not use TLS",
                  "Effect": "Deny",
                  "Principal": "*",
                  "Action": "s3:*",
                  "Resource": {
                    "Fn::Join": [
                      "/",
                      [
                        {
                          "Fn::GetAtt": [
                            "LoggingBucket",
                            "Arn"
                          ]
                        },
                        "*"
                      ]
                    ]
                  },
                  "Condition": {
                    "Bool": {
                      "aws:SecureTransport": false
                    }
                  }
                },
                {
                  "Sid": "Deny requests that do not use SigV4",
                  "Effect": "Deny",
                  "Principal": "*",
                  "Action": "s3:*",
                  "Resource": {
                    "Fn::Join": [
                      "/",
                      [
                        {
                          "Fn::GetAtt": [
                            "LoggingBucket",
                            "Arn"
                          ]
                        },
                        "*"
                      ]
                    ]
                  },
                  "Condition": {
                    "StringNotEquals": {
                      "s3:signatureversion": "AWS4-HMAC-SHA256"
                    }
                  }
                }
              ]
            }
          }
        },
        "WebsiteBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "684277579687-e2etest-va-swb-website",
            "BucketEncryption": {
              "ServerSideEncryptionConfiguration": [
                {
                  "ServerSideEncryptionByDefault": {
                    "SSEAlgorithm": "AES256"
                  }
                }
              ]
            },
            "WebsiteConfiguration": {
              "IndexDocument": "index.html",
              "ErrorDocument": "index.html"
            },
            "PublicAccessBlockConfiguration": {
              "BlockPublicAcls": true,
              "BlockPublicPolicy": true,
              "IgnorePublicAcls": true,
              "RestrictPublicBuckets": true
            }
          }
        },
        "WebsiteBucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "WebsiteBucket"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "Allow CloudFront Origin Access Identity",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ",
                          {
                            "Ref": "CloudFrontOAI"
                          }
                        ]
                      ]
                    }
                  },
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "WebsiteBucket"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Sid": "Deny requests that do not use TLS",
                  "Effect": "Deny",
                  "Principal": "*",
                  "Action": "s3:*",
                  "Resource": {
                    "Fn::Join": [
                      "/",
                      [
                        {
                          "Fn::GetAtt": [
                            "WebsiteBucket",
                            "Arn"
                          ]
                        },
                        "*"
                      ]
                    ]
                  },
                  "Condition": {
                    "Bool": {
                      "aws:SecureTransport": false
                    }
                  }
                },
                {
                  "Sid": "Deny requests that do not use SigV4",
                  "Effect": "Deny",
                  "Principal": "*",
                  "Action": "s3:*",
                  "Resource": {
                    "Fn::Join": [
                      "/",
                      [
                        {
                          "Fn::GetAtt": [
                            "WebsiteBucket",
                            "Arn"
                          ]
                        },
                        "*"
                      ]
                    ]
                  },
                  "Condition": {
                    "StringNotEquals": {
                      "s3:signatureversion": "AWS4-HMAC-SHA256"
                    }
                  }
                }
              ]
            }
          }
        },
        "WebsiteCloudFront": {
          "Type": "AWS::CloudFront::Distribution",
          "DependsOn": [
            "WebsiteBucket"
          ],
          "Properties": {
            "DistributionConfig": {
              "Comment": "CloudFront Distribution pointing to 684277579687-e2etest-va-swb-website",
              "Origins": [
                {
                  "DomainName": {
                    "Fn::GetAtt": [
                      "WebsiteBucket",
                      "RegionalDomainName"
                    ]
                  },
                  "Id": "S3Origin",
                  "S3OriginConfig": {
                    "OriginAccessIdentity": {
                      "Fn::Join": [
                        "",
                        [
                          "origin-access-identity/cloudfront/",
                          {
                            "Ref": "CloudFrontOAI"
                          }
                        ]
                      ]
                    }
                  }
                }
              ],
              "Enabled": true,
              "HttpVersion": "http2",
              "Aliases": {
                "Fn::If": [
                  "UseCustomDomain",
                  [
                    ""
                  ],
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              },
              "ViewerCertificate": {
                "Fn::If": [
                  "UseCustomDomain",
                  {
                    "AcmCertificateArn": "",
                    "MinimumProtocolVersion": "TLSv1.2_2018",
                    "SslSupportMethod": "sni-only"
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              },
              "DefaultRootObject": "index.html",
              "CustomErrorResponses": [
                {
                  "ErrorCachingMinTTL": 300,
                  "ErrorCode": 404,
                  "ResponseCode": 200,
                  "ResponsePagePath": "/index.html"
                },
                {
                  "ErrorCachingMinTTL": 300,
                  "ErrorCode": 403,
                  "ResponseCode": 200,
                  "ResponsePagePath": "/index.html"
                }
              ],
              "DefaultCacheBehavior": {
                "DefaultTTL": 0,
                "MinTTL": 0,
                "MaxTTL": 0,
                "AllowedMethods": [
                  "GET",
                  "HEAD",
                  "OPTIONS"
                ],
                "Compress": true,
                "TargetOriginId": "S3Origin",
                "ForwardedValues": {
                  "QueryString": true,
                  "Cookies": {
                    "Forward": "none"
                  }
                },
                "ViewerProtocolPolicy": "redirect-to-https"
              },
              "PriceClass": "PriceClass_100",
              "Logging": {
                "Bucket": "684277579687-e2etest-va-swb-logging.s3.amazonaws.com",
                "Prefix": "cloudfront/"
              }
            }
          }
        },
        "CloudFrontOAI": {
          "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
          "Properties": {
            "CloudFrontOriginAccessIdentityConfig": {
              "Comment": "OAI for 684277579687-e2etest-va-swb-website"
            }
          }
        },
        "HostedZone": {
          "Type": "AWS::Route53::HostedZone",
          "Condition": "UseCustomDomain",
          "DeletionPolicy": "Retain",
          "Properties": {
            "Name": ""
          }
        },
        "DomainRecord": {
          "Type": "AWS::Route53::RecordSetGroup",
          "Condition": "UseCustomDomain",
          "Properties": {
            "HostedZoneId": {
              "Ref": "HostedZone"
            },
            "RecordSets": [
              {
                "Name": "",
                "Type": "A",
                "AliasTarget": {
                  "HostedZoneId": "Z2FDTNDATAQYW2",
                  "DNSName": {
                    "Fn::GetAtt": [
                      "WebsiteCloudFront",
                      "DomainName"
                    ]
                  }
                }
              }
            ]
          }
        }
      },
      "Outputs": {
        "WebsiteUrl": {
          "Description": "URL for the main website hosted on S3 via CloudFront",
          "Value": {
            "Fn::If": [
              "UseCustomDomain",
              "https://",
              {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Fn::GetAtt": [
                        "WebsiteCloudFront",
                        "DomainName"
                      ]
                    }
                  ]
                ]
              }
            ]
          }
        },
        "WebsiteBucket": {
          "Description": "The bucket name of the static website",
          "Value": {
            "Ref": "WebsiteBucket"
          }
        },
        "LoggingBucket": {
          "Description": "The bucket name for S3 access logging",
          "Value": {
            "Ref": "LoggingBucket"
          }
        },
        "CloudFrontId": {
          "Description": "Id of the CloudFront distribution",
          "Value": {
            "Ref": "WebsiteCloudFront"
          }
        },
        "HostedZoneId": {
          "Description": "Id of the hosted zone created when a custom domain is used",
          "Value": {
            "Fn::If": [
              "UseCustomDomain",
              {
                "Ref": "HostedZone"
              },
              "NotSetAsCustomDomainDisabled"
            ]
          }
        }
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/va-swb-infrastructure/e2etest/1611872212873-2021-01-28T22:16:52.873Z",
    "artifact": ""
  }
}