{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Service-Workbench-on-AWS 1.0.0 swb e2etest Infrastructure",
  "Resources": {
    "LoggingBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "684277579687-e2etest-va-swb-logging",
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      }
    },
    "LoggingBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "LoggingBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Sid": "Deny requests that do not use TLS",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:*",
              "Resource": {
                "Fn::Join": [
                  "/",
                  [
                    {
                      "Fn::GetAtt": [
                        "LoggingBucket",
                        "Arn"
                      ]
                    },
                    "*"
                  ]
                ]
              },
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            },
            {
              "Sid": "Deny requests that do not use SigV4",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:*",
              "Resource": {
                "Fn::Join": [
                  "/",
                  [
                    {
                      "Fn::GetAtt": [
                        "LoggingBucket",
                        "Arn"
                      ]
                    },
                    "*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:signatureversion": "AWS4-HMAC-SHA256"
                }
              }
            }
          ]
        }
      }
    },
    "WebsiteBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "684277579687-e2etest-va-swb-website",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "index.html"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      }
    },
    "WebsiteBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "WebsiteBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Sid": "Allow CloudFront Origin Access Identity",
              "Action": [
                "s3:GetObject"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ",
                      {
                        "Ref": "CloudFrontOAI"
                      }
                    ]
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "WebsiteBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "Deny requests that do not use TLS",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:*",
              "Resource": {
                "Fn::Join": [
                  "/",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebsiteBucket",
                        "Arn"
                      ]
                    },
                    "*"
                  ]
                ]
              },
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            },
            {
              "Sid": "Deny requests that do not use SigV4",
              "Effect": "Deny",
              "Principal": "*",
              "Action": "s3:*",
              "Resource": {
                "Fn::Join": [
                  "/",
                  [
                    {
                      "Fn::GetAtt": [
                        "WebsiteBucket",
                        "Arn"
                      ]
                    },
                    "*"
                  ]
                ]
              },
              "Condition": {
                "StringNotEquals": {
                  "s3:signatureversion": "AWS4-HMAC-SHA256"
                }
              }
            }
          ]
        }
      }
    },
    "WebsiteCloudFront": {
      "Type": "AWS::CloudFront::Distribution",
      "DependsOn": [
        "WebsiteBucket"
      ],
      "Properties": {
        "DistributionConfig": {
          "Comment": "CloudFront Distribution pointing to 684277579687-e2etest-va-swb-website",
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "WebsiteBucket",
                  "RegionalDomainName"
                ]
              },
              "Id": "S3Origin",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "CloudFrontOAI"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Enabled": true,
          "HttpVersion": "http2",
          "Aliases": {
            "Fn::If": [
              "UseCustomDomain",
              [
                ""
              ],
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          "ViewerCertificate": {
            "Fn::If": [
              "UseCustomDomain",
              {
                "AcmCertificateArn": "",
                "MinimumProtocolVersion": "TLSv1.2_2018",
                "SslSupportMethod": "sni-only"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          "DefaultRootObject": "index.html",
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 300,
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            },
            {
              "ErrorCachingMinTTL": 300,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            }
          ],
          "DefaultCacheBehavior": {
            "DefaultTTL": 0,
            "MinTTL": 0,
            "MaxTTL": 0,
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS"
            ],
            "Compress": true,
            "TargetOriginId": "S3Origin",
            "ForwardedValues": {
              "QueryString": true,
              "Cookies": {
                "Forward": "none"
              }
            },
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "PriceClass": "PriceClass_100",
          "Logging": {
            "Bucket": "684277579687-e2etest-va-swb-logging.s3.amazonaws.com",
            "Prefix": "cloudfront/"
          }
        }
      }
    },
    "CloudFrontOAI": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "OAI for 684277579687-e2etest-va-swb-website"
        }
      }
    },
    "HostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Condition": "UseCustomDomain",
      "DeletionPolicy": "Retain",
      "Properties": {
        "Name": ""
      }
    },
    "DomainRecord": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Condition": "UseCustomDomain",
      "Properties": {
        "HostedZoneId": {
          "Ref": "HostedZone"
        },
        "RecordSets": [
          {
            "Name": "",
            "Type": "A",
            "AliasTarget": {
              "HostedZoneId": "Z2FDTNDATAQYW2",
              "DNSName": {
                "Fn::GetAtt": [
                  "WebsiteCloudFront",
                  "DomainName"
                ]
              }
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "684277579687-e2etest-va-swb-artifacts"
    },
    "WebsiteUrl": {
      "Description": "URL for the main website hosted on S3 via CloudFront",
      "Value": {
        "Fn::If": [
          "UseCustomDomain",
          "https://",
          {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Fn::GetAtt": [
                    "WebsiteCloudFront",
                    "DomainName"
                  ]
                }
              ]
            ]
          }
        ]
      }
    },
    "WebsiteBucket": {
      "Description": "The bucket name of the static website",
      "Value": {
        "Ref": "WebsiteBucket"
      }
    },
    "LoggingBucket": {
      "Description": "The bucket name for S3 access logging",
      "Value": {
        "Ref": "LoggingBucket"
      }
    },
    "CloudFrontId": {
      "Description": "Id of the CloudFront distribution",
      "Value": {
        "Ref": "WebsiteCloudFront"
      }
    },
    "HostedZoneId": {
      "Description": "Id of the hosted zone created when a custom domain is used",
      "Value": {
        "Fn::If": [
          "UseCustomDomain",
          {
            "Ref": "HostedZone"
          },
          "NotSetAsCustomDomainDisabled"
        ]
      }
    }
  },
  "Conditions": {
    "IsDev": {
      "Fn::Equals": [
        "e2eTest",
        "dev"
      ]
    },
    "UseCustomDomain": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            ""
          ]
        }
      ]
    }
  }
}